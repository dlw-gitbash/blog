{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/yilia/source/main.a5fda8.css","path":"main.a5fda8.css","modified":0,"renderable":1},{"_id":"themes/yilia/source/main.a5fda8.js","path":"main.a5fda8.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/mobile.a2c207.js","path":"mobile.a2c207.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/slider.27463f.js","path":"slider.27463f.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/fonts/default-skin.b257fa.svg","path":"fonts/default-skin.b257fa.svg","modified":0,"renderable":1},{"_id":"themes/yilia/source/fonts/fonteditor.3da1ef.woff","path":"fonts/fonteditor.3da1ef.woff","modified":0,"renderable":1},{"_id":"themes/yilia/source/fonts/fonteditor.3e0d4a.svg","path":"fonts/fonteditor.3e0d4a.svg","modified":0,"renderable":1},{"_id":"themes/yilia/source/fonts/fonteditor.86c132.eot","path":"fonts/fonteditor.86c132.eot","modified":0,"renderable":1},{"_id":"themes/yilia/source/fonts/fonteditor.bbc4b5.woff2","path":"fonts/fonteditor.bbc4b5.woff2","modified":0,"renderable":1},{"_id":"themes/yilia/source/fonts/fonteditor.fe4d8a.ttf","path":"fonts/fonteditor.fe4d8a.ttf","modified":0,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.16acc2.ttf","path":"fonts/iconfont.16acc2.ttf","modified":0,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.45d7ee.svg","path":"fonts/iconfont.45d7ee.svg","modified":0,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.8c627f.woff","path":"fonts/iconfont.8c627f.woff","modified":0,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.b322fa.eot","path":"fonts/iconfont.b322fa.eot","modified":0,"renderable":1},{"_id":"themes/yilia/source/fonts/tooltip.4004ff.svg","path":"fonts/tooltip.4004ff.svg","modified":0,"renderable":1},{"_id":"themes/yilia/source/gitment/APlayer.min.js","path":"gitment/APlayer.min.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/avatar.gif","path":"img/avatar.gif","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/biubiubiu.gif","path":"img/biubiubiu.gif","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/biubiubiu.png","path":"img/biubiubiu.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/decade.jpg","path":"img/decade.jpg","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/decade_ico.jpg","path":"img/decade_ico.jpg","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/default-skin.png","path":"img/default-skin.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/forkme.png","path":"img/forkme.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/gitee.svg","path":"img/gitee.svg","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/ico.jpg","path":"img/ico.jpg","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/preloader.gif","path":"img/preloader.gif","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/left.jpg","path":"img/left.jpg","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/right.jpg","path":"img/right.jpg","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/scrollbar_arrow.png","path":"img/scrollbar_arrow.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/lib/busuanzi.pure.js","path":"lib/busuanzi.pure.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/lib/clickLove.js","path":"lib/clickLove.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/lib/default.css","path":"lib/default.css","modified":0,"renderable":1},{"_id":"themes/yilia/source/lib/giteement.browser.js","path":"lib/giteement.browser.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/lib/gitment.css","path":"lib/gitment.css","modified":0,"renderable":1},{"_id":"themes/yilia/source/lib/gitment.js","path":"lib/gitment.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/lib/gitment.js.bak2","path":"lib/gitment.js.bak2","modified":0,"renderable":1},{"_id":"themes/yilia/source/lib/jquery-2.1.4.min.js","path":"lib/jquery-2.1.4.min.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/lib/gitment.js.bak","path":"lib/gitment.js.bak","modified":0,"renderable":1},{"_id":"themes/yilia/source/lib/oauthcallback.browser.js","path":"lib/oauthcallback.browser.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/lib/pace.min.js","path":"lib/pace.min.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/lib/snow.js","path":"lib/snow.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/epsilon2_1/package-lock.json","path":"live2d_models/epsilon2_1/package-lock.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/epsilon2_1/package.json","path":"live2d_models/epsilon2_1/package.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/chitose/package-lock.json","path":"live2d_models/chitose/package-lock.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/chitose/package.json","path":"live2d_models/chitose/package.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/gf/package-lock.json","path":"live2d_models/gf/package-lock.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/gf/package.json","path":"live2d_models/gf/package.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/package-lock.json","path":"live2d_models/haru/package-lock.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/package.json","path":"live2d_models/haru/package.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haruto/package.json","path":"live2d_models/haruto/package.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haruto/package-lock.json","path":"live2d_models/haruto/package-lock.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/hibiki/package-lock.json","path":"live2d_models/hibiki/package-lock.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/hibiki/package.json","path":"live2d_models/hibiki/package.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/izumi/package-lock.json","path":"live2d_models/izumi/package-lock.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/izumi/package.json","path":"live2d_models/izumi/package.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/hijiki/package-lock.json","path":"live2d_models/hijiki/package-lock.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/hijiki/package.json","path":"live2d_models/hijiki/package.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/koharu/package-lock.json","path":"live2d_models/koharu/package-lock.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/koharu/package.json","path":"live2d_models/koharu/package.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/miku/package-lock.json","path":"live2d_models/miku/package-lock.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/miku/package.json","path":"live2d_models/miku/package.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nico/package-lock.json","path":"live2d_models/nico/package-lock.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nico/package.json","path":"live2d_models/nico/package.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/ni-j/package.json","path":"live2d_models/ni-j/package.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/ni-j/package-lock.json","path":"live2d_models/ni-j/package-lock.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nietzsche/package-lock.json","path":"live2d_models/nietzsche/package-lock.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nietzsche/package.json","path":"live2d_models/nietzsche/package.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nipsilon/package-lock.json","path":"live2d_models/nipsilon/package-lock.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nipsilon/package.json","path":"live2d_models/nipsilon/package.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nito/package.json","path":"live2d_models/nito/package.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/shizuku/package-lock.json","path":"live2d_models/shizuku/package-lock.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/shizuku/package.json","path":"live2d_models/shizuku/package.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nito/package-lock.json","path":"live2d_models/nito/package-lock.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/tororo/package-lock.json","path":"live2d_models/tororo/package-lock.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/tororo/package.json","path":"live2d_models/tororo/package.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/tsumiki/package-lock.json","path":"live2d_models/tsumiki/package-lock.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/tsumiki/package.json","path":"live2d_models/tsumiki/package.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/unitychan/package-lock.json","path":"live2d_models/unitychan/package-lock.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/unitychan/package.json","path":"live2d_models/unitychan/package.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/wanko/package-lock.json","path":"live2d_models/wanko/package-lock.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/wanko/package.json","path":"live2d_models/wanko/package.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/z16/package-lock.json","path":"live2d_models/z16/package-lock.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/z16/package.json","path":"live2d_models/z16/package.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/plugins/TweenMax/HoverImg.js","path":"plugins/TweenMax/HoverImg.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/plugins/TweenMax/TweenMax.min.js","path":"plugins/TweenMax/TweenMax.min.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/plugins/TweenMax/charming.min.js","path":"plugins/TweenMax/charming.min.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/plugins/activate-power-mode/activate-power-mode.js","path":"plugins/activate-power-mode/activate-power-mode.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/plugins/live2d-widget.js/L2Dwidget.0.min.js.map","path":"plugins/live2d-widget.js/L2Dwidget.0.min.js.map","modified":0,"renderable":1},{"_id":"themes/yilia/source/plugins/live2d-widget.js/L2Dwidget.0.min.js","path":"plugins/live2d-widget.js/L2Dwidget.0.min.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/plugins/live2d-widget.js/L2Dwidget.common.js","path":"plugins/live2d-widget.js/L2Dwidget.common.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/plugins/live2d-widget.js/L2Dwidget.common.js.map","path":"plugins/live2d-widget.js/L2Dwidget.common.js.map","modified":0,"renderable":1},{"_id":"themes/yilia/source/plugins/live2d-widget.js/L2Dwidget.min.js","path":"plugins/live2d-widget.js/L2Dwidget.min.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/plugins/live2d-widget.js/L2Dwidget.min.js.map","path":"plugins/live2d-widget.js/L2Dwidget.min.js.map","modified":0,"renderable":1},{"_id":"themes/yilia/source/plugins/live2d-widget.js/manifest.json","path":"plugins/live2d-widget.js/manifest.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/plugins/ribbon.js/ribbon.js","path":"plugins/ribbon.js/ribbon.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/plugins/ribbon.js/ribbon.min.js","path":"plugins/ribbon.js/ribbon.min.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/epsilon2_1/assets/Epsilon2.1.model.json","path":"live2d_models/epsilon2_1/assets/Epsilon2.1.model.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/epsilon2_1/assets/Epsilon2.1.physics.json","path":"live2d_models/epsilon2_1/assets/Epsilon2.1.physics.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/chitose/assets/chitose.model.json","path":"live2d_models/chitose/assets/chitose.model.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/chitose/assets/chitose.physics.json","path":"live2d_models/chitose/assets/chitose.physics.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/chitose/assets/chitose.pose.json","path":"live2d_models/chitose/assets/chitose.pose.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/gf/assets/Gantzert_Felixander.model.json","path":"live2d_models/gf/assets/Gantzert_Felixander.model.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haruto/assets/haruto.physics.json","path":"live2d_models/haruto/assets/haruto.physics.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haruto/assets/haruto.model.json","path":"live2d_models/haruto/assets/haruto.model.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/hibiki/assets/hibiki.model.json","path":"live2d_models/hibiki/assets/hibiki.model.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/hibiki/assets/hibiki.physics.json","path":"live2d_models/hibiki/assets/hibiki.physics.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/izumi/assets/izumi.model.json","path":"live2d_models/izumi/assets/izumi.model.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/izumi/assets/izumi.physics.json","path":"live2d_models/izumi/assets/izumi.physics.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/hijiki/assets/hijiki.model.json","path":"live2d_models/hijiki/assets/hijiki.model.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/hijiki/assets/hijiki.pose.json","path":"live2d_models/hijiki/assets/hijiki.pose.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/koharu/assets/koharu.model.json","path":"live2d_models/koharu/assets/koharu.model.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/koharu/assets/koharu.physics.json","path":"live2d_models/koharu/assets/koharu.physics.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/miku/assets/miku.model.json","path":"live2d_models/miku/assets/miku.model.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/miku/assets/miku.physics.json","path":"live2d_models/miku/assets/miku.physics.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nico/assets/nico.model.json","path":"live2d_models/nico/assets/nico.model.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nico/assets/nico.physics.json","path":"live2d_models/nico/assets/nico.physics.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nico/assets/nico.pose.json","path":"live2d_models/nico/assets/nico.pose.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/ni-j/assets/ni-j.model.json","path":"live2d_models/ni-j/assets/ni-j.model.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/ni-j/assets/ni-j.physics.json","path":"live2d_models/ni-j/assets/ni-j.physics.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/ni-j/assets/ni-j.pose.json","path":"live2d_models/ni-j/assets/ni-j.pose.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nietzsche/assets/nietzche.model.json","path":"live2d_models/nietzsche/assets/nietzche.model.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nietzsche/assets/nietzsche.physics.json","path":"live2d_models/nietzsche/assets/nietzsche.physics.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nietzsche/assets/nietzsche.pose.json","path":"live2d_models/nietzsche/assets/nietzsche.pose.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nipsilon/assets/nipsilon.model.json","path":"live2d_models/nipsilon/assets/nipsilon.model.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nipsilon/assets/nipsilon.physics.json","path":"live2d_models/nipsilon/assets/nipsilon.physics.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nipsilon/assets/nipsilon.pose.json","path":"live2d_models/nipsilon/assets/nipsilon.pose.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nito/assets/nito.model.json","path":"live2d_models/nito/assets/nito.model.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nito/assets/nito.physics.json","path":"live2d_models/nito/assets/nito.physics.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nito/assets/nito.pose.json","path":"live2d_models/nito/assets/nito.pose.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/shizuku.model.json","path":"live2d_models/shizuku/assets/shizuku.model.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/shizuku.physics.json","path":"live2d_models/shizuku/assets/shizuku.physics.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/shizuku.pose.json","path":"live2d_models/shizuku/assets/shizuku.pose.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/tororo/assets/tororo.model.json","path":"live2d_models/tororo/assets/tororo.model.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/tororo/assets/tororo.pose.json","path":"live2d_models/tororo/assets/tororo.pose.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/tsumiki.model.json","path":"live2d_models/tsumiki/assets/tsumiki.model.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/tsumiki.physics.json","path":"live2d_models/tsumiki/assets/tsumiki.physics.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/unitychan/assets/unitychan.model.json","path":"live2d_models/unitychan/assets/unitychan.model.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/unitychan/assets/unitychan.physics.json","path":"live2d_models/unitychan/assets/unitychan.physics.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/wanko/assets/wanko.model.json","path":"live2d_models/wanko/assets/wanko.model.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/z16/assets/z16.model.json","path":"live2d_models/z16/assets/z16.model.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/z16/assets/z16.physics.json","path":"live2d_models/z16/assets/z16.physics.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/plugins/ribbon.js/demo/index.html","path":"plugins/ribbon.js/demo/index.html","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/epsilon2_1/assets/exp/f01.exp.json","path":"live2d_models/epsilon2_1/assets/exp/f01.exp.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/epsilon2_1/assets/exp/f02.exp.json","path":"live2d_models/epsilon2_1/assets/exp/f02.exp.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/epsilon2_1/assets/exp/f03.exp.json","path":"live2d_models/epsilon2_1/assets/exp/f03.exp.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/epsilon2_1/assets/exp/f04.exp.json","path":"live2d_models/epsilon2_1/assets/exp/f04.exp.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/epsilon2_1/assets/exp/f05.exp.json","path":"live2d_models/epsilon2_1/assets/exp/f05.exp.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/epsilon2_1/assets/exp/f06.exp.json","path":"live2d_models/epsilon2_1/assets/exp/f06.exp.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/epsilon2_1/assets/exp/f07.exp.json","path":"live2d_models/epsilon2_1/assets/exp/f07.exp.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/epsilon2_1/assets/exp/f08.exp.json","path":"live2d_models/epsilon2_1/assets/exp/f08.exp.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_idle_01.mtn","path":"live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_idle_01.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_01.mtn","path":"live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_01.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_02.mtn","path":"live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_02.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_03.mtn","path":"live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_03.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_04.mtn","path":"live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_04.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_05.mtn","path":"live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_05.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_06.mtn","path":"live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_06.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_07.mtn","path":"live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_07.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_08.mtn","path":"live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_08.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_sp_01.mtn","path":"live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_sp_01.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_sp_02.mtn","path":"live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_sp_02.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_sp_03.mtn","path":"live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_sp_03.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_sp_04.mtn","path":"live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_sp_04.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_sp_05.mtn","path":"live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_sp_05.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_shake_01.mtn","path":"live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_shake_01.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/epsilon2_1/assets/moc/Epsilon2.1.moc","path":"live2d_models/epsilon2_1/assets/moc/Epsilon2.1.moc","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/chitose/assets/exp/f01.exp.json","path":"live2d_models/chitose/assets/exp/f01.exp.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/chitose/assets/exp/f02.exp.json","path":"live2d_models/chitose/assets/exp/f02.exp.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/chitose/assets/exp/f03.exp.json","path":"live2d_models/chitose/assets/exp/f03.exp.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/chitose/assets/exp/f04.exp.json","path":"live2d_models/chitose/assets/exp/f04.exp.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/chitose/assets/exp/f05.exp.json","path":"live2d_models/chitose/assets/exp/f05.exp.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/chitose/assets/exp/f06.exp.json","path":"live2d_models/chitose/assets/exp/f06.exp.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/chitose/assets/exp/f07.exp.json","path":"live2d_models/chitose/assets/exp/f07.exp.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/chitose/assets/mtn/chitose_handwave.mtn","path":"live2d_models/chitose/assets/mtn/chitose_handwave.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/chitose/assets/mtn/chitose_idle.mtn","path":"live2d_models/chitose/assets/mtn/chitose_idle.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/chitose/assets/mtn/chitose_kime01.mtn","path":"live2d_models/chitose/assets/mtn/chitose_kime01.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/chitose/assets/mtn/chitose_kime02.mtn","path":"live2d_models/chitose/assets/mtn/chitose_kime02.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/chitose/assets/moc/chitose.moc","path":"live2d_models/chitose/assets/moc/chitose.moc","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/gf/assets/moc/Gantzert_Felixander.moc","path":"live2d_models/gf/assets/moc/Gantzert_Felixander.moc","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/gf/assets/mtn/A_00_idle.mtn","path":"live2d_models/gf/assets/mtn/A_00_idle.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/gf/assets/mtn/A_01.mtn","path":"live2d_models/gf/assets/mtn/A_01.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/gf/assets/mtn/A_02.mtn","path":"live2d_models/gf/assets/mtn/A_02.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/gf/assets/mtn/A_03.mtn","path":"live2d_models/gf/assets/mtn/A_03.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/gf/assets/mtn/A_05.mtn","path":"live2d_models/gf/assets/mtn/A_05.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/gf/assets/mtn/A_04.mtn","path":"live2d_models/gf/assets/mtn/A_04.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/haru02.model.json","path":"live2d_models/haru/02/assets/haru02.model.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/haru02.physics.json","path":"live2d_models/haru/02/assets/haru02.physics.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/haru02.pose.json","path":"live2d_models/haru/02/assets/haru02.pose.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/haru01.model.json","path":"live2d_models/haru/01/assets/haru01.model.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/haru01.physics.json","path":"live2d_models/haru/01/assets/haru01.physics.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/haru01.pose.json","path":"live2d_models/haru/01/assets/haru01.pose.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haruto/assets/moc/haruto.moc","path":"live2d_models/haruto/assets/moc/haruto.moc","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haruto/assets/mtn/01.mtn","path":"live2d_models/haruto/assets/mtn/01.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haruto/assets/mtn/02.mtn","path":"live2d_models/haruto/assets/mtn/02.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haruto/assets/mtn/03.mtn","path":"live2d_models/haruto/assets/mtn/03.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haruto/assets/mtn/04.mtn","path":"live2d_models/haruto/assets/mtn/04.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haruto/assets/mtn/05.mtn","path":"live2d_models/haruto/assets/mtn/05.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haruto/assets/mtn/06.mtn","path":"live2d_models/haruto/assets/mtn/06.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haruto/assets/mtn/07.mtn","path":"live2d_models/haruto/assets/mtn/07.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haruto/assets/mtn/08.mtn","path":"live2d_models/haruto/assets/mtn/08.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haruto/assets/mtn/09.mtn","path":"live2d_models/haruto/assets/mtn/09.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haruto/assets/mtn/idle_02.mtn","path":"live2d_models/haruto/assets/mtn/idle_02.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/hibiki/assets/exp/f01.exp.json","path":"live2d_models/hibiki/assets/exp/f01.exp.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/hibiki/assets/exp/f02.exp.json","path":"live2d_models/hibiki/assets/exp/f02.exp.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/hibiki/assets/exp/f03.exp.json","path":"live2d_models/hibiki/assets/exp/f03.exp.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/hibiki/assets/exp/f04.exp.json","path":"live2d_models/hibiki/assets/exp/f04.exp.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/hibiki/assets/exp/f05.exp.json","path":"live2d_models/hibiki/assets/exp/f05.exp.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/hibiki/assets/exp/f06.exp.json","path":"live2d_models/hibiki/assets/exp/f06.exp.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/hibiki/assets/moc/hibiki.moc","path":"live2d_models/hibiki/assets/moc/hibiki.moc","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/hibiki/assets/mtn/hibiki_01.mtn","path":"live2d_models/hibiki/assets/mtn/hibiki_01.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/hibiki/assets/mtn/hibiki_02.mtn","path":"live2d_models/hibiki/assets/mtn/hibiki_02.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/hibiki/assets/mtn/hibiki_03.mtn","path":"live2d_models/hibiki/assets/mtn/hibiki_03.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/hibiki/assets/mtn/hibiki_04.mtn","path":"live2d_models/hibiki/assets/mtn/hibiki_04.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/hibiki/assets/mtn/hibiki_05.mtn","path":"live2d_models/hibiki/assets/mtn/hibiki_05.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/hibiki/assets/mtn/idle_01.mtn","path":"live2d_models/hibiki/assets/mtn/idle_01.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/hibiki/assets/mtn/idle_02.mtn","path":"live2d_models/hibiki/assets/mtn/idle_02.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/hibiki/assets/mtn/idle_03.mtn","path":"live2d_models/hibiki/assets/mtn/idle_03.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/hibiki/assets/mtn/idle_04.mtn","path":"live2d_models/hibiki/assets/mtn/idle_04.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/hibiki/assets/snd/hibiki_01.mp3","path":"live2d_models/hibiki/assets/snd/hibiki_01.mp3","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/hibiki/assets/snd/hibiki_02.mp3","path":"live2d_models/hibiki/assets/snd/hibiki_02.mp3","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/hibiki/assets/snd/hibiki_03.mp3","path":"live2d_models/hibiki/assets/snd/hibiki_03.mp3","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/izumi/assets/exp/f01.exp.json","path":"live2d_models/izumi/assets/exp/f01.exp.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/hibiki/assets/snd/hibiki_04.mp3","path":"live2d_models/hibiki/assets/snd/hibiki_04.mp3","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/hibiki/assets/snd/hibiki_05.mp3","path":"live2d_models/hibiki/assets/snd/hibiki_05.mp3","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/izumi/assets/exp/f02.exp.json","path":"live2d_models/izumi/assets/exp/f02.exp.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/izumi/assets/exp/f03.exp.json","path":"live2d_models/izumi/assets/exp/f03.exp.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/izumi/assets/exp/f04.exp.json","path":"live2d_models/izumi/assets/exp/f04.exp.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/izumi/assets/exp/f05.exp.json","path":"live2d_models/izumi/assets/exp/f05.exp.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/izumi/assets/exp/f07.exp.json","path":"live2d_models/izumi/assets/exp/f07.exp.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/izumi/assets/exp/f06.exp.json","path":"live2d_models/izumi/assets/exp/f06.exp.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/izumi/assets/moc/izumi_illust.moc","path":"live2d_models/izumi/assets/moc/izumi_illust.moc","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/izumi/assets/mtn/idle_01.mtn","path":"live2d_models/izumi/assets/mtn/idle_01.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/izumi/assets/mtn/idle_02.mtn","path":"live2d_models/izumi/assets/mtn/idle_02.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/izumi/assets/mtn/idle_03.mtn","path":"live2d_models/izumi/assets/mtn/idle_03.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/izumi/assets/mtn/idle_04.mtn","path":"live2d_models/izumi/assets/mtn/idle_04.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/izumi/assets/mtn/izumi_01.mtn","path":"live2d_models/izumi/assets/mtn/izumi_01.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/izumi/assets/mtn/izumi_02.mtn","path":"live2d_models/izumi/assets/mtn/izumi_02.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/izumi/assets/mtn/izumi_03.mtn","path":"live2d_models/izumi/assets/mtn/izumi_03.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/izumi/assets/mtn/izumi_04.mtn","path":"live2d_models/izumi/assets/mtn/izumi_04.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/izumi/assets/mtn/izumi_05.mtn","path":"live2d_models/izumi/assets/mtn/izumi_05.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/izumi/assets/mtn/izumi_06.mtn","path":"live2d_models/izumi/assets/mtn/izumi_06.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/izumi/assets/mtn/izumi_07.mtn","path":"live2d_models/izumi/assets/mtn/izumi_07.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/izumi/assets/mtn/izumi_08.mtn","path":"live2d_models/izumi/assets/mtn/izumi_08.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/izumi/assets/mtn/izumi_09.mtn","path":"live2d_models/izumi/assets/mtn/izumi_09.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/izumi/assets/mtn/izumi_10.mtn","path":"live2d_models/izumi/assets/mtn/izumi_10.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/izumi/assets/snd/izumi_01.mp3","path":"live2d_models/izumi/assets/snd/izumi_01.mp3","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/izumi/assets/snd/izumi_02.mp3","path":"live2d_models/izumi/assets/snd/izumi_02.mp3","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/izumi/assets/snd/izumi_03.mp3","path":"live2d_models/izumi/assets/snd/izumi_03.mp3","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/izumi/assets/snd/izumi_04.mp3","path":"live2d_models/izumi/assets/snd/izumi_04.mp3","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/izumi/assets/snd/izumi_05.mp3","path":"live2d_models/izumi/assets/snd/izumi_05.mp3","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/izumi/assets/snd/izumi_06.mp3","path":"live2d_models/izumi/assets/snd/izumi_06.mp3","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/izumi/assets/snd/izumi_07.mp3","path":"live2d_models/izumi/assets/snd/izumi_07.mp3","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/izumi/assets/snd/izumi_09.mp3","path":"live2d_models/izumi/assets/snd/izumi_09.mp3","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/izumi/assets/snd/izumi_08.mp3","path":"live2d_models/izumi/assets/snd/izumi_08.mp3","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/izumi/assets/snd/izumi_10.mp3","path":"live2d_models/izumi/assets/snd/izumi_10.mp3","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/hijiki/assets/moc/hijiki.moc","path":"live2d_models/hijiki/assets/moc/hijiki.moc","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/hijiki/assets/mtn/00_idle.mtn","path":"live2d_models/hijiki/assets/mtn/00_idle.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/hijiki/assets/mtn/01.mtn","path":"live2d_models/hijiki/assets/mtn/01.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/hijiki/assets/mtn/02.mtn","path":"live2d_models/hijiki/assets/mtn/02.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/hijiki/assets/mtn/03.mtn","path":"live2d_models/hijiki/assets/mtn/03.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/hijiki/assets/mtn/04.mtn","path":"live2d_models/hijiki/assets/mtn/04.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/hijiki/assets/mtn/05.mtn","path":"live2d_models/hijiki/assets/mtn/05.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/hijiki/assets/mtn/06.mtn","path":"live2d_models/hijiki/assets/mtn/06.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/hijiki/assets/mtn/07.mtn","path":"live2d_models/hijiki/assets/mtn/07.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/hijiki/assets/mtn/08.mtn","path":"live2d_models/hijiki/assets/mtn/08.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/koharu/assets/mtn/01.mtn","path":"live2d_models/koharu/assets/mtn/01.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/koharu/assets/moc/koharu.moc","path":"live2d_models/koharu/assets/moc/koharu.moc","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/koharu/assets/mtn/02.mtn","path":"live2d_models/koharu/assets/mtn/02.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/koharu/assets/mtn/03.mtn","path":"live2d_models/koharu/assets/mtn/03.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/koharu/assets/mtn/04.mtn","path":"live2d_models/koharu/assets/mtn/04.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/koharu/assets/mtn/05.mtn","path":"live2d_models/koharu/assets/mtn/05.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/koharu/assets/mtn/06.mtn","path":"live2d_models/koharu/assets/mtn/06.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/koharu/assets/mtn/07.mtn","path":"live2d_models/koharu/assets/mtn/07.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/koharu/assets/mtn/08.mtn","path":"live2d_models/koharu/assets/mtn/08.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/koharu/assets/mtn/09.mtn","path":"live2d_models/koharu/assets/mtn/09.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/koharu/assets/mtn/idle.mtn","path":"live2d_models/koharu/assets/mtn/idle.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/miku/assets/moc/miku.moc","path":"live2d_models/miku/assets/moc/miku.moc","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/miku/assets/mtn/miku_idle_01.mtn","path":"live2d_models/miku/assets/mtn/miku_idle_01.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/miku/assets/mtn/miku_m_01.mtn","path":"live2d_models/miku/assets/mtn/miku_m_01.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/miku/assets/mtn/miku_m_02.mtn","path":"live2d_models/miku/assets/mtn/miku_m_02.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/miku/assets/mtn/miku_m_03.mtn","path":"live2d_models/miku/assets/mtn/miku_m_03.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/miku/assets/mtn/miku_m_04.mtn","path":"live2d_models/miku/assets/mtn/miku_m_04.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/miku/assets/mtn/miku_m_05.mtn","path":"live2d_models/miku/assets/mtn/miku_m_05.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/miku/assets/mtn/miku_shake_01.mtn","path":"live2d_models/miku/assets/mtn/miku_shake_01.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/miku/assets/mtn/miku_m_06.mtn","path":"live2d_models/miku/assets/mtn/miku_m_06.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nico/assets/moc/nico.moc","path":"live2d_models/nico/assets/moc/nico.moc","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nico/assets/mtn/00_idle.mtn","path":"live2d_models/nico/assets/mtn/00_idle.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nico/assets/mtn/01_happy.mtn","path":"live2d_models/nico/assets/mtn/01_happy.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nico/assets/mtn/02_angry.mtn","path":"live2d_models/nico/assets/mtn/02_angry.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nico/assets/mtn/03_fear.mtn","path":"live2d_models/nico/assets/mtn/03_fear.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nico/assets/mtn/05_fun.mtn","path":"live2d_models/nico/assets/mtn/05_fun.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nico/assets/mtn/04_surprise.mtn","path":"live2d_models/nico/assets/mtn/04_surprise.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nico/assets/mtn/06_love.mtn","path":"live2d_models/nico/assets/mtn/06_love.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nico/assets/mtn/07_bye.mtn","path":"live2d_models/nico/assets/mtn/07_bye.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nico/assets/mtn/08_sad.mtn","path":"live2d_models/nico/assets/mtn/08_sad.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nico/assets/mtn/09_yawn.mtn","path":"live2d_models/nico/assets/mtn/09_yawn.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nico/assets/mtn/10_yeah.mtn","path":"live2d_models/nico/assets/mtn/10_yeah.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nico/assets/mtn/11_muscle.mtn","path":"live2d_models/nico/assets/mtn/11_muscle.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nico/assets/mtn/12_stagger.mtn","path":"live2d_models/nico/assets/mtn/12_stagger.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nico/assets/mtn/13_cry.mtn","path":"live2d_models/nico/assets/mtn/13_cry.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nico/assets/mtn/14_ sigh.mtn","path":"live2d_models/nico/assets/mtn/14_ sigh.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nico/assets/mtn/15_joy.mtn","path":"live2d_models/nico/assets/mtn/15_joy.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nico/assets/mtn/16_menace.mtn","path":"live2d_models/nico/assets/mtn/16_menace.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nico/assets/mtn/17_yes.mtn","path":"live2d_models/nico/assets/mtn/17_yes.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nico/assets/mtn/18_no.mtn","path":"live2d_models/nico/assets/mtn/18_no.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nico/assets/mtn/19_walk.mtn","path":"live2d_models/nico/assets/mtn/19_walk.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nico/assets/mtn/20_sleep.mtn","path":"live2d_models/nico/assets/mtn/20_sleep.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/ni-j/assets/moc/ni-j.moc","path":"live2d_models/ni-j/assets/moc/ni-j.moc","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/ni-j/assets/mtn/00_idle.mtn","path":"live2d_models/ni-j/assets/mtn/00_idle.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/ni-j/assets/mtn/01_happy.mtn","path":"live2d_models/ni-j/assets/mtn/01_happy.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/ni-j/assets/mtn/02_angry.mtn","path":"live2d_models/ni-j/assets/mtn/02_angry.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/ni-j/assets/mtn/03_fear.mtn","path":"live2d_models/ni-j/assets/mtn/03_fear.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/ni-j/assets/mtn/04_surprise.mtn","path":"live2d_models/ni-j/assets/mtn/04_surprise.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/ni-j/assets/mtn/05_fun.mtn","path":"live2d_models/ni-j/assets/mtn/05_fun.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/ni-j/assets/mtn/06_love.mtn","path":"live2d_models/ni-j/assets/mtn/06_love.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/ni-j/assets/mtn/07_bye.mtn","path":"live2d_models/ni-j/assets/mtn/07_bye.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/ni-j/assets/mtn/08_sad.mtn","path":"live2d_models/ni-j/assets/mtn/08_sad.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/ni-j/assets/mtn/09_yawn.mtn","path":"live2d_models/ni-j/assets/mtn/09_yawn.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/ni-j/assets/mtn/10_yeah.mtn","path":"live2d_models/ni-j/assets/mtn/10_yeah.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/ni-j/assets/mtn/11_muscle.mtn","path":"live2d_models/ni-j/assets/mtn/11_muscle.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/ni-j/assets/mtn/12_stagger.mtn","path":"live2d_models/ni-j/assets/mtn/12_stagger.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/ni-j/assets/mtn/13_cry.mtn","path":"live2d_models/ni-j/assets/mtn/13_cry.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/ni-j/assets/mtn/14_ sigh.mtn","path":"live2d_models/ni-j/assets/mtn/14_ sigh.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/ni-j/assets/mtn/15_joy.mtn","path":"live2d_models/ni-j/assets/mtn/15_joy.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/ni-j/assets/mtn/16_menace.mtn","path":"live2d_models/ni-j/assets/mtn/16_menace.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/ni-j/assets/mtn/17_yes.mtn","path":"live2d_models/ni-j/assets/mtn/17_yes.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/ni-j/assets/mtn/18_no.mtn","path":"live2d_models/ni-j/assets/mtn/18_no.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/ni-j/assets/mtn/19_walk.mtn","path":"live2d_models/ni-j/assets/mtn/19_walk.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/ni-j/assets/mtn/20_sleep.mtn","path":"live2d_models/ni-j/assets/mtn/20_sleep.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nietzsche/assets/mtn/00_idle.mtn","path":"live2d_models/nietzsche/assets/mtn/00_idle.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nietzsche/assets/moc/nietzsche.moc","path":"live2d_models/nietzsche/assets/moc/nietzsche.moc","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nietzsche/assets/mtn/01_happy.mtn","path":"live2d_models/nietzsche/assets/mtn/01_happy.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nietzsche/assets/mtn/02_angry.mtn","path":"live2d_models/nietzsche/assets/mtn/02_angry.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nietzsche/assets/mtn/03_fear.mtn","path":"live2d_models/nietzsche/assets/mtn/03_fear.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nietzsche/assets/mtn/05_fun.mtn","path":"live2d_models/nietzsche/assets/mtn/05_fun.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nietzsche/assets/mtn/04_surprise.mtn","path":"live2d_models/nietzsche/assets/mtn/04_surprise.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nietzsche/assets/mtn/06_love.mtn","path":"live2d_models/nietzsche/assets/mtn/06_love.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nietzsche/assets/mtn/07_bye.mtn","path":"live2d_models/nietzsche/assets/mtn/07_bye.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nietzsche/assets/mtn/08_sad.mtn","path":"live2d_models/nietzsche/assets/mtn/08_sad.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nietzsche/assets/mtn/10_yeah.mtn","path":"live2d_models/nietzsche/assets/mtn/10_yeah.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nietzsche/assets/mtn/09_yawn.mtn","path":"live2d_models/nietzsche/assets/mtn/09_yawn.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nietzsche/assets/mtn/11_muscle.mtn","path":"live2d_models/nietzsche/assets/mtn/11_muscle.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nietzsche/assets/mtn/12_stagger.mtn","path":"live2d_models/nietzsche/assets/mtn/12_stagger.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nietzsche/assets/mtn/13_cry.mtn","path":"live2d_models/nietzsche/assets/mtn/13_cry.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nietzsche/assets/mtn/14_ sigh.mtn","path":"live2d_models/nietzsche/assets/mtn/14_ sigh.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nietzsche/assets/mtn/15_joy.mtn","path":"live2d_models/nietzsche/assets/mtn/15_joy.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nietzsche/assets/mtn/17_yes.mtn","path":"live2d_models/nietzsche/assets/mtn/17_yes.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nietzsche/assets/mtn/18_no.mtn","path":"live2d_models/nietzsche/assets/mtn/18_no.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nietzsche/assets/mtn/16_menace.mtn","path":"live2d_models/nietzsche/assets/mtn/16_menace.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nietzsche/assets/mtn/19_walk.mtn","path":"live2d_models/nietzsche/assets/mtn/19_walk.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nietzsche/assets/mtn/20_sleep.mtn","path":"live2d_models/nietzsche/assets/mtn/20_sleep.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nipsilon/assets/mtn/00_idle.mtn","path":"live2d_models/nipsilon/assets/mtn/00_idle.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nipsilon/assets/moc/nipsilon.moc","path":"live2d_models/nipsilon/assets/moc/nipsilon.moc","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nipsilon/assets/mtn/01_happy.mtn","path":"live2d_models/nipsilon/assets/mtn/01_happy.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nipsilon/assets/mtn/02_angry.mtn","path":"live2d_models/nipsilon/assets/mtn/02_angry.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nipsilon/assets/mtn/03_fear.mtn","path":"live2d_models/nipsilon/assets/mtn/03_fear.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nipsilon/assets/mtn/04_surprise.mtn","path":"live2d_models/nipsilon/assets/mtn/04_surprise.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nipsilon/assets/mtn/05_fun.mtn","path":"live2d_models/nipsilon/assets/mtn/05_fun.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nipsilon/assets/mtn/06_love.mtn","path":"live2d_models/nipsilon/assets/mtn/06_love.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nipsilon/assets/mtn/07_bye.mtn","path":"live2d_models/nipsilon/assets/mtn/07_bye.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nipsilon/assets/mtn/08_sad.mtn","path":"live2d_models/nipsilon/assets/mtn/08_sad.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nipsilon/assets/mtn/09_yawn.mtn","path":"live2d_models/nipsilon/assets/mtn/09_yawn.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nipsilon/assets/mtn/10_yeah.mtn","path":"live2d_models/nipsilon/assets/mtn/10_yeah.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nipsilon/assets/mtn/11_muscle.mtn","path":"live2d_models/nipsilon/assets/mtn/11_muscle.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nipsilon/assets/mtn/12_stagger.mtn","path":"live2d_models/nipsilon/assets/mtn/12_stagger.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nipsilon/assets/mtn/13_cry.mtn","path":"live2d_models/nipsilon/assets/mtn/13_cry.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nipsilon/assets/mtn/14_ sigh.mtn","path":"live2d_models/nipsilon/assets/mtn/14_ sigh.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nipsilon/assets/mtn/15_joy.mtn","path":"live2d_models/nipsilon/assets/mtn/15_joy.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nipsilon/assets/mtn/16_menace.mtn","path":"live2d_models/nipsilon/assets/mtn/16_menace.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nipsilon/assets/mtn/17_yes.mtn","path":"live2d_models/nipsilon/assets/mtn/17_yes.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nipsilon/assets/mtn/18_no.mtn","path":"live2d_models/nipsilon/assets/mtn/18_no.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nipsilon/assets/mtn/19_walk.mtn","path":"live2d_models/nipsilon/assets/mtn/19_walk.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nipsilon/assets/mtn/20_sleep.mtn","path":"live2d_models/nipsilon/assets/mtn/20_sleep.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nito/assets/moc/nito.moc","path":"live2d_models/nito/assets/moc/nito.moc","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nito/assets/mtn/00_idle.mtn","path":"live2d_models/nito/assets/mtn/00_idle.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nito/assets/mtn/01_happy.mtn","path":"live2d_models/nito/assets/mtn/01_happy.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nito/assets/mtn/02_angry.mtn","path":"live2d_models/nito/assets/mtn/02_angry.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nito/assets/mtn/03_fear.mtn","path":"live2d_models/nito/assets/mtn/03_fear.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nito/assets/mtn/04_surprise.mtn","path":"live2d_models/nito/assets/mtn/04_surprise.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nito/assets/mtn/05_fun.mtn","path":"live2d_models/nito/assets/mtn/05_fun.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nito/assets/mtn/06_love.mtn","path":"live2d_models/nito/assets/mtn/06_love.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nito/assets/mtn/07_bye.mtn","path":"live2d_models/nito/assets/mtn/07_bye.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nito/assets/mtn/08_sad.mtn","path":"live2d_models/nito/assets/mtn/08_sad.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nito/assets/mtn/09_yawn.mtn","path":"live2d_models/nito/assets/mtn/09_yawn.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nito/assets/mtn/10_yeah.mtn","path":"live2d_models/nito/assets/mtn/10_yeah.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nito/assets/mtn/11_muscle.mtn","path":"live2d_models/nito/assets/mtn/11_muscle.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nito/assets/mtn/12_stagger.mtn","path":"live2d_models/nito/assets/mtn/12_stagger.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nito/assets/mtn/13_cry.mtn","path":"live2d_models/nito/assets/mtn/13_cry.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nito/assets/mtn/14_ sigh.mtn","path":"live2d_models/nito/assets/mtn/14_ sigh.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nito/assets/mtn/15_joy.mtn","path":"live2d_models/nito/assets/mtn/15_joy.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nito/assets/mtn/16_menace.mtn","path":"live2d_models/nito/assets/mtn/16_menace.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nito/assets/mtn/17_yes.mtn","path":"live2d_models/nito/assets/mtn/17_yes.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nito/assets/mtn/18_no.mtn","path":"live2d_models/nito/assets/mtn/18_no.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nito/assets/mtn/19_walk.mtn","path":"live2d_models/nito/assets/mtn/19_walk.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nito/assets/mtn/20_sleep.mtn","path":"live2d_models/nito/assets/mtn/20_sleep.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/exp/f01.exp.json","path":"live2d_models/shizuku/assets/exp/f01.exp.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/exp/f02.exp.json","path":"live2d_models/shizuku/assets/exp/f02.exp.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/exp/f03.exp.json","path":"live2d_models/shizuku/assets/exp/f03.exp.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/exp/f04.exp.json","path":"live2d_models/shizuku/assets/exp/f04.exp.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/moc/shizuku.moc","path":"live2d_models/shizuku/assets/moc/shizuku.moc","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/mtn/flickHead_02.mtn","path":"live2d_models/shizuku/assets/mtn/flickHead_02.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/mtn/flickHead_01.mtn","path":"live2d_models/shizuku/assets/mtn/flickHead_01.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/mtn/idle_00.mtn","path":"live2d_models/shizuku/assets/mtn/idle_00.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/mtn/flickHead_00.mtn","path":"live2d_models/shizuku/assets/mtn/flickHead_00.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/mtn/idle_01.mtn","path":"live2d_models/shizuku/assets/mtn/idle_01.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/mtn/idle_02.mtn","path":"live2d_models/shizuku/assets/mtn/idle_02.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/mtn/pinchIn_00.mtn","path":"live2d_models/shizuku/assets/mtn/pinchIn_00.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/mtn/pinchIn_01.mtn","path":"live2d_models/shizuku/assets/mtn/pinchIn_01.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/mtn/pinchIn_02.mtn","path":"live2d_models/shizuku/assets/mtn/pinchIn_02.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/mtn/pinchOut_00.mtn","path":"live2d_models/shizuku/assets/mtn/pinchOut_00.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/mtn/pinchOut_01.mtn","path":"live2d_models/shizuku/assets/mtn/pinchOut_01.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/mtn/pinchOut_02.mtn","path":"live2d_models/shizuku/assets/mtn/pinchOut_02.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/mtn/shake_00.mtn","path":"live2d_models/shizuku/assets/mtn/shake_00.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/mtn/shake_01.mtn","path":"live2d_models/shizuku/assets/mtn/shake_01.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/mtn/shake_02.mtn","path":"live2d_models/shizuku/assets/mtn/shake_02.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/mtn/tapBody_00.mtn","path":"live2d_models/shizuku/assets/mtn/tapBody_00.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/mtn/tapBody_01.mtn","path":"live2d_models/shizuku/assets/mtn/tapBody_01.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/mtn/tapBody_02.mtn","path":"live2d_models/shizuku/assets/mtn/tapBody_02.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/snd/flickHead_00.mp3","path":"live2d_models/shizuku/assets/snd/flickHead_00.mp3","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/snd/flickHead_01.mp3","path":"live2d_models/shizuku/assets/snd/flickHead_01.mp3","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/snd/flickHead_02.mp3","path":"live2d_models/shizuku/assets/snd/flickHead_02.mp3","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/snd/pinchIn_00.mp3","path":"live2d_models/shizuku/assets/snd/pinchIn_00.mp3","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/snd/pinchIn_01.mp3","path":"live2d_models/shizuku/assets/snd/pinchIn_01.mp3","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/snd/pinchIn_02.mp3","path":"live2d_models/shizuku/assets/snd/pinchIn_02.mp3","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/snd/pinchOut_00.mp3","path":"live2d_models/shizuku/assets/snd/pinchOut_00.mp3","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/snd/pinchOut_01.mp3","path":"live2d_models/shizuku/assets/snd/pinchOut_01.mp3","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/snd/pinchOut_02.mp3","path":"live2d_models/shizuku/assets/snd/pinchOut_02.mp3","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/snd/shake_00.mp3","path":"live2d_models/shizuku/assets/snd/shake_00.mp3","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/snd/shake_01.mp3","path":"live2d_models/shizuku/assets/snd/shake_01.mp3","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/snd/shake_02.mp3","path":"live2d_models/shizuku/assets/snd/shake_02.mp3","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/snd/tapBody_00.mp3","path":"live2d_models/shizuku/assets/snd/tapBody_00.mp3","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/snd/tapBody_01.mp3","path":"live2d_models/shizuku/assets/snd/tapBody_01.mp3","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/snd/tapBody_02.mp3","path":"live2d_models/shizuku/assets/snd/tapBody_02.mp3","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/tororo/assets/moc/tororo.moc","path":"live2d_models/tororo/assets/moc/tororo.moc","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/tororo/assets/mtn/00_idle.mtn","path":"live2d_models/tororo/assets/mtn/00_idle.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/tororo/assets/mtn/01.mtn","path":"live2d_models/tororo/assets/mtn/01.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/tororo/assets/mtn/02.mtn","path":"live2d_models/tororo/assets/mtn/02.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/tororo/assets/mtn/03.mtn","path":"live2d_models/tororo/assets/mtn/03.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/tororo/assets/mtn/04.mtn","path":"live2d_models/tororo/assets/mtn/04.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/tororo/assets/mtn/05.mtn","path":"live2d_models/tororo/assets/mtn/05.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/tororo/assets/mtn/06.mtn","path":"live2d_models/tororo/assets/mtn/06.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/tororo/assets/mtn/07.mtn","path":"live2d_models/tororo/assets/mtn/07.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/tororo/assets/mtn/08.mtn","path":"live2d_models/tororo/assets/mtn/08.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/exp/F01.exp.json","path":"live2d_models/tsumiki/assets/exp/F01.exp.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/exp/F02.exp.json","path":"live2d_models/tsumiki/assets/exp/F02.exp.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/exp/F03.exp.json","path":"live2d_models/tsumiki/assets/exp/F03.exp.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/exp/F04.exp.json","path":"live2d_models/tsumiki/assets/exp/F04.exp.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/exp/F05.exp.json","path":"live2d_models/tsumiki/assets/exp/F05.exp.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/exp/F06.exp.json","path":"live2d_models/tsumiki/assets/exp/F06.exp.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/exp/F07.exp.json","path":"live2d_models/tsumiki/assets/exp/F07.exp.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/moc/tsumiki.moc","path":"live2d_models/tsumiki/assets/moc/tsumiki.moc","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/mtn/P01.mtn","path":"live2d_models/tsumiki/assets/mtn/P01.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/exp/F08.exp.json","path":"live2d_models/tsumiki/assets/exp/F08.exp.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/exp/F09.exp.json","path":"live2d_models/tsumiki/assets/exp/F09.exp.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/exp/F10.exp.json","path":"live2d_models/tsumiki/assets/exp/F10.exp.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/mtn/tsumiki_idle_01.mtn","path":"live2d_models/tsumiki/assets/mtn/tsumiki_idle_01.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_01_df.mtn","path":"live2d_models/tsumiki/assets/mtn/tsumiki_m_01_df.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_01.mtn","path":"live2d_models/tsumiki/assets/mtn/tsumiki_m_01.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_02.mtn","path":"live2d_models/tsumiki/assets/mtn/tsumiki_m_02.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_03.mtn","path":"live2d_models/tsumiki/assets/mtn/tsumiki_m_03.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_04.mtn","path":"live2d_models/tsumiki/assets/mtn/tsumiki_m_04.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_05.mtn","path":"live2d_models/tsumiki/assets/mtn/tsumiki_m_05.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_06.mtn","path":"live2d_models/tsumiki/assets/mtn/tsumiki_m_06.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_07.mtn","path":"live2d_models/tsumiki/assets/mtn/tsumiki_m_07.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_08.mtn","path":"live2d_models/tsumiki/assets/mtn/tsumiki_m_08.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_09.mtn","path":"live2d_models/tsumiki/assets/mtn/tsumiki_m_09.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_10.mtn","path":"live2d_models/tsumiki/assets/mtn/tsumiki_m_10.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_11.mtn","path":"live2d_models/tsumiki/assets/mtn/tsumiki_m_11.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_12.mtn","path":"live2d_models/tsumiki/assets/mtn/tsumiki_m_12.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_13.mtn","path":"live2d_models/tsumiki/assets/mtn/tsumiki_m_13.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_14.mtn","path":"live2d_models/tsumiki/assets/mtn/tsumiki_m_14.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_15.mtn","path":"live2d_models/tsumiki/assets/mtn/tsumiki_m_15.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_16.mtn","path":"live2d_models/tsumiki/assets/mtn/tsumiki_m_16.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_17.mtn","path":"live2d_models/tsumiki/assets/mtn/tsumiki_m_17.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_18.mtn","path":"live2d_models/tsumiki/assets/mtn/tsumiki_m_18.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_19.mtn","path":"live2d_models/tsumiki/assets/mtn/tsumiki_m_19.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_20.mtn","path":"live2d_models/tsumiki/assets/mtn/tsumiki_m_20.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_21.mtn","path":"live2d_models/tsumiki/assets/mtn/tsumiki_m_21.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_23.mtn","path":"live2d_models/tsumiki/assets/mtn/tsumiki_m_23.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_22.mtn","path":"live2d_models/tsumiki/assets/mtn/tsumiki_m_22.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_24.mtn","path":"live2d_models/tsumiki/assets/mtn/tsumiki_m_24.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/unitychan/assets/moc/unitychan.moc","path":"live2d_models/unitychan/assets/moc/unitychan.moc","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/unitychan/assets/mtn/idle_01.mtn","path":"live2d_models/unitychan/assets/mtn/idle_01.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/unitychan/assets/mtn/idle_02.mtn","path":"live2d_models/unitychan/assets/mtn/idle_02.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/unitychan/assets/mtn/m_01.mtn","path":"live2d_models/unitychan/assets/mtn/m_01.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/unitychan/assets/mtn/m_02.mtn","path":"live2d_models/unitychan/assets/mtn/m_02.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/unitychan/assets/mtn/m_03.mtn","path":"live2d_models/unitychan/assets/mtn/m_03.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/unitychan/assets/mtn/m_04.mtn","path":"live2d_models/unitychan/assets/mtn/m_04.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/unitychan/assets/mtn/m_05.mtn","path":"live2d_models/unitychan/assets/mtn/m_05.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/unitychan/assets/mtn/m_06.mtn","path":"live2d_models/unitychan/assets/mtn/m_06.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/unitychan/assets/mtn/m_07.mtn","path":"live2d_models/unitychan/assets/mtn/m_07.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/unitychan/assets/mtn/m_08.mtn","path":"live2d_models/unitychan/assets/mtn/m_08.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/unitychan/assets/mtn/m_10.mtn","path":"live2d_models/unitychan/assets/mtn/m_10.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/unitychan/assets/mtn/m_09.mtn","path":"live2d_models/unitychan/assets/mtn/m_09.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/unitychan/assets/mtn/m_11.mtn","path":"live2d_models/unitychan/assets/mtn/m_11.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/unitychan/assets/mtn/m_12.mtn","path":"live2d_models/unitychan/assets/mtn/m_12.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/unitychan/assets/mtn/m_13.mtn","path":"live2d_models/unitychan/assets/mtn/m_13.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/unitychan/assets/mtn/m_14.mtn","path":"live2d_models/unitychan/assets/mtn/m_14.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/wanko/assets/moc/wanko.moc","path":"live2d_models/wanko/assets/moc/wanko.moc","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/wanko/assets/mtn/idle_02.mtn","path":"live2d_models/wanko/assets/mtn/idle_02.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/wanko/assets/mtn/idle_01.mtn","path":"live2d_models/wanko/assets/mtn/idle_01.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/wanko/assets/mtn/idle_03.mtn","path":"live2d_models/wanko/assets/mtn/idle_03.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/wanko/assets/mtn/idle_04.mtn","path":"live2d_models/wanko/assets/mtn/idle_04.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/wanko/assets/mtn/shake_01.mtn","path":"live2d_models/wanko/assets/mtn/shake_01.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/wanko/assets/mtn/shake_02.mtn","path":"live2d_models/wanko/assets/mtn/shake_02.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/wanko/assets/mtn/touch_01.mtn","path":"live2d_models/wanko/assets/mtn/touch_01.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/wanko/assets/mtn/touch_02.mtn","path":"live2d_models/wanko/assets/mtn/touch_02.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/wanko/assets/mtn/touch_03.mtn","path":"live2d_models/wanko/assets/mtn/touch_03.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/wanko/assets/mtn/touch_04.mtn","path":"live2d_models/wanko/assets/mtn/touch_04.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/wanko/assets/mtn/touch_05.mtn","path":"live2d_models/wanko/assets/mtn/touch_05.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/wanko/assets/mtn/touch_06.mtn","path":"live2d_models/wanko/assets/mtn/touch_06.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/z16/assets/moc/z16.moc","path":"live2d_models/z16/assets/moc/z16.moc","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/z16/assets/exp/f00.exp.json","path":"live2d_models/z16/assets/exp/f00.exp.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/z16/assets/mtn/idle.mtn","path":"live2d_models/z16/assets/mtn/idle.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/chitose/assets/moc/chitose.2048/texture_00.png","path":"live2d_models/chitose/assets/moc/chitose.2048/texture_00.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/epsilon2_1/assets/moc/Epsilon2.1.2048/texture_00.png","path":"live2d_models/epsilon2_1/assets/moc/Epsilon2.1.2048/texture_00.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/gf/assets/moc/Gantzert_Felixander.2048/texture_00.png","path":"live2d_models/gf/assets/moc/Gantzert_Felixander.2048/texture_00.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/gf/assets/moc/Gantzert_Felixander.2048/texture_01.png","path":"live2d_models/gf/assets/moc/Gantzert_Felixander.2048/texture_01.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/gf/assets/moc/Gantzert_Felixander.2048/texture_02.png","path":"live2d_models/gf/assets/moc/Gantzert_Felixander.2048/texture_02.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/gf/assets/moc/Gantzert_Felixander.2048/texture_03.png","path":"live2d_models/gf/assets/moc/Gantzert_Felixander.2048/texture_03.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/gf/assets/moc/Gantzert_Felixander.2048/texture_04.png","path":"live2d_models/gf/assets/moc/Gantzert_Felixander.2048/texture_04.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/gf/assets/moc/Gantzert_Felixander.2048/texture_05.png","path":"live2d_models/gf/assets/moc/Gantzert_Felixander.2048/texture_05.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/gf/assets/moc/Gantzert_Felixander.2048/texture_06.png","path":"live2d_models/gf/assets/moc/Gantzert_Felixander.2048/texture_06.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/exp/f01.exp.json","path":"live2d_models/haru/02/assets/exp/f01.exp.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/exp/f03.exp.json","path":"live2d_models/haru/02/assets/exp/f03.exp.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/exp/f02.exp.json","path":"live2d_models/haru/02/assets/exp/f02.exp.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/exp/f04.exp.json","path":"live2d_models/haru/02/assets/exp/f04.exp.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/exp/f05.exp.json","path":"live2d_models/haru/02/assets/exp/f05.exp.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/exp/f07.exp.json","path":"live2d_models/haru/02/assets/exp/f07.exp.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/exp/f08.exp.json","path":"live2d_models/haru/02/assets/exp/f08.exp.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/exp/f06.exp.json","path":"live2d_models/haru/02/assets/exp/f06.exp.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/moc/haru02.moc","path":"live2d_models/haru/02/assets/moc/haru02.moc","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/mtn/flickHead_00.mtn","path":"live2d_models/haru/02/assets/mtn/flickHead_00.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/mtn/idle_00.mtn","path":"live2d_models/haru/02/assets/mtn/idle_00.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/mtn/idle_01.mtn","path":"live2d_models/haru/02/assets/mtn/idle_01.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/mtn/idle_02.mtn","path":"live2d_models/haru/02/assets/mtn/idle_02.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/mtn/pinchIn_00.mtn","path":"live2d_models/haru/02/assets/mtn/pinchIn_00.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/mtn/pinchOut_00.mtn","path":"live2d_models/haru/02/assets/mtn/pinchOut_00.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/mtn/shake_00.mtn","path":"live2d_models/haru/02/assets/mtn/shake_00.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/mtn/tapBody_01.mtn","path":"live2d_models/haru/02/assets/mtn/tapBody_01.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/mtn/tapBody_00.mtn","path":"live2d_models/haru/02/assets/mtn/tapBody_00.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/mtn/tapBody_02.mtn","path":"live2d_models/haru/02/assets/mtn/tapBody_02.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/mtn/tapBody_03.mtn","path":"live2d_models/haru/02/assets/mtn/tapBody_03.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/mtn/tapBody_04.mtn","path":"live2d_models/haru/02/assets/mtn/tapBody_04.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/mtn/tapBody_05.mtn","path":"live2d_models/haru/02/assets/mtn/tapBody_05.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/mtn/tapBody_06.mtn","path":"live2d_models/haru/02/assets/mtn/tapBody_06.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/mtn/tapBody_07.mtn","path":"live2d_models/haru/02/assets/mtn/tapBody_07.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/mtn/tapBody_08.mtn","path":"live2d_models/haru/02/assets/mtn/tapBody_08.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/snd/flickHead_00.mp3","path":"live2d_models/haru/02/assets/snd/flickHead_00.mp3","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/mtn/tapBody_09.mtn","path":"live2d_models/haru/02/assets/mtn/tapBody_09.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/snd/pinchOut_00.mp3","path":"live2d_models/haru/02/assets/snd/pinchOut_00.mp3","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/snd/pinchIn_00.mp3","path":"live2d_models/haru/02/assets/snd/pinchIn_00.mp3","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/snd/shake_00.mp3","path":"live2d_models/haru/02/assets/snd/shake_00.mp3","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/snd/tapBody_00.mp3","path":"live2d_models/haru/02/assets/snd/tapBody_00.mp3","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/snd/tapBody_01.mp3","path":"live2d_models/haru/02/assets/snd/tapBody_01.mp3","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/snd/tapBody_02.mp3","path":"live2d_models/haru/02/assets/snd/tapBody_02.mp3","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/exp/f01.exp.json","path":"live2d_models/haru/01/assets/exp/f01.exp.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/exp/f02.exp.json","path":"live2d_models/haru/01/assets/exp/f02.exp.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/exp/f03.exp.json","path":"live2d_models/haru/01/assets/exp/f03.exp.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/exp/f04.exp.json","path":"live2d_models/haru/01/assets/exp/f04.exp.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/exp/f05.exp.json","path":"live2d_models/haru/01/assets/exp/f05.exp.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/exp/f06.exp.json","path":"live2d_models/haru/01/assets/exp/f06.exp.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/exp/f07.exp.json","path":"live2d_models/haru/01/assets/exp/f07.exp.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/exp/f08.exp.json","path":"live2d_models/haru/01/assets/exp/f08.exp.json","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/moc/haru01.moc","path":"live2d_models/haru/01/assets/moc/haru01.moc","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/mtn/flickHead_00.mtn","path":"live2d_models/haru/01/assets/mtn/flickHead_00.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/mtn/idle_00.mtn","path":"live2d_models/haru/01/assets/mtn/idle_00.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/mtn/idle_02.mtn","path":"live2d_models/haru/01/assets/mtn/idle_02.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/mtn/idle_01.mtn","path":"live2d_models/haru/01/assets/mtn/idle_01.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/mtn/pinchIn_00.mtn","path":"live2d_models/haru/01/assets/mtn/pinchIn_00.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/mtn/pinchOut_00.mtn","path":"live2d_models/haru/01/assets/mtn/pinchOut_00.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/mtn/shake_00.mtn","path":"live2d_models/haru/01/assets/mtn/shake_00.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/mtn/tapBody_00.mtn","path":"live2d_models/haru/01/assets/mtn/tapBody_00.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/mtn/tapBody_01.mtn","path":"live2d_models/haru/01/assets/mtn/tapBody_01.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/mtn/tapBody_02.mtn","path":"live2d_models/haru/01/assets/mtn/tapBody_02.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/mtn/tapBody_03.mtn","path":"live2d_models/haru/01/assets/mtn/tapBody_03.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/mtn/tapBody_04.mtn","path":"live2d_models/haru/01/assets/mtn/tapBody_04.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/mtn/tapBody_05.mtn","path":"live2d_models/haru/01/assets/mtn/tapBody_05.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/mtn/tapBody_06.mtn","path":"live2d_models/haru/01/assets/mtn/tapBody_06.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/mtn/tapBody_07.mtn","path":"live2d_models/haru/01/assets/mtn/tapBody_07.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/mtn/tapBody_08.mtn","path":"live2d_models/haru/01/assets/mtn/tapBody_08.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/mtn/tapBody_09.mtn","path":"live2d_models/haru/01/assets/mtn/tapBody_09.mtn","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/snd/flickHead_00.mp3","path":"live2d_models/haru/01/assets/snd/flickHead_00.mp3","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/snd/pinchIn_00.mp3","path":"live2d_models/haru/01/assets/snd/pinchIn_00.mp3","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/snd/pinchOut_00.mp3","path":"live2d_models/haru/01/assets/snd/pinchOut_00.mp3","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/snd/shake_00.mp3","path":"live2d_models/haru/01/assets/snd/shake_00.mp3","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/snd/tapBody_00.mp3","path":"live2d_models/haru/01/assets/snd/tapBody_00.mp3","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/snd/tapBody_01.mp3","path":"live2d_models/haru/01/assets/snd/tapBody_01.mp3","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/snd/tapBody_02.mp3","path":"live2d_models/haru/01/assets/snd/tapBody_02.mp3","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haruto/assets/moc/haruto.2048/texture_00.png","path":"live2d_models/haruto/assets/moc/haruto.2048/texture_00.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/hibiki/assets/moc/hibiki.2048/texture_00.png","path":"live2d_models/hibiki/assets/moc/hibiki.2048/texture_00.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/izumi/assets/moc/izumi_illust.1024/texture_00.png","path":"live2d_models/izumi/assets/moc/izumi_illust.1024/texture_00.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/izumi/assets/moc/izumi_illust.1024/texture_01.png","path":"live2d_models/izumi/assets/moc/izumi_illust.1024/texture_01.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/izumi/assets/moc/izumi_illust.1024/texture_02.png","path":"live2d_models/izumi/assets/moc/izumi_illust.1024/texture_02.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/izumi/assets/moc/izumi_illust.1024/texture_03.png","path":"live2d_models/izumi/assets/moc/izumi_illust.1024/texture_03.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/hijiki/assets/moc/hijiki.2048/texture_00.png","path":"live2d_models/hijiki/assets/moc/hijiki.2048/texture_00.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/koharu/assets/moc/koharu.2048/texture_00.png","path":"live2d_models/koharu/assets/moc/koharu.2048/texture_00.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/miku/assets/moc/miku.2048/texture_00.png","path":"live2d_models/miku/assets/moc/miku.2048/texture_00.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nico/assets/moc/nico.2048/texture_00.png","path":"live2d_models/nico/assets/moc/nico.2048/texture_00.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nico/assets/moc/nico.2048/texture_01.png","path":"live2d_models/nico/assets/moc/nico.2048/texture_01.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nico/assets/moc/nico.2048/texture_02.png","path":"live2d_models/nico/assets/moc/nico.2048/texture_02.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/ni-j/assets/moc/ni-j.2048/texture_00.png","path":"live2d_models/ni-j/assets/moc/ni-j.2048/texture_00.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/ni-j/assets/moc/ni-j.2048/texture_01.png","path":"live2d_models/ni-j/assets/moc/ni-j.2048/texture_01.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nietzsche/assets/moc/nietzsche.2048/texture_00.png","path":"live2d_models/nietzsche/assets/moc/nietzsche.2048/texture_00.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nietzsche/assets/moc/nietzsche.2048/texture_01.png","path":"live2d_models/nietzsche/assets/moc/nietzsche.2048/texture_01.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nietzsche/assets/moc/nietzsche.2048/texture_02.png","path":"live2d_models/nietzsche/assets/moc/nietzsche.2048/texture_02.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nipsilon/assets/moc/nipsilon.2048/texture_00.png","path":"live2d_models/nipsilon/assets/moc/nipsilon.2048/texture_00.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nipsilon/assets/moc/nipsilon.2048/texture_01.png","path":"live2d_models/nipsilon/assets/moc/nipsilon.2048/texture_01.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nipsilon/assets/moc/nipsilon.2048/texture_02.png","path":"live2d_models/nipsilon/assets/moc/nipsilon.2048/texture_02.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nito/assets/moc/nito.2048/texture_00.png","path":"live2d_models/nito/assets/moc/nito.2048/texture_00.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/nito/assets/moc/nito.2048/texture_01.png","path":"live2d_models/nito/assets/moc/nito.2048/texture_01.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/moc/shizuku.1024/texture_00.png","path":"live2d_models/shizuku/assets/moc/shizuku.1024/texture_00.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/moc/shizuku.1024/texture_01.png","path":"live2d_models/shizuku/assets/moc/shizuku.1024/texture_01.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/moc/shizuku.1024/texture_03.png","path":"live2d_models/shizuku/assets/moc/shizuku.1024/texture_03.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/moc/shizuku.1024/texture_02.png","path":"live2d_models/shizuku/assets/moc/shizuku.1024/texture_02.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/moc/shizuku.1024/texture_04.png","path":"live2d_models/shizuku/assets/moc/shizuku.1024/texture_04.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/tororo/assets/moc/tororo.2048/texture_00.png","path":"live2d_models/tororo/assets/moc/tororo.2048/texture_00.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/moc/shizuku.1024/texture_05.png","path":"live2d_models/shizuku/assets/moc/shizuku.1024/texture_05.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/unitychan/assets/moc/unitychan.2048/texture_00.png","path":"live2d_models/unitychan/assets/moc/unitychan.2048/texture_00.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/moc/tsumiki.2048/texture_00.png","path":"live2d_models/tsumiki/assets/moc/tsumiki.2048/texture_00.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/moc/tsumiki.2048/texture_01.png","path":"live2d_models/tsumiki/assets/moc/tsumiki.2048/texture_01.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/wanko/assets/moc/wanko.1024/texture_00.png","path":"live2d_models/wanko/assets/moc/wanko.1024/texture_00.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/z16/assets/moc/z16.1024/texture_00.png","path":"live2d_models/z16/assets/moc/z16.1024/texture_00.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/z16/assets/moc/z16.256/texture_00.png","path":"live2d_models/z16/assets/moc/z16.256/texture_00.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/z16/assets/moc/z16.512/texture_00.png","path":"live2d_models/z16/assets/moc/z16.512/texture_00.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/moc/haru02.1024/texture_00.png","path":"live2d_models/haru/02/assets/moc/haru02.1024/texture_00.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/moc/haru02.1024/texture_01.png","path":"live2d_models/haru/02/assets/moc/haru02.1024/texture_01.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/moc/haru02.1024/texture_02.png","path":"live2d_models/haru/02/assets/moc/haru02.1024/texture_02.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/moc/haru01.1024/texture_01.png","path":"live2d_models/haru/01/assets/moc/haru01.1024/texture_01.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/moc/haru01.1024/texture_00.png","path":"live2d_models/haru/01/assets/moc/haru01.1024/texture_00.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/moc/haru01.1024/texture_02.png","path":"live2d_models/haru/01/assets/moc/haru01.1024/texture_02.png","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/QLabel上画图片.md","hash":"1abb5ccccfeec40fa7f2833fa0a46cdad79b3d56","modified":1650011834879},{"_id":"source/_posts/QTableWidget.md","hash":"6d3ad62e58cae066567fb2686f281f890d40d354","modified":1650011631360},{"_id":"source/_posts/QTableWidget单元格插入控件.md","hash":"c772f05030f7c2ee6d969a1c0b269e9dd9262c00","modified":1650011798279},{"_id":"source/_posts/c++面经.md","hash":"a549fdc34f18390ac84c7d6749593b722a6d3736","modified":1650010419250},{"_id":"source/_posts/hello-world.md","hash":"8b9aee52e8da714f852633084a21aa65a2dc0eaf","modified":1630759929299},{"_id":"source/_posts/list元素交换.md","hash":"85955c9e094182375bd7238b3009328191f60a70","modified":1650011875785},{"_id":"source/_posts/makefile.md","hash":"e9918eafe23a75cd6049e3ca754680ff27795970","modified":1632029609684},{"_id":"source/_posts/qt.md","hash":"6580292d0d64e08571b30995271b051b5d96dab4","modified":1650011542632},{"_id":"source/_posts/socket.md","hash":"a64df65719ab50d75f241f982ca2364cc28a137e","modified":1632029610439},{"_id":"source/categories/index.md","hash":"bb7c7ff1839348faab9088b85b6a89569be1781b","modified":1630756025743},{"_id":"themes/yilia/layout/_partial/toc.ejs","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1602225907000},{"_id":"themes/yilia/.babelrc","hash":"b1b76475ac17dc9e2fa50af96c9e31eea2d0f2b4","modified":1602225907000},{"_id":"themes/yilia/.eslintignore","hash":"df0a50b13cc00acb749226fee3cee6e0351fb1d9","modified":1602225907000},{"_id":"themes/yilia/.editorconfig","hash":"da6d022b8f4d9c961e2f8f80677e92af8de0db4d","modified":1602225907000},{"_id":"themes/yilia/.eslintrc.js","hash":"5696ae049de010ed3786768b0c359f14c05b5ec6","modified":1602225907000},{"_id":"themes/yilia/.gitattributes","hash":"758cfbecfa7919e99abddf3297f37cde7e3d8d4e","modified":1630592357053},{"_id":"themes/yilia/.gitignore","hash":"d5fc575329853ff620b50fc62ad4b18fa09a308a","modified":1630592357053},{"_id":"themes/yilia/README.md","hash":"788993ebaa12fd31ef19157295319f0ac3555f94","modified":1631023702972},{"_id":"themes/yilia/LICENSE","hash":"88f6ff2e1df913b56239ee1899b80f6335dac5c8","modified":1602225907000},{"_id":"themes/yilia/_config.yml","hash":"c8fcee9e03880a1751d72077dd66c5a99651df80","modified":1632923513591},{"_id":"themes/yilia/package.json","hash":"a3465e3a7a3ccc0ad9628b76e9b7572ce3c6f0f5","modified":1602225907000},{"_id":"themes/yilia/webpack.config.js","hash":"7a5fcf1d727c37050880cf6610dc1c55edacdd21","modified":1602225907000},{"_id":"themes/yilia/languages/default.yml","hash":"2f221d8ff1732759583916203aac93491f576757","modified":1602225907000},{"_id":"themes/yilia/examples/index.html","hash":"e0b101738d43b8e79d478040af2536f6a2834d06","modified":1602225907000},{"_id":"themes/yilia/languages/en.yml","hash":"545cab1548654455314ed5fb45419e948f01a567","modified":1602225907000},{"_id":"themes/yilia/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1602225907000},{"_id":"themes/yilia/languages/fr.yml","hash":"84ab164b37c6abf625473e9a0c18f6f815dd5fd9","modified":1602225907000},{"_id":"themes/yilia/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1602225907000},{"_id":"themes/yilia/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1602225907000},{"_id":"themes/yilia/languages/zh-CN.yml","hash":"2f221d8ff1732759583916203aac93491f576757","modified":1602225907000},{"_id":"themes/yilia/languages/zh-tw.yml","hash":"4896b719ed1a4c0a648953648868a451f263a755","modified":1602225907000},{"_id":"themes/yilia/languages/zh-Hans.yml","hash":"2dce39e94020d165ed227b81921474f1846f852f","modified":1602225907000},{"_id":"themes/yilia/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1602225907000},{"_id":"themes/yilia/layout/categories.ejs","hash":"8bc6394fbeb1cc6e98d63778b5c197a29fd076e5","modified":1630756205997},{"_id":"themes/yilia/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1602225907000},{"_id":"themes/yilia/layout/layout.ejs","hash":"fc97c4931b33a500c610b3d3e9d07ccba85fd294","modified":1602225907000},{"_id":"themes/yilia/layout/index.ejs","hash":"2cd6286cdff07e9d83677c7976439bb6f5799ff9","modified":1602225907000},{"_id":"themes/yilia/layout/left-col.ejs","hash":"d60d87a827b1bf2db944f372a7755e9146ca7d62","modified":1630727114786},{"_id":"themes/yilia/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1602225907000},{"_id":"themes/yilia/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1602225907000},{"_id":"themes/yilia/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1602225907000},{"_id":"themes/yilia/scripts/default_config.js","hash":"0456e54a3f637ab8676d3c2ce3280f4dbfffa758","modified":1602225907000},{"_id":"themes/yilia/scripts/yilia_plus_log.js","hash":"8da11cf5d3beda92e17cceab18ed42e98102355f","modified":1602225907000},{"_id":"themes/yilia/source/main.a5fda8.js","hash":"f8fde8b462ec0fbe1e5a231b9bd871241eacdc17","modified":1602225907000},{"_id":"themes/yilia/source/slider.27463f.js","hash":"75db7fcc216082f7363c098fe81c3cbd5e3c87de","modified":1602225907000},{"_id":"themes/yilia/source-src/css.ejs","hash":"ba7ce6a0289f3b7038dca0a4a96f87fbbe473918","modified":1602225907000},{"_id":"themes/yilia/source-src/script.ejs","hash":"e6fb74e9a5f560c90cacab260e82d92c4bcc2d2e","modified":1602225907000},{"_id":"themes/yilia/examples/images/alipay.jpeg","hash":"7eb57147bd42d499f8ef0351d46673158b209f75","modified":1602225907000},{"_id":"themes/yilia/examples/images/qrcode.png","hash":"061607c067991f03bab78904fdba6e8b4bc174b0","modified":1602225907000},{"_id":"themes/yilia/examples/images/weixin.png","hash":"a1201bdc06e1467fea1f78cd56d8af45fdcfd5c0","modified":1602225907000},{"_id":"themes/yilia/layout/_partial/activate-power-mode.ejs","hash":"eff31632727f38992ac50ee69b0eb938dafa145e","modified":1602225907000},{"_id":"themes/yilia/layout/_partial/after-footer.ejs","hash":"1814f9f51664c7d082bca7aced966eb725ca7759","modified":1602225907000},{"_id":"themes/yilia/layout/_partial/archive-post.ejs","hash":"1f7d4819b7f67602c4a1b99871808d2160b60978","modified":1602225907000},{"_id":"themes/yilia/layout/_partial/archive.ejs","hash":"7b8a69ea4b69eb4b152f07fe94b6b00e2b57f680","modified":1652860362671},{"_id":"themes/yilia/layout/_partial/article.ejs","hash":"9c7122571da88c7269756fa7edd88ea67d0c8080","modified":1631195662582},{"_id":"themes/yilia/layout/_partial/aside.ejs","hash":"8edbd7993b9b061611a193533a664e2e85eae748","modified":1602225907000},{"_id":"themes/yilia/layout/_partial/background.ejs","hash":"de4d6912f8eaffc2955d0ae5aabf0eb1312d9778","modified":1602225907000},{"_id":"themes/yilia/layout/_partial/baidu-analytics.ejs","hash":"f0e6e88f9f7eb08b8fe51449a8a3016273507924","modified":1602225907000},{"_id":"themes/yilia/layout/_partial/css.ejs","hash":"225df7b951ff4c89bd7a0b2e4d6d2049cf99d012","modified":1602225907000},{"_id":"themes/yilia/layout/_partial/baidu-push.ejs","hash":"15e992e247ae313845a6db9a1ddaa11ce12db4e3","modified":1602225907000},{"_id":"themes/yilia/layout/_partial/footer.ejs","hash":"a74297ade5cddd12b0a774349dd29d23047e4e66","modified":1631026184777},{"_id":"themes/yilia/layout/_partial/google-analytics.ejs","hash":"5b389110f4d3b727c33c48f088a8bc7f8b577d19","modified":1602225907000},{"_id":"themes/yilia/layout/_partial/head.ejs","hash":"f67f9cf7da5d301d087da5bf49dc11dcc153cba1","modified":1602225907000},{"_id":"themes/yilia/layout/_partial/header.ejs","hash":"72cc1b87d463a7262701e60cec3d5041a2857d0a","modified":1602225907000},{"_id":"themes/yilia/layout/_partial/hover-effect.ejs","hash":"752c3e6f796ef02f40b50703dfdab423c5f2b8ff","modified":1602225907000},{"_id":"themes/yilia/layout/_partial/left-col.ejs","hash":"4b9ae77e79fea489dc371788e92acb6ac8982f5d","modified":1631026293880},{"_id":"themes/yilia/layout/_partial/live2d-widget.ejs","hash":"c11c9974f7d2ef0adb483c4611124e008ad1da27","modified":1602225907000},{"_id":"themes/yilia/layout/_partial/mathjax.ejs","hash":"2a6a030389d4c1e849d0b1ed4fb4205b8a931b90","modified":1602225907000},{"_id":"themes/yilia/layout/_partial/mobile-nav.ejs","hash":"7c0cf992ddc38aff04b065669f3d7b647fb8346c","modified":1631194061669},{"_id":"themes/yilia/layout/_partial/tab-title-change.ejs","hash":"e13d347320660d3056d322abbaf4203736442b4d","modified":1602225907000},{"_id":"themes/yilia/layout/_partial/tools.ejs","hash":"ede8bf25cd1f17b746edb2afecf369247779f1ef","modified":1602225907000},{"_id":"themes/yilia/scripts/filters/index.js","hash":"e435b782178da75656f9616c7af564fb9ff0de50","modified":1602225907000},{"_id":"themes/yilia/layout/_partial/viewer.ejs","hash":"e495790b2abe2290875817e42bd505bc611d3e26","modified":1602225907000},{"_id":"themes/yilia/scripts/filters/meta_generator.js","hash":"86b1380aab223359c75df6268bb0d39ae98f2d8e","modified":1602225907000},{"_id":"themes/yilia/scripts/helpers/wordcount.js","hash":"f9c8fceb2130929b8f11e22b1c3476c99d1574a8","modified":1602225907000},{"_id":"themes/yilia/scripts/helpers/yilia-plus-vendors.js","hash":"301d0537f7bae270e428de47f1b773dd1a65c3f3","modified":1602225907000},{"_id":"themes/yilia/scripts/lib/core.js","hash":"7908a82a86d63f35c6f785cacb1cfaf99ae7e0f9","modified":1602225907000},{"_id":"themes/yilia/source/fonts/default-skin.b257fa.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1602225907000},{"_id":"themes/yilia/source/fonts/fonteditor.3da1ef.woff","hash":"5a945ddf318d3ca68d0a1e8695b23287ff7e9816","modified":1602225907000},{"_id":"themes/yilia/source/fonts/fonteditor.3e0d4a.svg","hash":"de1fbf8378d1966d43bf620b8acd6bf900a15a73","modified":1602225907000},{"_id":"themes/yilia/source/fonts/fonteditor.86c132.eot","hash":"c29905356fb2116a454a262d6f15cdeb593a6cec","modified":1602225907000},{"_id":"themes/yilia/source/fonts/fonteditor.bbc4b5.woff2","hash":"c748dc092f066f7e12626c801d416e64b95dacea","modified":1602225907000},{"_id":"themes/yilia/source/fonts/fonteditor.fe4d8a.ttf","hash":"95d1a4991df9ce15562ff0344b318b5fc5f9ab70","modified":1602225907000},{"_id":"themes/yilia/source/fonts/iconfont.16acc2.ttf","hash":"f342ac8bf4d937f42a7d6a0032ad267ab47eb7f2","modified":1630592357068},{"_id":"themes/yilia/source/fonts/iconfont.45d7ee.svg","hash":"75767c904d483d9b93469afb6b92bb6bdface639","modified":1630592357068},{"_id":"themes/yilia/source/fonts/iconfont.8c627f.woff","hash":"aa9672cb097f7fd73ae5a03bcd3d9d726935bc0a","modified":1630592357068},{"_id":"themes/yilia/source/fonts/iconfont.b322fa.eot","hash":"bc8c5e88f4994a852041b4d83f126d9c4d419b4a","modified":1630592357068},{"_id":"themes/yilia/source/fonts/tooltip.4004ff.svg","hash":"a5e9fe67e0604c24279281d9fdd2ce1f4536d3e5","modified":1602225907000},{"_id":"themes/yilia/source/img/biubiubiu.gif","hash":"cccda381f96abe91b4d698da793abd6496466d3d","modified":1602225907000},{"_id":"themes/yilia/source/img/decade.jpg","hash":"34c44b7153a895e8178e36d9ce7de09f5cf3ce77","modified":1632029990870},{"_id":"themes/yilia/source/img/decade_ico.jpg","hash":"b8934f4670914b25758f9c7cdafd193389d05f0b","modified":1632029323826},{"_id":"themes/yilia/source/img/default-skin.png","hash":"ed95a8e40a2c3478c5915376acb8e5f33677f24d","modified":1602225907000},{"_id":"themes/yilia/source/img/gitee.svg","hash":"fcc6e28d0345e22a6195748cf759eee5d8e48719","modified":1602225907000},{"_id":"themes/yilia/source/img/forkme.png","hash":"b43e6e18b84edc40636204aa0eb9f266ef54a4e7","modified":1602225907000},{"_id":"themes/yilia/source/img/ico.jpg","hash":"a3cc424c84bd9d1a05570ec018e142ddd0a870a9","modified":1630718474246},{"_id":"themes/yilia/source/img/preloader.gif","hash":"6342367c93c82da1b9c620e97c84a389cc43d96d","modified":1602225907000},{"_id":"themes/yilia/source/lib/busuanzi.pure.js","hash":"f54c44e2b30e551540b83640dd8c5ff266e157d5","modified":1602225907000},{"_id":"themes/yilia/source/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1602225907000},{"_id":"themes/yilia/source/lib/clickLove.js","hash":"a35dfb7ff19796c005ee30b55fd95e39d6d59a89","modified":1602225907000},{"_id":"themes/yilia/source/lib/default.css","hash":"c9c344d5c98cc90b5583865e71726bab1046cdeb","modified":1602225907000},{"_id":"themes/yilia/source/lib/gitment.css","hash":"cb2e0be2c7ebbcc3e756340c811864115bf0ec56","modified":1602225907000},{"_id":"themes/yilia/source/lib/oauthcallback.browser.js","hash":"989b9e2638336461a9911ebf60e9a839819dd11f","modified":1602225907000},{"_id":"themes/yilia/source/lib/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1602225907000},{"_id":"themes/yilia/source/lib/snow.js","hash":"12ed5d697aa8a337064a1827ea94c0652c36b4e5","modified":1602225907000},{"_id":"themes/yilia/source-src/css/_core.scss","hash":"c6488119c93ce33bbe15d428dac4a88c3844bf5a","modified":1602225907000},{"_id":"themes/yilia/source-src/css/_function.scss","hash":"93a50dd19a93485712da1f8d0a1672482dd1eabc","modified":1602225907000},{"_id":"themes/yilia/source-src/css/archive.scss","hash":"a3d39002134ec4728e73d7fd9b3f2427776534cc","modified":1602225907000},{"_id":"themes/yilia/source-src/css/article-inner.scss","hash":"9661c0cc5e58530ef3ed6c9bb2e4e6e261b19198","modified":1602225907000},{"_id":"themes/yilia/source-src/css/article-nav.scss","hash":"12ff50f47fe087459fab17e3022ab28c3b5958ab","modified":1602225907000},{"_id":"themes/yilia/source-src/css/article-main.scss","hash":"5318d67971d41bf60cf87caba54cc29c808c8c02","modified":1602225907000},{"_id":"themes/yilia/source-src/css/article.scss","hash":"4016353e822c235b520750272a10c1db60f2c36e","modified":1602225907000},{"_id":"themes/yilia/source-src/css/aside.scss","hash":"126a72c7c428ad560ecc4dff146697e6b39c1e69","modified":1602225907000},{"_id":"themes/yilia/source-src/css/comment.scss","hash":"ed2aad7e7a1a8e803287e2e1a3c94789989a63a1","modified":1602225907000},{"_id":"themes/yilia/source-src/css/declare.scss","hash":"5313349b4da41faea53adb5c05b44b0513258bb0","modified":1602225907000},{"_id":"themes/yilia/source-src/css/fonts.scss","hash":"bf5aec363e2ab2654bebd26e9919ba4eb66c816f","modified":1602225907000},{"_id":"themes/yilia/source-src/css/footer.scss","hash":"2e1d9bd8a4f504a72734f9dfceea0ee4f58a9be4","modified":1602225907000},{"_id":"themes/yilia/source-src/css/global.scss","hash":"5cd157920fab248daaf4fcbf40fb151365977d84","modified":1602225907000},{"_id":"themes/yilia/source-src/css/grid.scss","hash":"22c9ec8b01691782340065ba25fd864ced141c1b","modified":1602225907000},{"_id":"themes/yilia/source-src/css/highlight.scss","hash":"f76e578a8dbd92d48ecfee60eced2ad312cfd3e6","modified":1602225907000},{"_id":"themes/yilia/source-src/css/hover-reveal.scss","hash":"8f558e7329e25c0d510a919d4c3911ff8afc7524","modified":1602225907000},{"_id":"themes/yilia/source-src/css/left.scss","hash":"a0ed3a01ce1d87345f067be561adee3ed7da76b9","modified":1602225907000},{"_id":"themes/yilia/source-src/css/main.scss","hash":"d46e6e9e77bcd7575a78ef226b46e3ca8fa7c902","modified":1602225907000},{"_id":"themes/yilia/source-src/css/mobile-slider.scss","hash":"d74a5aebe2f38ca772e9585f246f05ba0216dca3","modified":1602225907000},{"_id":"themes/yilia/source-src/css/mobile.scss","hash":"a321eb303627be2397520f59ca755d95e71952b8","modified":1602225907000},{"_id":"themes/yilia/source-src/css/reward.scss","hash":"24db3f65f0610051d37f03da50b08ef7483e3023","modified":1602225907000},{"_id":"themes/yilia/source-src/css/page.scss","hash":"23a2ffedb0aaf6de95532b1854364fe7053ae0af","modified":1602225907000},{"_id":"themes/yilia/source-src/css/scroll.scss","hash":"e920a07d275ca7c492e6c5ae0dd1ed6a31ba76e5","modified":1602225907000},{"_id":"themes/yilia/source-src/css/share.scss","hash":"2d74ed49747c7b8c1297477fbf742f868281bb14","modified":1602225907000},{"_id":"themes/yilia/source-src/css/social.scss","hash":"685f9eed9727e54e86acfb32ab00d6cb76129b25","modified":1602225907000},{"_id":"themes/yilia/source-src/css/tags-cloud.scss","hash":"6cd41bb104b31164662f053c11da9b1bef21919b","modified":1602225907000},{"_id":"themes/yilia/source-src/css/tags.scss","hash":"6b24db85c61e0055f37bbdf581acddf8693fbbc0","modified":1602225907000},{"_id":"themes/yilia/source-src/css/tooltip.scss","hash":"ba9bafcfc692562b92ec57b2cc0ba91bdf1ca86f","modified":1602225907000},{"_id":"themes/yilia/source-src/css/tools.scss","hash":"35a3a1278b0227db3b81892ef88de6ce0aca1a2f","modified":1602225907000},{"_id":"themes/yilia/source-src/js/Q.js","hash":"d011af172064b6c6e0c7051d8f9879373ddac113","modified":1602225907000},{"_id":"themes/yilia/source-src/js/anm.js","hash":"cd876d223aef66e6a65fa1ea023c55b1977b448f","modified":1602225907000},{"_id":"themes/yilia/source-src/js/aside.js","hash":"c22e7f9ce94a51924b7adb87fb02faa61f924d12","modified":1602225907000},{"_id":"themes/yilia/source-src/js/browser.js","hash":"d6085974a6f963023ec41347398c7a101bce9ee3","modified":1602225907000},{"_id":"themes/yilia/source-src/js/fix.js","hash":"c5b46cb1969b536e70e3e9ff3ae46d00b9236819","modified":1652860491112},{"_id":"themes/yilia/source-src/js/main.js","hash":"96a6055825a2bb1a34123472f0d36cdc0e1d2b7a","modified":1602225907000},{"_id":"themes/yilia/source-src/js/mobile.js","hash":"f3cfa47d4a4b1c30131f5c003c447d7faeabd6da","modified":1602225907000},{"_id":"themes/yilia/source-src/js/report.js","hash":"57680f9a23bd0a1eaafd64ae08cc33e20627ab15","modified":1630592357068},{"_id":"themes/yilia/source-src/js/slider.js","hash":"383e05285e25a9a5c4b8cab4d7eb95bd4026ea77","modified":1602225907000},{"_id":"themes/yilia/source-src/js/share.js","hash":"d93d3dc3975b2b95083571b5e0ad2cca9a3b4e8e","modified":1602225907000},{"_id":"themes/yilia/source-src/js/viewer.js","hash":"ac68741d8a181b0a3ec84e3490a6c90bbddb28c1","modified":1602225907000},{"_id":"themes/yilia/source-src/js/util.js","hash":"44b81602118c559758aeb63dce02cbe3683aadd8","modified":1602225907000},{"_id":"themes/yilia/layout/_partial/post/category.ejs","hash":"0809a4829aabeb4e911a3ed04ec28db4df7dfe3f","modified":1602225907000},{"_id":"themes/yilia/layout/_partial/post/changyan.ejs","hash":"5f99b55980da64a723a8e14d5a7daba0d6504647","modified":1602225907000},{"_id":"themes/yilia/layout/_partial/post/date.ejs","hash":"3900cb5a1f54ffed3d14ddd1f6492f21908693f6","modified":1602225907000},{"_id":"themes/yilia/layout/_partial/post/duoshuo.ejs","hash":"f6b4c4eaafb5ac386273354b5f64a26139b7a3b0","modified":1630592357053},{"_id":"themes/yilia/layout/_partial/post/giteement.ejs","hash":"1034300f4a9430b18a0fc8ad1b53d9ff5acf715c","modified":1602225907000},{"_id":"themes/yilia/layout/_partial/post/gitment.ejs","hash":"a8225b146b63c44f44082a18cd580690674c1b25","modified":1602225907000},{"_id":"themes/yilia/layout/_partial/post/nav.ejs","hash":"1036c8e4e1a7bc935ba173744da735a0d6ed09cd","modified":1602225907000},{"_id":"themes/yilia/layout/_partial/post/share.ejs","hash":"a136ebe98afd675d6585355a33fb48127b587ec2","modified":1602225907000},{"_id":"themes/yilia/layout/_partial/post/tag.ejs","hash":"2e783e68755abb852760eb0e627a3fbb50a05a55","modified":1602225907000},{"_id":"themes/yilia/layout/_partial/post/title.ejs","hash":"f7713cda65df1426a8de703b7762dd4963e105f1","modified":1631194682943},{"_id":"themes/yilia/layout/_partial/post/wangyiyun.ejs","hash":"fb022502c741b4a26bad6b2ad37245c10ede3f1a","modified":1630592357053},{"_id":"themes/yilia/layout/_partial/post/word.ejs","hash":"41771b20fd88f7e76d2aeedede7b8f9d08988ba6","modified":1631195924610},{"_id":"themes/yilia/source/live2d_models/epsilon2_1/.gitignore","hash":"2aa039aab52800662710bbf503671c770af96621","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/epsilon2_1/package-lock.json","hash":"61398afc4263891ef8e47a07911494c4e223f187","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/epsilon2_1/package.json","hash":"accba9f2f02f2fa65b9103eb2ae8f6d82a9c51aa","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/chitose/.gitignore","hash":"2aa039aab52800662710bbf503671c770af96621","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/chitose/package-lock.json","hash":"13a16c22c14ecd05babda1bcd05ae509f8e36e2f","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/chitose/package.json","hash":"1a9787523593c242cb095109afd630f7e3e879e4","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/gf/.gitignore","hash":"2aa039aab52800662710bbf503671c770af96621","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/gf/package-lock.json","hash":"972676062fd3c5b3d9ff655226d57cc17491682e","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/gf/package.json","hash":"84ebad708c79bf7817c3969bc161fd4ca159d037","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/.gitignore","hash":"2aa039aab52800662710bbf503671c770af96621","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/package-lock.json","hash":"1453c48dae23864d0c1232da5f462abd9d0b87fb","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/package.json","hash":"e98010497cbf995d9ea9a7f4bddefe6bd65987c2","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haruto/.gitignore","hash":"2aa039aab52800662710bbf503671c770af96621","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/hibiki/.gitignore","hash":"2aa039aab52800662710bbf503671c770af96621","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haruto/package.json","hash":"9cf4a018e54719920f98f95063d5c08f1aecd8fe","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haruto/package-lock.json","hash":"39a3f632333ac36bf7cf51e7ac0b1e6fc8195945","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/hibiki/package-lock.json","hash":"2a2881a5677aa79d0bc94f5f2bc9c495c5f21d99","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/hibiki/package.json","hash":"7181977daa9ea701cbf19226c370c4f4c3aa2e5d","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/izumi/package-lock.json","hash":"a0209f204c31385293b7be0cb69bb0946dc08638","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/izumi/.gitignore","hash":"2aa039aab52800662710bbf503671c770af96621","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/izumi/package.json","hash":"1f93d62e12fa1a5ac39454700965c7fea48af6da","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/hijiki/.gitignore","hash":"2aa039aab52800662710bbf503671c770af96621","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/hijiki/package-lock.json","hash":"004a6bb08de386c36806c36bb5f300041d7407cd","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/hijiki/package.json","hash":"0d1c0f7205aa43ec73b60cf93fcf74e09b5392ed","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/koharu/.gitignore","hash":"2aa039aab52800662710bbf503671c770af96621","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/koharu/package-lock.json","hash":"1a3502e15120fabb1c896982df702f6a4f33ec6d","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/koharu/package.json","hash":"cdd641abdeabe453fb32a942a30a1114c92babba","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/miku/.gitignore","hash":"2aa039aab52800662710bbf503671c770af96621","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/miku/package.json","hash":"f4b568edfc4dc3ffda21b7170b412b3b8a3df76a","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/miku/package-lock.json","hash":"18a38b042d647ac54bf75a61feacecd979d5545b","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nico/.gitignore","hash":"2aa039aab52800662710bbf503671c770af96621","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nico/package-lock.json","hash":"401865e9192a50901ff40d2927c196b6222781f8","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nico/package.json","hash":"2a5d7e4d8791dc21fc9e4bc858835906a359cae0","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/ni-j/.gitignore","hash":"2aa039aab52800662710bbf503671c770af96621","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/ni-j/package.json","hash":"2cd6630d13c432c3c2b672af956b7699d8703d2a","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nietzsche/.gitignore","hash":"2aa039aab52800662710bbf503671c770af96621","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/ni-j/package-lock.json","hash":"018d46cfd7fd35a695ae71a904f37aa2bbc4602b","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nipsilon/.gitignore","hash":"2aa039aab52800662710bbf503671c770af96621","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nietzsche/package-lock.json","hash":"ce8eacb41468e4150992962bbef65a659d3751a3","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nietzsche/package.json","hash":"e7aec97ca2d70ab2ad4e44de71c30a22a5234303","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nito/.gitignore","hash":"2aa039aab52800662710bbf503671c770af96621","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nipsilon/package.json","hash":"15b41830870ec1b800211b8963292ecb26ad792a","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nito/package.json","hash":"6144ca1bbbf20ba59de22f907abcacc3e2e38e66","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/shizuku/.gitignore","hash":"2aa039aab52800662710bbf503671c770af96621","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/tororo/.gitignore","hash":"2aa039aab52800662710bbf503671c770af96621","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/shizuku/package-lock.json","hash":"9ee7ec232b70b3ba036d73de5e01991d34422244","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nito/package-lock.json","hash":"c6a73af1e04dc2271eff24a0ec195884ac66a615","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nipsilon/package-lock.json","hash":"3aa9f4f3a55d6a3c4b0267e09a6b873c9885b467","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/shizuku/package.json","hash":"b5a428b63eca192e309289c98a23f36b53c5c239","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/tororo/package-lock.json","hash":"2fb484f7bddd401d0162515482e97443da0db0b5","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/tororo/package.json","hash":"35b2bf469066be74736e53942400922284dcef9d","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/tsumiki/package-lock.json","hash":"1204f760f1d7e8726405061445cc7f8693fd8c13","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/tsumiki/.gitignore","hash":"2aa039aab52800662710bbf503671c770af96621","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/tsumiki/package.json","hash":"0dd4fc54589e0101207792cc2a33e20306a5924e","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/unitychan/.gitignore","hash":"2aa039aab52800662710bbf503671c770af96621","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/wanko/.gitignore","hash":"2aa039aab52800662710bbf503671c770af96621","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/unitychan/package-lock.json","hash":"e16e408bc25ff17269d231678e9759723e4cfd21","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/unitychan/package.json","hash":"3e23d508ebf90fc230f175347efd56b18f3ee42b","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/z16/.gitignore","hash":"2aa039aab52800662710bbf503671c770af96621","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/wanko/package-lock.json","hash":"ad19acef63585bae69f0919434aaf1d1aefa5956","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/wanko/package.json","hash":"f97ec41764abc0d11e056088765123b6a8aae798","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/z16/package-lock.json","hash":"925d90cf2d1ec4fe19ff4b12839cc46e67c4c3e6","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/z16/package.json","hash":"1669f3f4c7a862e384ed9bfe4c4f6158bf60f2ef","modified":1602225907000},{"_id":"themes/yilia/source/plugins/TweenMax/HoverImg.js","hash":"ecc51aed76c22ca181870d4ba47765c0598e3a1b","modified":1602225907000},{"_id":"themes/yilia/source/plugins/TweenMax/charming.min.js","hash":"0b11f943ec562c9031be07203058650eee74d73d","modified":1602225907000},{"_id":"themes/yilia/source/plugins/activate-power-mode/activate-power-mode.js","hash":"8161c7d2b8fd7fa407db3c3429edd8d19f82ae81","modified":1602225907000},{"_id":"themes/yilia/source/plugins/live2d-widget.js/L2Dwidget.min.js","hash":"189df71cee9f1273f134fd78114c72c69b5a44c1","modified":1602225907000},{"_id":"themes/yilia/source/plugins/ribbon.js/ribbon.js","hash":"65b1a8f12d04b15d7ed6eeb9d11dec760a799c5f","modified":1602225907000},{"_id":"themes/yilia/source/plugins/live2d-widget.js/manifest.json","hash":"38026df431641eaf04c205b7bea882f492eae749","modified":1602225907000},{"_id":"themes/yilia/source/plugins/ribbon.js/ribbon.min.js","hash":"3c8e4d717ca107f3723def1795c8ed62a5f1a8d0","modified":1602225907000},{"_id":"themes/yilia/source-src/css/core/_media-queries.scss","hash":"7b54eb05258e2de5bc682503e114d56afda10f8c","modified":1602225907000},{"_id":"themes/yilia/source-src/css/core/_animation.scss","hash":"d36ff0c46a60185f177c462f232734e096d7530a","modified":1602225907000},{"_id":"themes/yilia/source-src/css/core/_mixin.scss","hash":"3b3ea43a675c8d299916361cbb3f3a74982b2454","modified":1602225907000},{"_id":"themes/yilia/source-src/css/core/_reset.scss","hash":"845716a861a3d73e8c6d4d60ef8f5594813a978a","modified":1602225907000},{"_id":"themes/yilia/source-src/css/core/_variables.scss","hash":"b156876e7b529436ba4d8caff03d30af22d91072","modified":1602225907000},{"_id":"themes/yilia/source-src/css/fonts/fonteditor.eot","hash":"c29905356fb2116a454a262d6f15cdeb593a6cec","modified":1602225907000},{"_id":"themes/yilia/source-src/css/fonts/fonteditor.svg","hash":"de1fbf8378d1966d43bf620b8acd6bf900a15a73","modified":1602225907000},{"_id":"themes/yilia/source-src/css/fonts/fonteditor.ttf","hash":"95d1a4991df9ce15562ff0344b318b5fc5f9ab70","modified":1602225907000},{"_id":"themes/yilia/source-src/css/fonts/fonteditor.woff","hash":"5a945ddf318d3ca68d0a1e8695b23287ff7e9816","modified":1602225907000},{"_id":"themes/yilia/source-src/css/fonts/fonteditor.woff2","hash":"c748dc092f066f7e12626c801d416e64b95dacea","modified":1602225907000},{"_id":"themes/yilia/source-src/css/fonts/iconfont.eot","hash":"bc8c5e88f4994a852041b4d83f126d9c4d419b4a","modified":1630592357068},{"_id":"themes/yilia/source-src/css/fonts/iconfont.svg","hash":"75767c904d483d9b93469afb6b92bb6bdface639","modified":1630592357068},{"_id":"themes/yilia/source-src/css/fonts/iconfont.ttf","hash":"f342ac8bf4d937f42a7d6a0032ad267ab47eb7f2","modified":1630592357068},{"_id":"themes/yilia/source-src/css/fonts/iconfont.woff","hash":"aa9672cb097f7fd73ae5a03bcd3d9d726935bc0a","modified":1630592357068},{"_id":"themes/yilia/source-src/css/img/checkered-pattern.png","hash":"049262fa0886989d750637b264bed34ab51c23c8","modified":1602225907000},{"_id":"themes/yilia/source-src/css/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1602225907000},{"_id":"themes/yilia/source-src/css/img/tooltip.svg","hash":"a5e9fe67e0604c24279281d9fdd2ce1f4536d3e5","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/epsilon2_1/assets/Epsilon2.1.model.json","hash":"a47e7d1fd76d5a90d383fa049295c1cdd1546845","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/epsilon2_1/assets/Epsilon2.1.physics.json","hash":"bbf1a8cb496831fbf9715d8431b82fffc9f89257","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/chitose/assets/chitose.model.json","hash":"a9b9986e72b8245f036f6ada876b84a3986c4218","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/chitose/assets/chitose.physics.json","hash":"5ff4acbc4cf23a7f2ff211f50e53df6f6b7c0995","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/chitose/assets/chitose.pose.json","hash":"52f9b579ca15b4b2dc4c5fa71172472dd6924264","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/gf/assets/Gantzert_Felixander.model.json","hash":"d5caeb1c758088ff03bc190cd8dcee98e6e02392","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haruto/assets/haruto.physics.json","hash":"2fbf886979212357ba293bd35884f2cb5b26b6a6","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haruto/assets/haruto.model.json","hash":"76f915f7edbd9c47df0ca041dddb151c0c93a2bf","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/hibiki/assets/hibiki.model.json","hash":"73bbc0004fc21039452f80dc6dc3c287723aedc4","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/izumi/assets/izumi.model.json","hash":"3ba8caa98a3af7b09d7a79419a691f543a1e3ea4","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/hibiki/assets/hibiki.physics.json","hash":"ba100c7a8c3fc777d05f41e3371d18c457febfa7","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/izumi/assets/izumi.physics.json","hash":"cee4a6e1c8ec3e1c2bfc8028ff49dc9c34c06258","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/hijiki/assets/hijiki.model.json","hash":"feff43bf7498d213982c3736c2c029664e4bcbd2","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/koharu/assets/koharu.model.json","hash":"ceccdefd776b7c9475a29cff0842796e4f58b7e9","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/hijiki/assets/hijiki.pose.json","hash":"81438bf69b32c7c11e311b4fe043730cdc7b7ec2","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/koharu/assets/koharu.physics.json","hash":"2fbf886979212357ba293bd35884f2cb5b26b6a6","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/miku/assets/miku.model.json","hash":"32e49dfc6cb4d9c537453bb083aab39ed708c476","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/miku/assets/miku.physics.json","hash":"d5ca7f215044ba5bf1cdb8045a5c99b64ec258ce","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nico/assets/nico.model.json","hash":"9f007936f4748e80a1da60ca078daed595acffee","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nico/assets/nico.physics.json","hash":"1db72a0413771e14d74de955af728224318e91d1","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nico/assets/nico.pose.json","hash":"a8c949d20eebf1e716a495bf806b2eccff62a925","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/ni-j/assets/ni-j.model.json","hash":"3c77e66d6436136bf50d5fdbc8ee8cd543a35e01","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nietzsche/assets/nietzche.model.json","hash":"4f8fb457ddf9b0aa930cbcd4a3258ccdbf9e7506","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/ni-j/assets/ni-j.physics.json","hash":"ef2dd194f934f129f5f4db7785a9c7b7e45671ff","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/ni-j/assets/ni-j.pose.json","hash":"a8c949d20eebf1e716a495bf806b2eccff62a925","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nietzsche/assets/nietzsche.physics.json","hash":"5e83e055f99be8c8752fdcad30f9ed043111b83b","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nietzsche/assets/nietzsche.pose.json","hash":"a8c949d20eebf1e716a495bf806b2eccff62a925","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nipsilon/assets/nipsilon.model.json","hash":"271e40dfe9c04c8b5f5e4c6a9aa4f7ee6c65cff9","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nipsilon/assets/nipsilon.physics.json","hash":"5e83e055f99be8c8752fdcad30f9ed043111b83b","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nipsilon/assets/nipsilon.pose.json","hash":"a8c949d20eebf1e716a495bf806b2eccff62a925","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nito/assets/nito.model.json","hash":"7d7930d1fc8114ae0e694624db457612dca64814","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nito/assets/nito.physics.json","hash":"27db548eec3c5f3c71330e675b3f602cd86f2242","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nito/assets/nito.pose.json","hash":"a8c949d20eebf1e716a495bf806b2eccff62a925","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/shizuku.model.json","hash":"19a05bd41b806a935cea42c2000626fc82da2536","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/shizuku.physics.json","hash":"6484d646e79a44c83784c6ae434cf7349746c5c8","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/shizuku.pose.json","hash":"ac5505efbf80ba0a2e5783d67fe232bc5c6f1f80","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/tororo/assets/tororo.model.json","hash":"3b96ea33460642d288c98327444966d93a0c11ba","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/tororo/assets/tororo.pose.json","hash":"81438bf69b32c7c11e311b4fe043730cdc7b7ec2","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/tsumiki.model.json","hash":"3d5d18ccaf9dc5d4bb42e1c6c3a3d8d89b55524b","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/tsumiki.physics.json","hash":"737f5ef200fd8d33b75bf19176dcff311591bd8f","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/unitychan/assets/unitychan.model.json","hash":"6baa976186d98050740e02eadc796036a16f6fa2","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/unitychan/assets/unitychan.physics.json","hash":"d32ffd9263044d17d46facb5d878ea3683b8023e","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/wanko/assets/wanko.model.json","hash":"b98a8ce54fbcf1606a489f1bc5f26b1a18c82d79","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/z16/assets/z16.model.json","hash":"e69f3d2ecc9bf51b3972ad9df8f6aaa31956910c","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/z16/assets/z16.physics.json","hash":"67f13f60030d7e4c7f824c001ab5254ce4b9bafd","modified":1602225907000},{"_id":"themes/yilia/source/plugins/ribbon.js/demo/index.html","hash":"97ff0bb6307330d15d81075eba56bd85eb589905","modified":1602225907000},{"_id":"themes/yilia/source-src/css/fonts/bak/fonts.scss","hash":"f44c67b61208f6b4a6aa27c90a01fdb0c087d25a","modified":1602225907000},{"_id":"themes/yilia/source-src/css/fonts/bak/iconfont.eot","hash":"bc8c5e88f4994a852041b4d83f126d9c4d419b4a","modified":1602225907000},{"_id":"themes/yilia/source-src/css/fonts/bak/iconfont.svg","hash":"f9304e5714d20861be7d8f4d36687e88e86b9e1b","modified":1602225907000},{"_id":"themes/yilia/source-src/css/fonts/bak/iconfont.ttf","hash":"f342ac8bf4d937f42a7d6a0032ad267ab47eb7f2","modified":1602225907000},{"_id":"themes/yilia/source-src/css/fonts/bak/iconfont.woff","hash":"aa9672cb097f7fd73ae5a03bcd3d9d726935bc0a","modified":1602225907000},{"_id":"themes/yilia/source-src/css/fonts/yilia-plus/fonteditor.eot","hash":"de1e6a237496055048752b719dbbb4872bf6aaa9","modified":1602225907000},{"_id":"themes/yilia/source-src/css/fonts/yilia-plus/fonteditor.svg","hash":"c65b80c65e6042a778011798a4e60832ed424c92","modified":1602225907000},{"_id":"themes/yilia/source-src/css/fonts/yilia-plus/fonteditor.ttf","hash":"eab3ed2ad51d365b48c647a4ab0fae7e5a8368a1","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/epsilon2_1/assets/exp/f01.exp.json","hash":"84073a497ddb6e56c6cfc244a0fb217ba473abf9","modified":1602225907000},{"_id":"themes/yilia/source-src/css/fonts/yilia-plus/fonteditor.woff","hash":"555d609b08a87cee313fa64ce4677cc90aa9512d","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/epsilon2_1/assets/exp/f02.exp.json","hash":"fb553024b5a62d0a54ba32c40b5d12598dc434e7","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/epsilon2_1/assets/exp/f03.exp.json","hash":"02d1ac5b6d9019a1ee89b9d4d82894458deae35d","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/epsilon2_1/assets/exp/f05.exp.json","hash":"b53d5e42ca3105b19e5fe5fbf7fe4a6b4ced61f2","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/epsilon2_1/assets/exp/f04.exp.json","hash":"05dccc2eab9b9d019af1a9cc6f748276376dd828","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/epsilon2_1/assets/exp/f06.exp.json","hash":"0a7f5b3ac25b13d8688b1f529f3279a8342e3c75","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/epsilon2_1/assets/exp/f07.exp.json","hash":"d501ae71f1e36ff7e7834422900c0e84b8de8f28","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/epsilon2_1/assets/exp/f08.exp.json","hash":"1dbb31e341c9fcc59475bd2594d60648c0c3e51c","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_idle_01.mtn","hash":"b4e67d3091aba34efcf9ff3659fa36f6f1a4bd22","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_01.mtn","hash":"eecc2854bea6bf90c9f0a0013281ec600c32f2bc","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_02.mtn","hash":"7a000a218b098172eeeb8a81e551d558bbaa6f8a","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_03.mtn","hash":"3568fc9f7ba95f2521abec8e1241da62581ab7cf","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_04.mtn","hash":"b717b620d044859762716d104e137dc9c09c8cce","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_05.mtn","hash":"f3a671a29f5d831f04284a8d5fe5adb90cd1e400","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_06.mtn","hash":"fec328bedb7d5af53e0cfd0eb5991f4574c3676a","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_07.mtn","hash":"2fd581bfc662b050c41afb904b9ae54b59d7d010","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_08.mtn","hash":"e61753f72a1c170926c59c71490596aaeee30ca6","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_sp_01.mtn","hash":"d72c01b4d9c4faf0f4cb472c390a35712b2ee7f5","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_sp_02.mtn","hash":"08f6d29160ce7100441efdd8ac7bbd89fc9c5120","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_sp_04.mtn","hash":"42ae0fbe437cd97c623c09bee100c3695abb30ce","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_sp_03.mtn","hash":"55c11be6e505791de438c43ad25c31409713544a","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_sp_05.mtn","hash":"9eb78800c41148712ac30e1342f025110db0f8d3","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_shake_01.mtn","hash":"8f81d974ada9b6800fa6eb852a41906a9e1f4c77","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/chitose/assets/exp/f01.exp.json","hash":"84073a497ddb6e56c6cfc244a0fb217ba473abf9","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/chitose/assets/exp/f02.exp.json","hash":"5b3dfc33ba22945adb77efacb9c55efbfd4975f9","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/chitose/assets/exp/f03.exp.json","hash":"a506220e6b908154eea59f4bcfd73e7a457616b6","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/chitose/assets/exp/f04.exp.json","hash":"6fee0e4d489e8ca3b7252b9dfc7c25cbe6a6a1e7","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/chitose/assets/exp/f05.exp.json","hash":"154b1b33701c61570e8adc5cab977ea3198ade6a","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/chitose/assets/exp/f06.exp.json","hash":"f3db49d621e2008b9eb59fba98e10db5dbd19d3d","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/chitose/assets/exp/f07.exp.json","hash":"1ad00a1e4843b5b31b0c43fa292193bb049f6779","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/chitose/assets/mtn/chitose_handwave.mtn","hash":"3d7a0f7ffda7d2ac3bb6fde6ccc49521c0d7713b","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/chitose/assets/mtn/chitose_idle.mtn","hash":"f3d1ab532e49a20e98cadb0290c959d7f1086eb6","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/chitose/assets/mtn/chitose_kime01.mtn","hash":"97308ef8c5798374a6b1ba6cdec53d6732a4728a","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/chitose/assets/mtn/chitose_kime02.mtn","hash":"3eed16b70dc2f7b7e50417f19207e3cabccaa166","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/gf/assets/mtn/A_00_idle.mtn","hash":"d383fc08986b4d1f746d71abbea6f7b5f54dcc95","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/gf/assets/mtn/A_01.mtn","hash":"91d2def2e00393fcedaaca36cd80340fa95a2d1b","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/gf/assets/mtn/A_02.mtn","hash":"9283c809509daf3f580dcb92bab14960b5a89283","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/gf/assets/mtn/A_03.mtn","hash":"afec07ed22acdf28a5c49b78c560e29c3c2cfaa0","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/gf/assets/mtn/A_05.mtn","hash":"40ad1e684108035c6478b76c9e4e1953104725da","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/gf/assets/mtn/A_04.mtn","hash":"50360a6572518b447af3315236659a576aa1b248","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/haru02.model.json","hash":"ffed6d4654deeb772e389213f84701940ee0126f","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/haru02.physics.json","hash":"490ab4735f5cddca766344468591c0eb90cda1f7","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/haru02.pose.json","hash":"4fb902065bd3f309fa0029fe2505424851fd489f","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/haru01.model.json","hash":"cab2aac3d697eafa420e8a02b1f52c1f19666ffd","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/haru01.physics.json","hash":"490ab4735f5cddca766344468591c0eb90cda1f7","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/haru01.pose.json","hash":"4fb902065bd3f309fa0029fe2505424851fd489f","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haruto/assets/mtn/01.mtn","hash":"61d7d590d9feb71b32fd6bd142b59410d75bc1fa","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haruto/assets/mtn/02.mtn","hash":"efc99efdff39c93372cff0f6d62c4e748e1a5593","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haruto/assets/mtn/04.mtn","hash":"32c888667455a3ff6f1b04f910c1a5cc4de30af0","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haruto/assets/mtn/03.mtn","hash":"a72b697a92a7cff40d15774b143b465b34cee5e6","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haruto/assets/mtn/05.mtn","hash":"637e00442da4042cd4b0ed2cc62ffb1559881814","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haruto/assets/mtn/06.mtn","hash":"df10cc1d333c96da1296a4853c1ddbd44d8a11f3","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haruto/assets/mtn/08.mtn","hash":"9b95ef8548b979d1fca557c74f8d66fb15b34578","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haruto/assets/mtn/07.mtn","hash":"d8c9410135c81604eba665b59808089808e0851a","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haruto/assets/mtn/09.mtn","hash":"ecf1283b72e1c4b7e3a97343cd97726813f18790","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haruto/assets/mtn/idle_02.mtn","hash":"d130dd1d194f05b3eb5391289b0339999e37c3a6","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/hibiki/assets/exp/f01.exp.json","hash":"84073a497ddb6e56c6cfc244a0fb217ba473abf9","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/hibiki/assets/exp/f02.exp.json","hash":"a5f786a8ebce6d2b14efcd4476179ed324c8def6","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/hibiki/assets/exp/f03.exp.json","hash":"b8f958f736acd4eb7433043fbae946487e872f5b","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/hibiki/assets/exp/f04.exp.json","hash":"19fdb5558be54a9ec6d882e2d1780a369bc66b62","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/hibiki/assets/exp/f05.exp.json","hash":"8fdbc6eabb1890bc5953f170f95e4404bd3d62b4","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/hibiki/assets/exp/f06.exp.json","hash":"b8ee09beda85aff415e6598ecd6573a238e15d18","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/hibiki/assets/mtn/hibiki_01.mtn","hash":"cd220b89c26e1267fd7ab8f7cfc714fcd4c3b5a3","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/hibiki/assets/mtn/hibiki_02.mtn","hash":"985154bee77e2934afe74a45071f51e0aa1ac84d","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/hibiki/assets/mtn/hibiki_03.mtn","hash":"0b2e7cb2a32b70a629d9d21205863bb163d06d47","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/hibiki/assets/mtn/hibiki_04.mtn","hash":"6a753859998d7afa17f119f37c5765f0c10b7bca","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/hibiki/assets/mtn/hibiki_05.mtn","hash":"67dc8d35f050e36d08010d55ddbfd06544fb7ad5","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/hibiki/assets/mtn/idle_01.mtn","hash":"3fac7f98ab71858018cbbf21b5a3ad99166d275b","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/hibiki/assets/mtn/idle_02.mtn","hash":"9f7dae129a20775b3209a16ee28e27f496e90ba5","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/hibiki/assets/mtn/idle_03.mtn","hash":"c85916f8699673b0511fd00cd1953896879e0cc5","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/hibiki/assets/mtn/idle_04.mtn","hash":"80d4e53606b3268623b03d12a28570efdb5739ad","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/hibiki/assets/snd/hibiki_01.mp3","hash":"2880911aa4a85958fe02e54b912fbf7e6a1896c6","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/hibiki/assets/snd/hibiki_02.mp3","hash":"75358d4c7ec03c4b1dc02ef60c716d94f031fe2f","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/hibiki/assets/snd/hibiki_03.mp3","hash":"df05cb8288b17e1ad00ed66a731f1558db28cf9b","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/izumi/assets/exp/f01.exp.json","hash":"84073a497ddb6e56c6cfc244a0fb217ba473abf9","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/hibiki/assets/snd/hibiki_04.mp3","hash":"57d76906838b186bee2d47f768e54ac18e44d472","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/hibiki/assets/snd/hibiki_05.mp3","hash":"e8788bb9e92467e21933ac2140114a21b9ad215a","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/izumi/assets/exp/f02.exp.json","hash":"d4c339f80452528f6cacba3ffe97fbb9e2e4d144","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/izumi/assets/exp/f03.exp.json","hash":"fc1f79f65c09c845f08ee92d237f8cfabe90a3c6","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/izumi/assets/exp/f04.exp.json","hash":"2e4f19882061c1b9bf49537244550cb5c9dd8a18","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/izumi/assets/exp/f05.exp.json","hash":"b0c99350872f614a2a7f60e6479a4799d2d74986","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/izumi/assets/exp/f07.exp.json","hash":"bb8dc60fc59444fee419265e68216bdcc0282b0b","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/izumi/assets/exp/f06.exp.json","hash":"fd90baab724e71a25c8fd1eba2fab97974906374","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/izumi/assets/mtn/idle_01.mtn","hash":"ce50f5c562b282dcb11679f682fe0f9e1bb0f37b","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/izumi/assets/mtn/idle_02.mtn","hash":"0c6b52bf64db7bbfee81ee24240ca991320764b4","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/izumi/assets/mtn/idle_03.mtn","hash":"b374923d973970f2c8331b3420660952e2bd8bf5","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/izumi/assets/mtn/idle_04.mtn","hash":"97c0a45af4f0b9f4b828f43eccb1c77c360af637","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/izumi/assets/mtn/izumi_01.mtn","hash":"36286812dc692e00a0b69e71d7fe3c8a2b672281","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/izumi/assets/mtn/izumi_02.mtn","hash":"90add71910fd83c1c66bfb73db6d6d4766c98dac","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/izumi/assets/mtn/izumi_03.mtn","hash":"fc7f8e01f8e7744cbd13a8fea44dda8270f21aeb","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/izumi/assets/mtn/izumi_04.mtn","hash":"551b95d80d31ed4f06d19d99ccc4f795a8392ea3","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/izumi/assets/mtn/izumi_05.mtn","hash":"dbfea56881f31a79bffb6d107e7b1fa867e2da0e","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/izumi/assets/mtn/izumi_06.mtn","hash":"c1a63e659fcc6d5b1b0eac7eaff60faf43e2cb28","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/izumi/assets/mtn/izumi_07.mtn","hash":"e2f9e8cb428fa83251a45166d8f9acad570a47d9","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/izumi/assets/mtn/izumi_08.mtn","hash":"19fc90977a0ca30c18f4afae90d4c3ea27a9b094","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/izumi/assets/mtn/izumi_09.mtn","hash":"97199471755394bed243a29b4cb8397518487296","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/izumi/assets/mtn/izumi_10.mtn","hash":"244ae631fb963ed7619e5d63f189d947a2497eb2","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/izumi/assets/snd/izumi_01.mp3","hash":"11dd394ab4d11d3a3c6d6a1a305ff3a1d1fed21d","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/izumi/assets/snd/izumi_02.mp3","hash":"d35189bae63cc6ef18d3a949c4a46dd5ed74c6b3","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/izumi/assets/snd/izumi_03.mp3","hash":"b3d6e98bc30eaf8ac0cf7ffe2f297742a819b380","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/izumi/assets/snd/izumi_04.mp3","hash":"7647fb1e8823bb48ee5f82dbeac35e3f61b74bef","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/izumi/assets/snd/izumi_05.mp3","hash":"05e44723c24b387a0eab37a0ab4120ef19ae317e","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/izumi/assets/snd/izumi_06.mp3","hash":"f39ee4b85ed9877100c028bf938a9a8fd0d2cb6b","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/izumi/assets/snd/izumi_07.mp3","hash":"0c13c0096d02ceb37b3bcce085206b5d6d8ae834","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/hijiki/assets/mtn/00_idle.mtn","hash":"b224c60e463b9f71ddbfc0c720e430496c175f4f","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/hijiki/assets/mtn/01.mtn","hash":"fb550833ae22c9954c3e01df37ed29b2d61700f2","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/izumi/assets/snd/izumi_09.mp3","hash":"f7bce48ee99bdad6fa187c484872eafce0b0e351","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/izumi/assets/snd/izumi_08.mp3","hash":"0b73b4f9216ee6b944a91b599c942d567a39fe0f","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/hijiki/assets/mtn/02.mtn","hash":"7eafc52edc73b7cb80ae70d34b43c6ac778fa47b","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/izumi/assets/snd/izumi_10.mp3","hash":"53013c1cc56296a3843d4c8e3f01fd67747b169b","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/hijiki/assets/mtn/03.mtn","hash":"f900737c7a98441cbb2e05255427e6260e19ae68","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/hijiki/assets/mtn/05.mtn","hash":"dd20ad24b5d1830a5d44b9bccb28f922eea5e0e5","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/hijiki/assets/mtn/04.mtn","hash":"c7a25d3c5d783639bae18db2f3cd284b819c3c85","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/hijiki/assets/mtn/07.mtn","hash":"b7f2e3a9fa4f3ffbb6e64a08f8d9f45ca1868ffb","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/hijiki/assets/mtn/06.mtn","hash":"ad404bd852d276cdd3d054c953e23f90e4e45ae1","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/hijiki/assets/mtn/08.mtn","hash":"4411c7651ff65195b113d95e7d5ebef8a59a37d9","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/koharu/assets/mtn/01.mtn","hash":"61d7d590d9feb71b32fd6bd142b59410d75bc1fa","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/koharu/assets/mtn/02.mtn","hash":"efc99efdff39c93372cff0f6d62c4e748e1a5593","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/koharu/assets/mtn/03.mtn","hash":"a72b697a92a7cff40d15774b143b465b34cee5e6","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/koharu/assets/mtn/04.mtn","hash":"32c888667455a3ff6f1b04f910c1a5cc4de30af0","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/koharu/assets/mtn/05.mtn","hash":"637e00442da4042cd4b0ed2cc62ffb1559881814","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/koharu/assets/mtn/06.mtn","hash":"df10cc1d333c96da1296a4853c1ddbd44d8a11f3","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/koharu/assets/mtn/07.mtn","hash":"d8c9410135c81604eba665b59808089808e0851a","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/koharu/assets/mtn/08.mtn","hash":"9b95ef8548b979d1fca557c74f8d66fb15b34578","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/koharu/assets/mtn/09.mtn","hash":"ecf1283b72e1c4b7e3a97343cd97726813f18790","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/koharu/assets/mtn/idle.mtn","hash":"058d4628ab04bf42c279501ba4fa37116d384e41","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/miku/assets/mtn/miku_idle_01.mtn","hash":"5633f73601cf8b0a318e7a7265f71cc782683251","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/miku/assets/mtn/miku_m_01.mtn","hash":"bd0ea5f2f0528b21c4e5632838b69e478b652e88","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/miku/assets/mtn/miku_m_02.mtn","hash":"2eda9602d626d89285e0c0c5f564383964516cc8","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/miku/assets/mtn/miku_m_03.mtn","hash":"94ef9d31a78f7f90d3fb213c4353afbdb3462cff","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/miku/assets/mtn/miku_m_04.mtn","hash":"5c440e8f4cd45e73a7c8044ea0e2ea11234f9fd9","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/miku/assets/mtn/miku_m_05.mtn","hash":"73b9b162c1dbf9a6747364ae47b12cba9da0bbec","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/miku/assets/mtn/miku_shake_01.mtn","hash":"190875ab6cdeee7ae87c4c296429b848c942dd8a","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/miku/assets/mtn/miku_m_06.mtn","hash":"0bfd6ad29e5e171a1ce03a7acb8ffcca9f463902","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nico/assets/mtn/00_idle.mtn","hash":"3686b7bfdb43f85f4fe1d94ed59379d2c4bee41d","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nico/assets/mtn/01_happy.mtn","hash":"2020573671b39c81fbd784a8b873ebee019ca501","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nico/assets/mtn/02_angry.mtn","hash":"f75e1f580c64695fbbf8ba3c5f49eafc7208411d","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nico/assets/mtn/03_fear.mtn","hash":"b6cdb8fa48960b2a6e66d78ea992221e8108437b","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nico/assets/mtn/05_fun.mtn","hash":"4b956c9c028dce753fafa1859404a136975786d4","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nico/assets/mtn/04_surprise.mtn","hash":"4b911af06de9bc6f386aecd623851e5799edaa96","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nico/assets/mtn/06_love.mtn","hash":"c9f90cc2e2be55ac9c19cf6a962330dad3833fc1","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nico/assets/mtn/07_bye.mtn","hash":"6a3e90e8efb64cd5b187196625a3d8915efb21c8","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nico/assets/mtn/08_sad.mtn","hash":"63647d9320bf3928d658e1275adbfaeba88748b7","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nico/assets/mtn/09_yawn.mtn","hash":"e0e29a712b01be59ae8bba2e1a0d850e06260d20","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nico/assets/mtn/10_yeah.mtn","hash":"58c4bda1339f41fa8a7e554509a7a871bad392b8","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nico/assets/mtn/11_muscle.mtn","hash":"7d0e3466a996f8704e86913c723ac4b82f14ff47","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nico/assets/mtn/12_stagger.mtn","hash":"3f1a0b25cb1b9fb150f7a9ef37e8c9ba8d4e6ba1","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nico/assets/mtn/13_cry.mtn","hash":"27709b59d2e6cba73d69a67cadb8bf50413206a9","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nico/assets/mtn/14_ sigh.mtn","hash":"80c4e4f539253d86a7aa5faae2c5e5a3a7b1adcc","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nico/assets/mtn/15_joy.mtn","hash":"b76a24efc57e4c2cc4abf70c293b2e800029a20d","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nico/assets/mtn/16_menace.mtn","hash":"6edb6b114d53d7f93cff164992db475b0b6f09c3","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nico/assets/mtn/17_yes.mtn","hash":"a023cc93e55b3940f1a8690dcfa7ad1cfa534fad","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nico/assets/mtn/18_no.mtn","hash":"9a18a2537bf6634da2bafd3a57d236de30c73b4e","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nico/assets/mtn/19_walk.mtn","hash":"035516e8cdaa5b3c6e7524daca72294284a81126","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nico/assets/mtn/20_sleep.mtn","hash":"914e4670825467e5e8d2f6983bd21c7190e57310","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/ni-j/assets/mtn/00_idle.mtn","hash":"3686b7bfdb43f85f4fe1d94ed59379d2c4bee41d","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/ni-j/assets/mtn/01_happy.mtn","hash":"2020573671b39c81fbd784a8b873ebee019ca501","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/ni-j/assets/mtn/02_angry.mtn","hash":"f75e1f580c64695fbbf8ba3c5f49eafc7208411d","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/ni-j/assets/mtn/03_fear.mtn","hash":"b6cdb8fa48960b2a6e66d78ea992221e8108437b","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/ni-j/assets/mtn/04_surprise.mtn","hash":"4b911af06de9bc6f386aecd623851e5799edaa96","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/ni-j/assets/mtn/05_fun.mtn","hash":"4b956c9c028dce753fafa1859404a136975786d4","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/ni-j/assets/mtn/07_bye.mtn","hash":"6a3e90e8efb64cd5b187196625a3d8915efb21c8","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/ni-j/assets/mtn/06_love.mtn","hash":"c9f90cc2e2be55ac9c19cf6a962330dad3833fc1","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/ni-j/assets/mtn/08_sad.mtn","hash":"63647d9320bf3928d658e1275adbfaeba88748b7","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/ni-j/assets/mtn/09_yawn.mtn","hash":"e0e29a712b01be59ae8bba2e1a0d850e06260d20","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/ni-j/assets/mtn/10_yeah.mtn","hash":"58c4bda1339f41fa8a7e554509a7a871bad392b8","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/ni-j/assets/mtn/11_muscle.mtn","hash":"7d0e3466a996f8704e86913c723ac4b82f14ff47","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/ni-j/assets/mtn/12_stagger.mtn","hash":"3f1a0b25cb1b9fb150f7a9ef37e8c9ba8d4e6ba1","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/ni-j/assets/mtn/13_cry.mtn","hash":"27709b59d2e6cba73d69a67cadb8bf50413206a9","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/ni-j/assets/mtn/14_ sigh.mtn","hash":"80c4e4f539253d86a7aa5faae2c5e5a3a7b1adcc","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/ni-j/assets/mtn/15_joy.mtn","hash":"b76a24efc57e4c2cc4abf70c293b2e800029a20d","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/ni-j/assets/mtn/17_yes.mtn","hash":"a023cc93e55b3940f1a8690dcfa7ad1cfa534fad","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/ni-j/assets/mtn/16_menace.mtn","hash":"6edb6b114d53d7f93cff164992db475b0b6f09c3","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/ni-j/assets/mtn/18_no.mtn","hash":"9a18a2537bf6634da2bafd3a57d236de30c73b4e","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/ni-j/assets/mtn/19_walk.mtn","hash":"035516e8cdaa5b3c6e7524daca72294284a81126","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/ni-j/assets/mtn/20_sleep.mtn","hash":"914e4670825467e5e8d2f6983bd21c7190e57310","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nietzsche/assets/mtn/00_idle.mtn","hash":"3686b7bfdb43f85f4fe1d94ed59379d2c4bee41d","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nietzsche/assets/mtn/01_happy.mtn","hash":"2020573671b39c81fbd784a8b873ebee019ca501","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nietzsche/assets/mtn/02_angry.mtn","hash":"f75e1f580c64695fbbf8ba3c5f49eafc7208411d","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nietzsche/assets/mtn/03_fear.mtn","hash":"b6cdb8fa48960b2a6e66d78ea992221e8108437b","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nietzsche/assets/mtn/05_fun.mtn","hash":"4b956c9c028dce753fafa1859404a136975786d4","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nietzsche/assets/mtn/04_surprise.mtn","hash":"4b911af06de9bc6f386aecd623851e5799edaa96","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nietzsche/assets/mtn/06_love.mtn","hash":"c9f90cc2e2be55ac9c19cf6a962330dad3833fc1","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nietzsche/assets/mtn/07_bye.mtn","hash":"6a3e90e8efb64cd5b187196625a3d8915efb21c8","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nietzsche/assets/mtn/08_sad.mtn","hash":"63647d9320bf3928d658e1275adbfaeba88748b7","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nietzsche/assets/mtn/10_yeah.mtn","hash":"58c4bda1339f41fa8a7e554509a7a871bad392b8","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nietzsche/assets/mtn/09_yawn.mtn","hash":"e0e29a712b01be59ae8bba2e1a0d850e06260d20","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nietzsche/assets/mtn/11_muscle.mtn","hash":"7d0e3466a996f8704e86913c723ac4b82f14ff47","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nietzsche/assets/mtn/12_stagger.mtn","hash":"3f1a0b25cb1b9fb150f7a9ef37e8c9ba8d4e6ba1","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nietzsche/assets/mtn/13_cry.mtn","hash":"27709b59d2e6cba73d69a67cadb8bf50413206a9","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nietzsche/assets/mtn/14_ sigh.mtn","hash":"80c4e4f539253d86a7aa5faae2c5e5a3a7b1adcc","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nietzsche/assets/mtn/15_joy.mtn","hash":"b76a24efc57e4c2cc4abf70c293b2e800029a20d","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nietzsche/assets/mtn/17_yes.mtn","hash":"a023cc93e55b3940f1a8690dcfa7ad1cfa534fad","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nietzsche/assets/mtn/18_no.mtn","hash":"9a18a2537bf6634da2bafd3a57d236de30c73b4e","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nietzsche/assets/mtn/16_menace.mtn","hash":"6edb6b114d53d7f93cff164992db475b0b6f09c3","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nietzsche/assets/mtn/19_walk.mtn","hash":"035516e8cdaa5b3c6e7524daca72294284a81126","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nietzsche/assets/mtn/20_sleep.mtn","hash":"914e4670825467e5e8d2f6983bd21c7190e57310","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nipsilon/assets/mtn/00_idle.mtn","hash":"3686b7bfdb43f85f4fe1d94ed59379d2c4bee41d","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nipsilon/assets/mtn/01_happy.mtn","hash":"2020573671b39c81fbd784a8b873ebee019ca501","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nipsilon/assets/mtn/02_angry.mtn","hash":"f75e1f580c64695fbbf8ba3c5f49eafc7208411d","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nipsilon/assets/mtn/03_fear.mtn","hash":"b6cdb8fa48960b2a6e66d78ea992221e8108437b","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nipsilon/assets/mtn/04_surprise.mtn","hash":"4b911af06de9bc6f386aecd623851e5799edaa96","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nipsilon/assets/mtn/05_fun.mtn","hash":"4b956c9c028dce753fafa1859404a136975786d4","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nipsilon/assets/mtn/06_love.mtn","hash":"c9f90cc2e2be55ac9c19cf6a962330dad3833fc1","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nipsilon/assets/mtn/07_bye.mtn","hash":"6a3e90e8efb64cd5b187196625a3d8915efb21c8","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nipsilon/assets/mtn/08_sad.mtn","hash":"63647d9320bf3928d658e1275adbfaeba88748b7","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nipsilon/assets/mtn/09_yawn.mtn","hash":"e0e29a712b01be59ae8bba2e1a0d850e06260d20","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nipsilon/assets/mtn/10_yeah.mtn","hash":"58c4bda1339f41fa8a7e554509a7a871bad392b8","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nipsilon/assets/mtn/11_muscle.mtn","hash":"7d0e3466a996f8704e86913c723ac4b82f14ff47","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nipsilon/assets/mtn/12_stagger.mtn","hash":"3f1a0b25cb1b9fb150f7a9ef37e8c9ba8d4e6ba1","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nipsilon/assets/mtn/13_cry.mtn","hash":"27709b59d2e6cba73d69a67cadb8bf50413206a9","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nipsilon/assets/mtn/14_ sigh.mtn","hash":"80c4e4f539253d86a7aa5faae2c5e5a3a7b1adcc","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nipsilon/assets/mtn/15_joy.mtn","hash":"b76a24efc57e4c2cc4abf70c293b2e800029a20d","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nipsilon/assets/mtn/16_menace.mtn","hash":"6edb6b114d53d7f93cff164992db475b0b6f09c3","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nipsilon/assets/mtn/17_yes.mtn","hash":"a023cc93e55b3940f1a8690dcfa7ad1cfa534fad","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nipsilon/assets/mtn/18_no.mtn","hash":"9a18a2537bf6634da2bafd3a57d236de30c73b4e","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nipsilon/assets/mtn/20_sleep.mtn","hash":"914e4670825467e5e8d2f6983bd21c7190e57310","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nipsilon/assets/mtn/19_walk.mtn","hash":"035516e8cdaa5b3c6e7524daca72294284a81126","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nito/assets/mtn/00_idle.mtn","hash":"3686b7bfdb43f85f4fe1d94ed59379d2c4bee41d","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nito/assets/mtn/01_happy.mtn","hash":"2020573671b39c81fbd784a8b873ebee019ca501","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nito/assets/mtn/02_angry.mtn","hash":"f75e1f580c64695fbbf8ba3c5f49eafc7208411d","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nito/assets/mtn/03_fear.mtn","hash":"b6cdb8fa48960b2a6e66d78ea992221e8108437b","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nito/assets/mtn/04_surprise.mtn","hash":"4b911af06de9bc6f386aecd623851e5799edaa96","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nito/assets/mtn/05_fun.mtn","hash":"4b956c9c028dce753fafa1859404a136975786d4","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nito/assets/mtn/06_love.mtn","hash":"c9f90cc2e2be55ac9c19cf6a962330dad3833fc1","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nito/assets/mtn/07_bye.mtn","hash":"6a3e90e8efb64cd5b187196625a3d8915efb21c8","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nito/assets/mtn/08_sad.mtn","hash":"63647d9320bf3928d658e1275adbfaeba88748b7","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nito/assets/mtn/09_yawn.mtn","hash":"e0e29a712b01be59ae8bba2e1a0d850e06260d20","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nito/assets/mtn/10_yeah.mtn","hash":"58c4bda1339f41fa8a7e554509a7a871bad392b8","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nito/assets/mtn/11_muscle.mtn","hash":"7d0e3466a996f8704e86913c723ac4b82f14ff47","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nito/assets/mtn/12_stagger.mtn","hash":"3f1a0b25cb1b9fb150f7a9ef37e8c9ba8d4e6ba1","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nito/assets/mtn/13_cry.mtn","hash":"27709b59d2e6cba73d69a67cadb8bf50413206a9","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nito/assets/mtn/14_ sigh.mtn","hash":"80c4e4f539253d86a7aa5faae2c5e5a3a7b1adcc","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nito/assets/mtn/15_joy.mtn","hash":"b76a24efc57e4c2cc4abf70c293b2e800029a20d","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nito/assets/mtn/16_menace.mtn","hash":"6edb6b114d53d7f93cff164992db475b0b6f09c3","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nito/assets/mtn/17_yes.mtn","hash":"a023cc93e55b3940f1a8690dcfa7ad1cfa534fad","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nito/assets/mtn/18_no.mtn","hash":"9a18a2537bf6634da2bafd3a57d236de30c73b4e","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nito/assets/mtn/19_walk.mtn","hash":"035516e8cdaa5b3c6e7524daca72294284a81126","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/exp/f01.exp.json","hash":"84073a497ddb6e56c6cfc244a0fb217ba473abf9","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nito/assets/mtn/20_sleep.mtn","hash":"914e4670825467e5e8d2f6983bd21c7190e57310","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/exp/f02.exp.json","hash":"241b6afafa2e25c6d7a54692a8b5aa060a137ab1","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/exp/f03.exp.json","hash":"fbf7729e504f14f83f976827fcf62301a6579a34","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/exp/f04.exp.json","hash":"35e746ede62e7090e7dfb08561d77772f58b4153","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/mtn/flickHead_02.mtn","hash":"d3c9c0acb4dc25a2274f3b9faa71e5ce60ad92e4","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/mtn/flickHead_01.mtn","hash":"a1011d6bf397bcd3c3c968d9616f88fe1ffbc83c","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/mtn/idle_00.mtn","hash":"f9fa4acb170959ed665690d18790fc618cea6bd2","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/mtn/flickHead_00.mtn","hash":"f64c79c9171660db5c440bef229ac2e35a1597d5","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/mtn/idle_01.mtn","hash":"fe824e9209bda79277f4785a637c38bf3b8e1cad","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/mtn/pinchIn_00.mtn","hash":"70978b4c983f6a9fd6d3d9c24571586f7d6eac30","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/mtn/idle_02.mtn","hash":"58b87745d9c2b2b5667549a52a781b6bfea44927","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/mtn/pinchIn_01.mtn","hash":"a5fefb45115695db72b9499e627a51b2b9394f2c","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/mtn/pinchIn_02.mtn","hash":"aa0d66ca9b06c374577fd7e64e89756de1e1f2ae","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/mtn/pinchOut_01.mtn","hash":"e05df948d08b17f34c993a9c1f901190509d5db0","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/mtn/pinchOut_00.mtn","hash":"e07fe8fd8c2810e3c1d28b730bd49c8c25849bad","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/mtn/pinchOut_02.mtn","hash":"b323fd350d334b33bbdfb31194ae664089986c27","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/mtn/shake_00.mtn","hash":"5185d02c7ab9f0bec3d4a890b54b2378e553373d","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/mtn/shake_01.mtn","hash":"e812985a56796e122018f9d57d1606a4866ff7d1","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/mtn/shake_02.mtn","hash":"2702970805e07777974c383613e631730982bcff","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/mtn/tapBody_00.mtn","hash":"835aa3d4a8fbd26c0bb66b164a19464fa3f17a99","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/mtn/tapBody_01.mtn","hash":"78fca17436ab5e065e27f419f135aa6c0a0b52ef","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/mtn/tapBody_02.mtn","hash":"a75acb51c1191ce5050d3ee1af6f2dcc787c7c5e","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/snd/flickHead_00.mp3","hash":"356388d939006b03cf9e6158c603b58d4800bec1","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/snd/flickHead_01.mp3","hash":"436d0bbccf6e7a2744447554947eee4563608970","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/snd/flickHead_02.mp3","hash":"5f63477ce63f2073e24d68fea906fe136fe6349e","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/snd/pinchIn_00.mp3","hash":"f9baa3b7cadec20b714135fc49cfab3ff6adeeb4","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/snd/pinchIn_01.mp3","hash":"d5c8cc6f61b56222a83a5174f75006f83c3b88da","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/snd/shake_00.mp3","hash":"f65dd58e7b44ec5c865d13c190316070b625b5fe","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/snd/shake_01.mp3","hash":"c1e0e8a07ff268ee06c2b7825d1b645e193f21b9","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/snd/shake_02.mp3","hash":"8882b94bce00f09232588b7301badb105fa8acab","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/snd/tapBody_00.mp3","hash":"003e68a59a9c8392e230f34c91860efbd946277a","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/snd/tapBody_01.mp3","hash":"5314b50f153df71559e51e2586581c006df00722","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/snd/tapBody_02.mp3","hash":"15e7815ed0a0e5164e18e0c53b97aedc742a134d","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/tororo/assets/mtn/00_idle.mtn","hash":"b224c60e463b9f71ddbfc0c720e430496c175f4f","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/tororo/assets/mtn/01.mtn","hash":"fb550833ae22c9954c3e01df37ed29b2d61700f2","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/tororo/assets/mtn/02.mtn","hash":"7eafc52edc73b7cb80ae70d34b43c6ac778fa47b","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/tororo/assets/mtn/03.mtn","hash":"f900737c7a98441cbb2e05255427e6260e19ae68","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/tororo/assets/mtn/04.mtn","hash":"c7a25d3c5d783639bae18db2f3cd284b819c3c85","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/tororo/assets/mtn/05.mtn","hash":"dd20ad24b5d1830a5d44b9bccb28f922eea5e0e5","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/tororo/assets/mtn/06.mtn","hash":"ad404bd852d276cdd3d054c953e23f90e4e45ae1","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/tororo/assets/mtn/07.mtn","hash":"b7f2e3a9fa4f3ffbb6e64a08f8d9f45ca1868ffb","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/tororo/assets/mtn/08.mtn","hash":"4411c7651ff65195b113d95e7d5ebef8a59a37d9","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/exp/F01.exp.json","hash":"7c0a23a6f3f0a584887be3d3b482ecc7a359306e","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/exp/F02.exp.json","hash":"5e7fffd67c06aee0cdcab0b8f816fd6a125db260","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/exp/F03.exp.json","hash":"ab92d6fd93d152a4739d93cc6a650c36623dcf72","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/exp/F04.exp.json","hash":"19c9ad9d05ea7cb15ccdabeaa14ec84c2763af9c","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/exp/F05.exp.json","hash":"afd807b47a00389374949731dd97087aeeec28d7","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/exp/F06.exp.json","hash":"8dd11423a36822927463c3adfdd629d4126f2205","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/exp/F07.exp.json","hash":"65441e1c9d27f4af55b45759e3c8407af2b72c3e","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/mtn/P01.mtn","hash":"4b6d266d9fe31e01c4e13ac2049435b5d70b5589","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/exp/F08.exp.json","hash":"03284527751a22b05336329df15e103fdc7e95ec","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/exp/F09.exp.json","hash":"eb7d53e7617247158e4d538e2e7f1a602cfe21a5","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/exp/F10.exp.json","hash":"61bccc68a43662888862fe46c91f579958097ed9","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/mtn/tsumiki_idle_01.mtn","hash":"dd178b1cb3817bd2d7e6f56f25daf3ffacd4afdd","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_01_df.mtn","hash":"4b008605c2f61f37fd295d929df8b51e9f1f447e","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_01.mtn","hash":"b1b0e2237926a52970703bcfdd5cf6bb6fc39248","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_02.mtn","hash":"43f73acf0ec68e5ddda2fb212b3bd62b4ec63829","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_03.mtn","hash":"bbd6a2cbe87dea113024d9d953bb42864cad31a5","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_04.mtn","hash":"b6395b5acb2136c8265f37483cfe60b4a1bfb66d","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_05.mtn","hash":"c118b3bcbf03d0cc07c9f6a2a8e8c495f07f4091","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_07.mtn","hash":"ec5da8fb40ff26dc3e9f306cade5f4bfc2f15642","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_06.mtn","hash":"2641628ced0c982f214242744da73f1ab048c078","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_08.mtn","hash":"98768aafeb239e75f788969eb995adbe7a89bc3f","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_09.mtn","hash":"c4f3635225ba606873a7c14cc91bf5a28a2afa95","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_10.mtn","hash":"8e6d0609ae64f8dd4db0e5e85addbc677fac3a79","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_13.mtn","hash":"d20d09dfbdf42d13240c45f9d2fa4474a4541dd8","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_14.mtn","hash":"2480493fffb4fd8135ef1e88c5f717952b7d6542","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_15.mtn","hash":"4fa8d8667c41cd5b3c49cf4bdd8b36cf0a9158b9","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_16.mtn","hash":"03843599008ab2ee23d9d03174924609ad042ce6","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_17.mtn","hash":"6346ebcf76b0780987f552b16c4c62c39732597f","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_18.mtn","hash":"34fbff31238e9b6a541f5f03a00bec5cbcec6649","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_19.mtn","hash":"685fc0130899e903d9c9433ec1c1a987323d6c8c","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_20.mtn","hash":"076ca7be2c81e776794245a3865478b20428e416","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_21.mtn","hash":"bd917f60537e4e9037c85bf356d4c25e75e2807c","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_23.mtn","hash":"d5a156e295e575c615b673350c025e3270afee8e","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_22.mtn","hash":"0fb02e4734ab8c455e1405dfed9546af583595ae","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_24.mtn","hash":"696502793e9917abc495645be784262e3b997bde","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/unitychan/assets/mtn/idle_01.mtn","hash":"e38a7dcfcad059b695f935b2071a1270c1ddf905","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/unitychan/assets/mtn/idle_02.mtn","hash":"8c3929962a4991c94bf7aeaf33169d61ccaccb2c","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/unitychan/assets/mtn/m_01.mtn","hash":"97d08b57c3b07a854f69cdef3ce6d13a2b2ece1c","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/unitychan/assets/mtn/m_02.mtn","hash":"a4dd9580452854f6adc7b30e9e85702a7641179c","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/unitychan/assets/mtn/m_03.mtn","hash":"dd140c6c4702f3fbd785a85a4d5d8cfa32b9bc32","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/unitychan/assets/mtn/m_04.mtn","hash":"32f8515854a89878c5becbabf56dabd4c675d437","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/unitychan/assets/mtn/m_05.mtn","hash":"ca1f068a2c9c56519e4306115b95d1f497f31124","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/unitychan/assets/mtn/m_06.mtn","hash":"cb16f119956346e4b15a1c432491423893cf2389","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/unitychan/assets/mtn/m_07.mtn","hash":"35caceb556d9bb4fc2a5ed4f8c51d766a6e70405","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/unitychan/assets/mtn/m_10.mtn","hash":"837f0cda82543d87c12108957a16e482964f3796","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/unitychan/assets/mtn/m_08.mtn","hash":"fbd6ae1967446a421d8505a8d29d5f7f64b5c0d7","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/unitychan/assets/mtn/m_09.mtn","hash":"4b942bfbde2a82f19bb4aab7e54e3caae9691da6","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/unitychan/assets/mtn/m_11.mtn","hash":"2c5ec476b9e3246d8c7a5ae4611401d3420cfa1e","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/unitychan/assets/mtn/m_12.mtn","hash":"90e96587969b78785c16cdffbdbe0b220cac39b7","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/unitychan/assets/mtn/m_13.mtn","hash":"f08d7f660fda4029fec2acb1f1389f855b5d1b96","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/unitychan/assets/mtn/m_14.mtn","hash":"4c5c7fdc05237a090341d4690bd7e07344728e9e","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/wanko/assets/mtn/idle_02.mtn","hash":"865874c50848fbc9a55011391531e2ec171c9b91","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/wanko/assets/mtn/idle_01.mtn","hash":"908abce18f6cf7fd4bc1486f048c25a517f4a34a","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/wanko/assets/mtn/idle_04.mtn","hash":"78e22091792abb0600f724a5dfd60371257954e8","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/wanko/assets/mtn/idle_03.mtn","hash":"84684914ebf5dc5b2df160338bb97dcc0a978476","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/wanko/assets/mtn/shake_01.mtn","hash":"dffc54733127832f8f5e91aced55a83da58fa215","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/wanko/assets/mtn/shake_02.mtn","hash":"7b6c914f6c33450eda2e53d9b638fd7045c0f683","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/wanko/assets/mtn/touch_02.mtn","hash":"4d1f099fbd18d15c598a644227ed5bf942a2ba71","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/wanko/assets/mtn/touch_01.mtn","hash":"99270ea8fe1f8f5d88eadb94f36bd0810009d1e6","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/wanko/assets/mtn/touch_03.mtn","hash":"9c394975083915f0f3786caff1762381348b041e","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/wanko/assets/mtn/touch_04.mtn","hash":"8d2302cfdaec698e575048797ff4f30ae4d202de","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/wanko/assets/mtn/touch_05.mtn","hash":"9610bb8a937ba9b11445a3894d8cc0733a2b67e5","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/wanko/assets/mtn/touch_06.mtn","hash":"feb9237c73f2045ed1704c01b5362c9a54ee5a18","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/z16/assets/exp/f00.exp.json","hash":"84073a497ddb6e56c6cfc244a0fb217ba473abf9","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/z16/assets/mtn/idle.mtn","hash":"f6b879d9f1d096509a7edbc971b8fdd9697932e9","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/exp/f01.exp.json","hash":"84073a497ddb6e56c6cfc244a0fb217ba473abf9","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/exp/f03.exp.json","hash":"a65382a1a8d8f7034eac2c811b9f122a8b3f1403","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/exp/f02.exp.json","hash":"461fe8077a2289e309ffc7edf561501a7edcce88","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/exp/f04.exp.json","hash":"3156286d7e0281e15c637a889aa415eef3224fa7","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/exp/f05.exp.json","hash":"1123786fb0bb9c31f7d30cf14b2299f898cdc207","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/exp/f07.exp.json","hash":"d55366c9bcf382e8273cf1803f65cdb8a4a0d336","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/exp/f08.exp.json","hash":"4a9ba4b11d9797f59c7b043d2b807ed8253f3cc4","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/exp/f06.exp.json","hash":"d962889ec7c563d818ddb5ab1e58cd337b5e62db","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/mtn/flickHead_00.mtn","hash":"66577f6dde2bec905930fba0dd5f06de939c8f1e","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/mtn/idle_00.mtn","hash":"bbaaafe4de159dd4fb73d137d283c640d3fede53","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/mtn/idle_01.mtn","hash":"035c196f276ed177239ea05eeaece68b0fda2935","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/mtn/idle_02.mtn","hash":"82291b3b78339d52f559a65d02b78e0b30180503","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/mtn/pinchIn_00.mtn","hash":"ed792ed8226aa5a3e5bf059285b2c95855c11303","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/mtn/pinchOut_00.mtn","hash":"db831991287e3a4724578f068a68e48168081d5a","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/mtn/shake_00.mtn","hash":"7e938c4abe83273766c4562a571301811dea1de6","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/mtn/tapBody_01.mtn","hash":"91fbfe1870f7a0a5f5fdb87c213c41b2a8cb5648","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/mtn/tapBody_00.mtn","hash":"4041b2f1f2f4a84454180f9dab14e46d99e135c0","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/mtn/tapBody_02.mtn","hash":"e93a2163cbb85525338e11a520e317329b11fb65","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/mtn/tapBody_03.mtn","hash":"fcd573576112ad5f4e4b7dc0b750de79f150f971","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/mtn/tapBody_04.mtn","hash":"557811c5f4ddbd393542366ef95794b19fc60387","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/mtn/tapBody_05.mtn","hash":"5f48e50e938f98636519c370745a39b921907719","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/mtn/tapBody_06.mtn","hash":"3d06ac66c04eb12c64d36551dd85389f0b0ee51f","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/snd/flickHead_00.mp3","hash":"0b447e7e38eb20f3f7e8ba2a5ea5f521f6e37a26","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/mtn/tapBody_07.mtn","hash":"d299747aaf27377d552ef1f8b4fce9871a65c37d","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/mtn/tapBody_08.mtn","hash":"64a03a904d701039bf81e1296ee79537c2e8800e","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/mtn/tapBody_09.mtn","hash":"4f50c17dcf352995e51a4d462b9ca7a9e9197d5c","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/snd/pinchOut_00.mp3","hash":"6872da79e1b515b2c996eecee4ca150e22aa48c0","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/snd/shake_00.mp3","hash":"28b245865f200b61cb009dfbd3811d9e9b0748fb","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/snd/pinchIn_00.mp3","hash":"d143662d2c8cfb1150f719d3d55c75d454535690","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/snd/tapBody_00.mp3","hash":"23c998ca4549b7908aef029d28b6ae22cbfcdc82","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/snd/tapBody_01.mp3","hash":"d3d5607dbe394225e2ee858531b7767f567c4e10","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/snd/tapBody_02.mp3","hash":"be111df9ecd006e992f94cb4280c2b66d9cd23ed","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/exp/f01.exp.json","hash":"84073a497ddb6e56c6cfc244a0fb217ba473abf9","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/exp/f02.exp.json","hash":"461fe8077a2289e309ffc7edf561501a7edcce88","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/exp/f03.exp.json","hash":"a65382a1a8d8f7034eac2c811b9f122a8b3f1403","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/exp/f04.exp.json","hash":"3156286d7e0281e15c637a889aa415eef3224fa7","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/exp/f05.exp.json","hash":"1123786fb0bb9c31f7d30cf14b2299f898cdc207","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/exp/f06.exp.json","hash":"d962889ec7c563d818ddb5ab1e58cd337b5e62db","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/exp/f07.exp.json","hash":"d55366c9bcf382e8273cf1803f65cdb8a4a0d336","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/exp/f08.exp.json","hash":"4a9ba4b11d9797f59c7b043d2b807ed8253f3cc4","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/mtn/flickHead_00.mtn","hash":"66577f6dde2bec905930fba0dd5f06de939c8f1e","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/mtn/idle_00.mtn","hash":"bbaaafe4de159dd4fb73d137d283c640d3fede53","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/mtn/idle_02.mtn","hash":"82291b3b78339d52f559a65d02b78e0b30180503","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/mtn/pinchIn_00.mtn","hash":"ed792ed8226aa5a3e5bf059285b2c95855c11303","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/mtn/idle_01.mtn","hash":"035c196f276ed177239ea05eeaece68b0fda2935","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/mtn/pinchOut_00.mtn","hash":"db831991287e3a4724578f068a68e48168081d5a","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/mtn/shake_00.mtn","hash":"7e938c4abe83273766c4562a571301811dea1de6","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/mtn/tapBody_00.mtn","hash":"4041b2f1f2f4a84454180f9dab14e46d99e135c0","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/mtn/tapBody_01.mtn","hash":"91fbfe1870f7a0a5f5fdb87c213c41b2a8cb5648","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/mtn/tapBody_02.mtn","hash":"e93a2163cbb85525338e11a520e317329b11fb65","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/mtn/tapBody_03.mtn","hash":"fcd573576112ad5f4e4b7dc0b750de79f150f971","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/mtn/tapBody_04.mtn","hash":"557811c5f4ddbd393542366ef95794b19fc60387","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/mtn/tapBody_05.mtn","hash":"5f48e50e938f98636519c370745a39b921907719","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/mtn/tapBody_06.mtn","hash":"3d06ac66c04eb12c64d36551dd85389f0b0ee51f","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/mtn/tapBody_07.mtn","hash":"d299747aaf27377d552ef1f8b4fce9871a65c37d","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/mtn/tapBody_08.mtn","hash":"64a03a904d701039bf81e1296ee79537c2e8800e","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/mtn/tapBody_09.mtn","hash":"4f50c17dcf352995e51a4d462b9ca7a9e9197d5c","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/snd/flickHead_00.mp3","hash":"0b447e7e38eb20f3f7e8ba2a5ea5f521f6e37a26","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/snd/pinchIn_00.mp3","hash":"d143662d2c8cfb1150f719d3d55c75d454535690","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/snd/pinchOut_00.mp3","hash":"6872da79e1b515b2c996eecee4ca150e22aa48c0","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/snd/shake_00.mp3","hash":"28b245865f200b61cb009dfbd3811d9e9b0748fb","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/snd/tapBody_00.mp3","hash":"23c998ca4549b7908aef029d28b6ae22cbfcdc82","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/snd/tapBody_01.mp3","hash":"d3d5607dbe394225e2ee858531b7767f567c4e10","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/snd/tapBody_02.mp3","hash":"be111df9ecd006e992f94cb4280c2b66d9cd23ed","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/z16/assets/moc/z16.256/texture_00.png","hash":"19f22619c246067d519aa1e6e477497cc4342414","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/z16/assets/moc/z16.512/texture_00.png","hash":"251b9f944fb1575c01a62b8a9d7522fe76954b3b","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/moc/haru02.1024/texture_00.png","hash":"f3c4103630bbf0660f793f90a14b51fdb7dfb7ea","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/moc/haru01.1024/texture_00.png","hash":"f3c4103630bbf0660f793f90a14b51fdb7dfb7ea","modified":1602225907000},{"_id":"themes/yilia/source/main.a5fda8.css","hash":"9d111920c6cfd7ac6ed8fcca4e9177144a40ab3c","modified":1631194816330},{"_id":"themes/yilia/source/mobile.a2c207.js","hash":"448860f4e30351fada95db9c974e68b372182656","modified":1602225907000},{"_id":"themes/yilia/layout/_partial/script.ejs","hash":"3d93a530038eb6445e59e605a3ac5e2b3f81e64b","modified":1602225907000},{"_id":"themes/yilia/source/gitment/APlayer.min.js","hash":"9f131b6ca3b89e52545a279356b79530bbb52a64","modified":1602225907000},{"_id":"themes/yilia/source/img/biubiubiu.png","hash":"d3f4b8f32f98ec94bef3129f1e737ba99f91cde7","modified":1630674480558},{"_id":"themes/yilia/source/img/left.jpg","hash":"08023016b6ad32a8f54d7711e1e47904f7aadcdd","modified":1630720789730},{"_id":"themes/yilia/source/lib/jquery-2.1.4.min.js","hash":"43dc554608df885a59ddeece1598c6ace434d747","modified":1602225907000},{"_id":"themes/yilia/source/lib/gitment.js.bak","hash":"ded86ac10cc79a7d28e2ea44778e792cef6c3470","modified":1602225907000},{"_id":"themes/yilia/source/plugins/TweenMax/TweenMax.min.js","hash":"8598fc6507e8948a0f99a61bb1dc345ecc1e1f6f","modified":1602225907000},{"_id":"themes/yilia/source/plugins/live2d-widget.js/L2Dwidget.min.js.map","hash":"75322ae0754f0580c0fb5ce9176ab72ce4009903","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/epsilon2_1/assets/moc/Epsilon2.1.moc","hash":"2148649bde741b6e1557c0ea3c076e5ce5a23632","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/snd/pinchIn_02.mp3","hash":"5b63e02607571ac601c500995e836e6c861b1c62","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/snd/pinchOut_00.mp3","hash":"0654f38f6e9fd623eaf8be11b5d58c9d12991949","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/snd/pinchOut_01.mp3","hash":"8a081030fd53c07bffe3edd48f87a371ca77296b","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/snd/pinchOut_02.mp3","hash":"554edb2f3838cbdc27d1a9c6b8a9cb6eb465cbdd","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_11.mtn","hash":"63b0adf0414ebad9a3bec91417629d983c546975","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/mtn/tsumiki_m_12.mtn","hash":"b68b20df9b695e0d7ac93a5865097b27c3123f21","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/wanko/assets/moc/wanko.moc","hash":"7b188cd4dcddfe5bdba8ec51a65cb1c21cd2e57a","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/z16/assets/moc/z16.moc","hash":"6b0241e80e94664d694b43ad05333960de2550c1","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/gf/assets/moc/Gantzert_Felixander.2048/texture_04.png","hash":"2c63a9622a875fea1abcdb9ef437b64556090d22","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nico/assets/moc/nico.2048/texture_00.png","hash":"413695bc00193e587b85c944df11d721192dd9a0","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nico/assets/moc/nico.2048/texture_02.png","hash":"8e4a632c61506e3cc07d8ba704aa4ec2567fe11b","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/ni-j/assets/moc/ni-j.2048/texture_00.png","hash":"413695bc00193e587b85c944df11d721192dd9a0","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nietzsche/assets/moc/nietzsche.2048/texture_00.png","hash":"413695bc00193e587b85c944df11d721192dd9a0","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nietzsche/assets/moc/nietzsche.2048/texture_01.png","hash":"fc5a8b833e1b089808e893158a71b8597161fda0","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nipsilon/assets/moc/nipsilon.2048/texture_01.png","hash":"413695bc00193e587b85c944df11d721192dd9a0","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nito/assets/moc/nito.2048/texture_01.png","hash":"413695bc00193e587b85c944df11d721192dd9a0","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/moc/shizuku.1024/texture_00.png","hash":"21bdb28b31783e23b26b3aa061e90be4088665aa","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/moc/shizuku.1024/texture_03.png","hash":"07f568a2bb8045b6bdff7783fb4daf62c821f9ab","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/moc/shizuku.1024/texture_05.png","hash":"0cd00007fb8bff62a2eb08e1d7c43abab8722224","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/wanko/assets/moc/wanko.1024/texture_00.png","hash":"c405c1eeb82bcced7aa7a20f04a76168f60ad561","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/moc/haru02.1024/texture_01.png","hash":"dd05d6b7f8f0d0c167b040f41ffd7c10a3747d96","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/moc/haru01.1024/texture_01.png","hash":"dd05d6b7f8f0d0c167b040f41ffd7c10a3747d96","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/moc/haru01.1024/texture_02.png","hash":"6a1e0b336da79557325da9f58a69a380d67ecbb1","modified":1602225907000},{"_id":"themes/yilia/examples/images/Yilia-plus.png","hash":"23884fe970ec806b05511288f52cd576f5ac1fff","modified":1602225907000},{"_id":"themes/yilia/source/img/right.jpg","hash":"33492c8491e57358e353324aa8ef618aa00136c9","modified":1630720763194},{"_id":"themes/yilia/source/lib/gitment.js","hash":"d1dd326c7b21f36ad78d55c451a1f0bbb13d201c","modified":1602225907000},{"_id":"themes/yilia/source/lib/gitment.js.bak2","hash":"abf60c1466261231717cb25faf854ecae9d76b43","modified":1602225907000},{"_id":"themes/yilia/source/plugins/live2d-widget.js/L2Dwidget.0.min.js","hash":"3cfe69c7d1bf48ba529e243f3892f7919d57ccc0","modified":1602225907000},{"_id":"themes/yilia/source/plugins/live2d-widget.js/L2Dwidget.common.js","hash":"b6a9fa8908ce9b64fe27b632935219eb10fd9283","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/hibiki/assets/moc/hibiki.moc","hash":"deff9b550df1e2dc47a57f1099e46de6737a0ec6","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/izumi/assets/moc/izumi_illust.moc","hash":"819e029e0d81ed64c59d47fc747026d4bbe637d6","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/hijiki/assets/moc/hijiki.moc","hash":"44289e62545a7046e0f5231103a851750b78524e","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/miku/assets/moc/miku.moc","hash":"a57e92e12f1fcb21d4d3a9ac34f01badbeff3671","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/tororo/assets/moc/tororo.moc","hash":"44289e62545a7046e0f5231103a851750b78524e","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/unitychan/assets/moc/unitychan.moc","hash":"94047b7bb9a99f43ab4dbe5b013a8fb9de854086","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/gf/assets/moc/Gantzert_Felixander.2048/texture_03.png","hash":"80f11d03197912296cd27ce7f59f490336396309","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/gf/assets/moc/Gantzert_Felixander.2048/texture_06.png","hash":"e04b38575cb49bf538d98d0bcc642be4eaf89f73","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/moc/shizuku.1024/texture_01.png","hash":"3d0e745f3e560071ee08beeecde186e5ea35d99e","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/moc/shizuku.1024/texture_04.png","hash":"f764d594841905db8b2998dd61c329866125ad97","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/ni-j/assets/moc/ni-j.2048/texture_01.png","hash":"f868cb3bffe97108ef677c43659a6ad7f6a906b2","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/unitychan/assets/moc/unitychan.2048/texture_00.png","hash":"2268ef1522ce750bb63f59a6bd1022c8c531e307","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/z16/assets/moc/z16.1024/texture_00.png","hash":"c4f7c067d7d37601490554438ab801fce1feb92d","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/moc/haru02.1024/texture_02.png","hash":"df02ff8355fca1389bbed5153dc1dadd8cd1c704","modified":1602225907000},{"_id":"themes/yilia/package-lock.json","hash":"83b7768862584cbffa2c75b412d3d4b0e9c65c4d","modified":1602225907000},{"_id":"themes/yilia/examples/images/web.png","hash":"9748de6b01c6b044c421d548993b1024abeb8b0c","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/chitose/assets/moc/chitose.moc","hash":"7e328a496119887e4caaaa5b81adb3aacb0dac19","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haruto/assets/moc/haruto.moc","hash":"57bec0b245b49ea941d61ba3dee671f20441afae","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/koharu/assets/moc/koharu.moc","hash":"5eec3fba21444dd6f774b913510b5955e2c0605b","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/ni-j/assets/moc/ni-j.moc","hash":"d846e2c4a4db0f003f2eda466f64cf2165e39ad8","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nietzsche/assets/moc/nietzsche.moc","hash":"63e70620e9eee593dbb77b26209ad64afa82f571","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nipsilon/assets/moc/nipsilon.moc","hash":"77ea4fba30cd6f056d1175654a8c950523cdf37e","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nito/assets/moc/nito.moc","hash":"aae6ab7a4687b166b30fb3bbfb1de5e91a5641e4","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/gf/assets/moc/Gantzert_Felixander.2048/texture_05.png","hash":"e6b2987797dbcf113879024df919aa716ded9d4e","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/02/assets/moc/haru02.moc","hash":"748cf01b45bebb3b217d6363f9d5ff81ab942787","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haru/01/assets/moc/haru01.moc","hash":"d2223b555b3bdbbd955301c4c5bcbe7ebe19bec1","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/haruto/assets/moc/haruto.2048/texture_00.png","hash":"62b970aa1480a1c18bdc4e74e297f2a1b34ca9fa","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/hibiki/assets/moc/hibiki.2048/texture_00.png","hash":"91349297cc411865cf5605a998b68a97fe67eec5","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/hijiki/assets/moc/hijiki.2048/texture_00.png","hash":"66464e0d96439695b5542c5e2f5be60739c29999","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nico/assets/moc/nico.2048/texture_01.png","hash":"9a19b242b9309624de1e43703b240c1c72bf2205","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nipsilon/assets/moc/nipsilon.2048/texture_00.png","hash":"8ea2e684b826d4a8548b237ab86b3bb701ca8d5b","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nietzsche/assets/moc/nietzsche.2048/texture_02.png","hash":"9abe0e1b8fe05ad4c678f17fd0f47a064f98908d","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nito/assets/moc/nito.2048/texture_00.png","hash":"8ea2e684b826d4a8548b237ab86b3bb701ca8d5b","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/moc/shizuku.1024/texture_02.png","hash":"055eb2da9c13e9116be93a1e60c0ea2b660af864","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/moc/tsumiki.2048/texture_01.png","hash":"ffbb082160de6e3bb664b1a4e16b503a80b549c2","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/moc/tsumiki.moc","hash":"cc023058ae61f70acf7580c4e2352b84eaf1a7b9","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/koharu/assets/moc/koharu.2048/texture_00.png","hash":"0879b61b745084781722636bba9f278f31ce5fc1","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/tororo/assets/moc/tororo.2048/texture_00.png","hash":"98af764b541083e87fc2f8e85f02d2db38c898cc","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/tsumiki/assets/moc/tsumiki.2048/texture_00.png","hash":"0316bc67bc2bde4017530989f34d62981ed88ab5","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nico/assets/moc/nico.moc","hash":"371b0d972aca62a2b67d32398be091d792f0b3cb","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/epsilon2_1/assets/moc/Epsilon2.1.2048/texture_00.png","hash":"5a245b4c78e6ebaad4d50e47361d1fada208ae5f","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/nipsilon/assets/moc/nipsilon.2048/texture_02.png","hash":"8052842f4b880ce16a01703a128d8881f63f8543","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/gf/assets/moc/Gantzert_Felixander.2048/texture_02.png","hash":"1c2cf2502769b3a359c121823f9ecdb114063288","modified":1602225907000},{"_id":"themes/yilia/source/lib/giteement.browser.js","hash":"824925ebd507d6b6fe3005f6c90c64809638456b","modified":1602225907000},{"_id":"themes/yilia/source/plugins/live2d-widget.js/L2Dwidget.0.min.js.map","hash":"3b3a7076b747b092d6e48f42a8a3497aa21280ee","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/izumi/assets/moc/izumi_illust.1024/texture_01.png","hash":"274627b4750bac66b29a9c19a939aca1655b1d27","modified":1602225907000},{"_id":"themes/yilia/source/plugins/live2d-widget.js/L2Dwidget.common.js.map","hash":"8de60ae490ab3d62c91c8ce60a256079b6afd3d8","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/gf/assets/moc/Gantzert_Felixander.2048/texture_00.png","hash":"ff5b30d94adfcca1e5b77a3b7d3d75d750707d83","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/gf/assets/moc/Gantzert_Felixander.2048/texture_01.png","hash":"da2a0785207727ba87a30ed6853dafd9978eb7b4","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/izumi/assets/moc/izumi_illust.1024/texture_02.png","hash":"4b45fb19ee5b662678692132feae93119ff56d08","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/shizuku/assets/moc/shizuku.moc","hash":"c2670a0f75830edc89d7fe6d074de4ee67e8dc5d","modified":1602225907000},{"_id":"themes/yilia/source/img/avatar.gif","hash":"8cd3d4043675696e5ede0071d2505c355dcaca7c","modified":1630593301981},{"_id":"themes/yilia/source/live2d_models/izumi/assets/moc/izumi_illust.1024/texture_00.png","hash":"bfcecfa399b328ac15eba45f2b6b3b18d50f2daf","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/izumi/assets/moc/izumi_illust.1024/texture_03.png","hash":"84005d6e75ed9db0f531b6e5e0d6d541da796b04","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/miku/assets/moc/miku.2048/texture_00.png","hash":"26fe101720ab8e55fb62c87b563d0dbb903c5eaf","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/gf/assets/moc/Gantzert_Felixander.moc","hash":"67d418af2db593b0b6f318e95f49d4370515c8f0","modified":1602225907000},{"_id":"themes/yilia/source/live2d_models/chitose/assets/moc/chitose.2048/texture_00.png","hash":"505dbba0bec5d7fda0cead773caa540a0158a610","modified":1602225907000},{"_id":"public/content.json","hash":"e04f74f0f3b550fe2d81b1e095a3d63fe861c256","modified":1650525269249},{"_id":"public/categories/index.html","hash":"1374e227345b27ea3b0a8d4f344aa395ebc11006","modified":1650012001768},{"_id":"public/2022/04/15/QLabel上画图片/index.html","hash":"065b545337b448f6a9c337ba718c6cc4571225a4","modified":1650525269249},{"_id":"public/2022/04/15/QTableWidget/index.html","hash":"a4fddb44ea79515aa78cc0f04f6bcf8ebf93521c","modified":1650012001768},{"_id":"public/2022/04/15/QTableWidget单元格插入控件/index.html","hash":"45698005dce17656c32c09cd67b9bdc5ec05d728","modified":1650012001768},{"_id":"public/2022/04/15/list元素交换/index.html","hash":"81db65e0e2d41f74b5e42764ad61cec9ad315adf","modified":1650012001768},{"_id":"public/2022/04/15/qt/index.html","hash":"eada4bf83c37c7b9e284b1c90c6d559f2f1dc150","modified":1650525269249},{"_id":"public/2021/09/04/c++面经/index.html","hash":"246ea6d9589870c04a5dabe18240c443f431dc50","modified":1650525269249},{"_id":"public/2021/09/04/makefile/index.html","hash":"77df262af6f462b03443867ed5eb86c2767d88ad","modified":1650012001768},{"_id":"public/2021/09/03/socket/index.html","hash":"6df1edf46eb66a093189c7bb1e733004c0b9fd85","modified":1650012001768},{"_id":"public/archives/index.html","hash":"b215c63559ef5a9921a0a234045095399c841bf4","modified":1652860426136},{"_id":"public/2021/09/02/hello-world/index.html","hash":"f0cff2ab7469483072f7e892d9655da9455d013a","modified":1650012001768},{"_id":"public/archives/2021/index.html","hash":"407722953c78e47fb0935d711cc6ac304149bc6e","modified":1650012001768},{"_id":"public/archives/2021/09/index.html","hash":"7cde2faea5576e4a0f2a14276d7c1128daf586ea","modified":1650012001768},{"_id":"public/archives/2022/index.html","hash":"7823d9194ed183ee558eab9e88b489c74af23aaf","modified":1650525269249},{"_id":"public/archives/2022/04/index.html","hash":"30302314000b08d855582958bb782b00324ec9b0","modified":1650525269249},{"_id":"public/tags/qt-c/index.html","hash":"fc8973252c6eac2b06d90eec72fa4ebe74513257","modified":1650525269249},{"_id":"public/tags/面试-c-c/index.html","hash":"e6cec305740d716176fbc799751082c7abe8117b","modified":1650012001768},{"_id":"public/tags/c-c/index.html","hash":"2e6e0fac78b5dde6ad86ab952bc8dc7750b6c459","modified":1650012001768},{"_id":"public/index.html","hash":"2c385b59c349f773791c2ace24fd325796b46b76","modified":1652860426136},{"_id":"public/tags/makefile/index.html","hash":"13b8ef2007d5dd85f0ddfc69dfce6e0fc3ce07d9","modified":1650012001768},{"_id":"public/tags/socket/index.html","hash":"748a49b5393797176c04b2f20d5d7583e6bb2632","modified":1650012001768},{"_id":"public/page/2/index.html","hash":"98efe7b5bd6077862cfc23b9cabad3adcb06ec81","modified":1652860426136},{"_id":"public/fonts/fonteditor.3da1ef.woff","hash":"5a945ddf318d3ca68d0a1e8695b23287ff7e9816","modified":1650012001768},{"_id":"public/fonts/default-skin.b257fa.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1650012001768},{"_id":"public/fonts/fonteditor.3e0d4a.svg","hash":"de1fbf8378d1966d43bf620b8acd6bf900a15a73","modified":1650012001768},{"_id":"public/fonts/fonteditor.86c132.eot","hash":"c29905356fb2116a454a262d6f15cdeb593a6cec","modified":1650012001768},{"_id":"public/fonts/fonteditor.bbc4b5.woff2","hash":"c748dc092f066f7e12626c801d416e64b95dacea","modified":1650012001768},{"_id":"public/fonts/iconfont.16acc2.ttf","hash":"f342ac8bf4d937f42a7d6a0032ad267ab47eb7f2","modified":1650012001768},{"_id":"public/fonts/fonteditor.fe4d8a.ttf","hash":"95d1a4991df9ce15562ff0344b318b5fc5f9ab70","modified":1650012001768},{"_id":"public/fonts/iconfont.45d7ee.svg","hash":"75767c904d483d9b93469afb6b92bb6bdface639","modified":1650012001768},{"_id":"public/fonts/iconfont.8c627f.woff","hash":"aa9672cb097f7fd73ae5a03bcd3d9d726935bc0a","modified":1650012001768},{"_id":"public/fonts/tooltip.4004ff.svg","hash":"a5e9fe67e0604c24279281d9fdd2ce1f4536d3e5","modified":1650012001768},{"_id":"public/fonts/iconfont.b322fa.eot","hash":"bc8c5e88f4994a852041b4d83f126d9c4d419b4a","modified":1650012001768},{"_id":"public/img/biubiubiu.gif","hash":"cccda381f96abe91b4d698da793abd6496466d3d","modified":1650012001768},{"_id":"public/img/decade.jpg","hash":"34c44b7153a895e8178e36d9ce7de09f5cf3ce77","modified":1650012001768},{"_id":"public/img/default-skin.png","hash":"ed95a8e40a2c3478c5915376acb8e5f33677f24d","modified":1650012001768},{"_id":"public/img/forkme.png","hash":"b43e6e18b84edc40636204aa0eb9f266ef54a4e7","modified":1650012001768},{"_id":"public/img/decade_ico.jpg","hash":"b8934f4670914b25758f9c7cdafd193389d05f0b","modified":1650012001768},{"_id":"public/img/gitee.svg","hash":"fcc6e28d0345e22a6195748cf759eee5d8e48719","modified":1650012001768},{"_id":"public/img/preloader.gif","hash":"6342367c93c82da1b9c620e97c84a389cc43d96d","modified":1650012001768},{"_id":"public/img/ico.jpg","hash":"a3cc424c84bd9d1a05570ec018e142ddd0a870a9","modified":1650012001768},{"_id":"public/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1650012001768},{"_id":"public/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_idle_01.mtn","hash":"b4e67d3091aba34efcf9ff3659fa36f6f1a4bd22","modified":1650012001768},{"_id":"public/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_01.mtn","hash":"eecc2854bea6bf90c9f0a0013281ec600c32f2bc","modified":1650012001768},{"_id":"public/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_02.mtn","hash":"7a000a218b098172eeeb8a81e551d558bbaa6f8a","modified":1650012001768},{"_id":"public/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_03.mtn","hash":"3568fc9f7ba95f2521abec8e1241da62581ab7cf","modified":1650012001768},{"_id":"public/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_04.mtn","hash":"b717b620d044859762716d104e137dc9c09c8cce","modified":1650012001768},{"_id":"public/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_08.mtn","hash":"e61753f72a1c170926c59c71490596aaeee30ca6","modified":1650012001768},{"_id":"public/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_05.mtn","hash":"f3a671a29f5d831f04284a8d5fe5adb90cd1e400","modified":1650012001768},{"_id":"public/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_06.mtn","hash":"fec328bedb7d5af53e0cfd0eb5991f4574c3676a","modified":1650012001768},{"_id":"public/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_07.mtn","hash":"2fd581bfc662b050c41afb904b9ae54b59d7d010","modified":1650012001768},{"_id":"public/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_sp_01.mtn","hash":"d72c01b4d9c4faf0f4cb472c390a35712b2ee7f5","modified":1650012001768},{"_id":"public/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_sp_02.mtn","hash":"08f6d29160ce7100441efdd8ac7bbd89fc9c5120","modified":1650012001768},{"_id":"public/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_sp_03.mtn","hash":"55c11be6e505791de438c43ad25c31409713544a","modified":1650012001768},{"_id":"public/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_sp_05.mtn","hash":"9eb78800c41148712ac30e1342f025110db0f8d3","modified":1650012001768},{"_id":"public/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_m_sp_04.mtn","hash":"42ae0fbe437cd97c623c09bee100c3695abb30ce","modified":1650012001768},{"_id":"public/live2d_models/epsilon2_1/assets/mtn/Epsilon2.1_shake_01.mtn","hash":"8f81d974ada9b6800fa6eb852a41906a9e1f4c77","modified":1650012001768},{"_id":"public/live2d_models/chitose/assets/mtn/chitose_handwave.mtn","hash":"3d7a0f7ffda7d2ac3bb6fde6ccc49521c0d7713b","modified":1650012001768},{"_id":"public/live2d_models/chitose/assets/mtn/chitose_idle.mtn","hash":"f3d1ab532e49a20e98cadb0290c959d7f1086eb6","modified":1650012001768},{"_id":"public/live2d_models/chitose/assets/mtn/chitose_kime01.mtn","hash":"97308ef8c5798374a6b1ba6cdec53d6732a4728a","modified":1650012001768},{"_id":"public/live2d_models/chitose/assets/mtn/chitose_kime02.mtn","hash":"3eed16b70dc2f7b7e50417f19207e3cabccaa166","modified":1650012001768},{"_id":"public/live2d_models/gf/assets/mtn/A_01.mtn","hash":"91d2def2e00393fcedaaca36cd80340fa95a2d1b","modified":1650012001768},{"_id":"public/live2d_models/gf/assets/mtn/A_00_idle.mtn","hash":"d383fc08986b4d1f746d71abbea6f7b5f54dcc95","modified":1650012001768},{"_id":"public/live2d_models/gf/assets/mtn/A_02.mtn","hash":"9283c809509daf3f580dcb92bab14960b5a89283","modified":1650012001768},{"_id":"public/live2d_models/gf/assets/mtn/A_03.mtn","hash":"afec07ed22acdf28a5c49b78c560e29c3c2cfaa0","modified":1650012001768},{"_id":"public/live2d_models/gf/assets/mtn/A_05.mtn","hash":"40ad1e684108035c6478b76c9e4e1953104725da","modified":1650012001768},{"_id":"public/live2d_models/gf/assets/mtn/A_04.mtn","hash":"50360a6572518b447af3315236659a576aa1b248","modified":1650012001768},{"_id":"public/live2d_models/haruto/assets/mtn/01.mtn","hash":"61d7d590d9feb71b32fd6bd142b59410d75bc1fa","modified":1650012001768},{"_id":"public/live2d_models/haruto/assets/mtn/02.mtn","hash":"efc99efdff39c93372cff0f6d62c4e748e1a5593","modified":1650012001768},{"_id":"public/live2d_models/haruto/assets/mtn/03.mtn","hash":"a72b697a92a7cff40d15774b143b465b34cee5e6","modified":1650012001768},{"_id":"public/live2d_models/haruto/assets/mtn/04.mtn","hash":"32c888667455a3ff6f1b04f910c1a5cc4de30af0","modified":1650012001768},{"_id":"public/live2d_models/haruto/assets/mtn/05.mtn","hash":"637e00442da4042cd4b0ed2cc62ffb1559881814","modified":1650012001768},{"_id":"public/live2d_models/haruto/assets/mtn/06.mtn","hash":"df10cc1d333c96da1296a4853c1ddbd44d8a11f3","modified":1650012001768},{"_id":"public/live2d_models/haruto/assets/mtn/07.mtn","hash":"d8c9410135c81604eba665b59808089808e0851a","modified":1650012001768},{"_id":"public/live2d_models/haruto/assets/mtn/08.mtn","hash":"9b95ef8548b979d1fca557c74f8d66fb15b34578","modified":1650012001768},{"_id":"public/live2d_models/haruto/assets/mtn/09.mtn","hash":"ecf1283b72e1c4b7e3a97343cd97726813f18790","modified":1650012001768},{"_id":"public/live2d_models/hibiki/assets/mtn/hibiki_01.mtn","hash":"cd220b89c26e1267fd7ab8f7cfc714fcd4c3b5a3","modified":1650012001768},{"_id":"public/live2d_models/haruto/assets/mtn/idle_02.mtn","hash":"d130dd1d194f05b3eb5391289b0339999e37c3a6","modified":1650012001768},{"_id":"public/live2d_models/hibiki/assets/mtn/hibiki_02.mtn","hash":"985154bee77e2934afe74a45071f51e0aa1ac84d","modified":1650012001768},{"_id":"public/live2d_models/hibiki/assets/mtn/hibiki_03.mtn","hash":"0b2e7cb2a32b70a629d9d21205863bb163d06d47","modified":1650012001768},{"_id":"public/live2d_models/hibiki/assets/mtn/hibiki_04.mtn","hash":"6a753859998d7afa17f119f37c5765f0c10b7bca","modified":1650012001768},{"_id":"public/live2d_models/hibiki/assets/mtn/idle_01.mtn","hash":"3fac7f98ab71858018cbbf21b5a3ad99166d275b","modified":1650012001768},{"_id":"public/live2d_models/hibiki/assets/mtn/hibiki_05.mtn","hash":"67dc8d35f050e36d08010d55ddbfd06544fb7ad5","modified":1650012001768},{"_id":"public/live2d_models/hibiki/assets/mtn/idle_02.mtn","hash":"9f7dae129a20775b3209a16ee28e27f496e90ba5","modified":1650012001768},{"_id":"public/live2d_models/hibiki/assets/mtn/idle_03.mtn","hash":"c85916f8699673b0511fd00cd1953896879e0cc5","modified":1650012001768},{"_id":"public/live2d_models/hibiki/assets/mtn/idle_04.mtn","hash":"80d4e53606b3268623b03d12a28570efdb5739ad","modified":1650012001768},{"_id":"public/live2d_models/hibiki/assets/snd/hibiki_01.mp3","hash":"2880911aa4a85958fe02e54b912fbf7e6a1896c6","modified":1650012001768},{"_id":"public/live2d_models/hibiki/assets/snd/hibiki_02.mp3","hash":"75358d4c7ec03c4b1dc02ef60c716d94f031fe2f","modified":1650012001768},{"_id":"public/live2d_models/hibiki/assets/snd/hibiki_03.mp3","hash":"df05cb8288b17e1ad00ed66a731f1558db28cf9b","modified":1650012001768},{"_id":"public/live2d_models/hibiki/assets/snd/hibiki_04.mp3","hash":"57d76906838b186bee2d47f768e54ac18e44d472","modified":1650012001768},{"_id":"public/live2d_models/hibiki/assets/snd/hibiki_05.mp3","hash":"e8788bb9e92467e21933ac2140114a21b9ad215a","modified":1650012001768},{"_id":"public/live2d_models/izumi/assets/mtn/idle_01.mtn","hash":"ce50f5c562b282dcb11679f682fe0f9e1bb0f37b","modified":1650012001768},{"_id":"public/live2d_models/izumi/assets/mtn/idle_02.mtn","hash":"0c6b52bf64db7bbfee81ee24240ca991320764b4","modified":1650012001768},{"_id":"public/live2d_models/izumi/assets/mtn/idle_03.mtn","hash":"b374923d973970f2c8331b3420660952e2bd8bf5","modified":1650012001768},{"_id":"public/live2d_models/izumi/assets/mtn/idle_04.mtn","hash":"97c0a45af4f0b9f4b828f43eccb1c77c360af637","modified":1650012001768},{"_id":"public/live2d_models/izumi/assets/mtn/izumi_01.mtn","hash":"36286812dc692e00a0b69e71d7fe3c8a2b672281","modified":1650012001768},{"_id":"public/live2d_models/izumi/assets/mtn/izumi_02.mtn","hash":"90add71910fd83c1c66bfb73db6d6d4766c98dac","modified":1650012001768},{"_id":"public/live2d_models/izumi/assets/mtn/izumi_03.mtn","hash":"fc7f8e01f8e7744cbd13a8fea44dda8270f21aeb","modified":1650012001768},{"_id":"public/live2d_models/izumi/assets/mtn/izumi_04.mtn","hash":"551b95d80d31ed4f06d19d99ccc4f795a8392ea3","modified":1650012001768},{"_id":"public/live2d_models/izumi/assets/mtn/izumi_05.mtn","hash":"dbfea56881f31a79bffb6d107e7b1fa867e2da0e","modified":1650012001768},{"_id":"public/live2d_models/izumi/assets/mtn/izumi_06.mtn","hash":"c1a63e659fcc6d5b1b0eac7eaff60faf43e2cb28","modified":1650012001768},{"_id":"public/live2d_models/izumi/assets/mtn/izumi_07.mtn","hash":"e2f9e8cb428fa83251a45166d8f9acad570a47d9","modified":1650012001768},{"_id":"public/live2d_models/izumi/assets/mtn/izumi_08.mtn","hash":"19fc90977a0ca30c18f4afae90d4c3ea27a9b094","modified":1650012001768},{"_id":"public/live2d_models/izumi/assets/mtn/izumi_09.mtn","hash":"97199471755394bed243a29b4cb8397518487296","modified":1650012001768},{"_id":"public/live2d_models/izumi/assets/mtn/izumi_10.mtn","hash":"244ae631fb963ed7619e5d63f189d947a2497eb2","modified":1650012001768},{"_id":"public/live2d_models/izumi/assets/snd/izumi_01.mp3","hash":"11dd394ab4d11d3a3c6d6a1a305ff3a1d1fed21d","modified":1650012001768},{"_id":"public/live2d_models/izumi/assets/snd/izumi_02.mp3","hash":"d35189bae63cc6ef18d3a949c4a46dd5ed74c6b3","modified":1650012001768},{"_id":"public/live2d_models/izumi/assets/snd/izumi_05.mp3","hash":"05e44723c24b387a0eab37a0ab4120ef19ae317e","modified":1650012001768},{"_id":"public/live2d_models/izumi/assets/snd/izumi_03.mp3","hash":"b3d6e98bc30eaf8ac0cf7ffe2f297742a819b380","modified":1650012001768},{"_id":"public/live2d_models/izumi/assets/snd/izumi_04.mp3","hash":"7647fb1e8823bb48ee5f82dbeac35e3f61b74bef","modified":1650012001768},{"_id":"public/live2d_models/izumi/assets/snd/izumi_06.mp3","hash":"f39ee4b85ed9877100c028bf938a9a8fd0d2cb6b","modified":1650012001768},{"_id":"public/live2d_models/izumi/assets/snd/izumi_09.mp3","hash":"f7bce48ee99bdad6fa187c484872eafce0b0e351","modified":1650012001768},{"_id":"public/live2d_models/izumi/assets/snd/izumi_07.mp3","hash":"0c13c0096d02ceb37b3bcce085206b5d6d8ae834","modified":1650012001768},{"_id":"public/live2d_models/izumi/assets/snd/izumi_10.mp3","hash":"53013c1cc56296a3843d4c8e3f01fd67747b169b","modified":1650012001768},{"_id":"public/live2d_models/izumi/assets/snd/izumi_08.mp3","hash":"0b73b4f9216ee6b944a91b599c942d567a39fe0f","modified":1650012001768},{"_id":"public/live2d_models/hijiki/assets/mtn/00_idle.mtn","hash":"b224c60e463b9f71ddbfc0c720e430496c175f4f","modified":1650012001768},{"_id":"public/live2d_models/hijiki/assets/mtn/01.mtn","hash":"fb550833ae22c9954c3e01df37ed29b2d61700f2","modified":1650012001768},{"_id":"public/live2d_models/hijiki/assets/mtn/02.mtn","hash":"7eafc52edc73b7cb80ae70d34b43c6ac778fa47b","modified":1650012001768},{"_id":"public/live2d_models/hijiki/assets/mtn/03.mtn","hash":"f900737c7a98441cbb2e05255427e6260e19ae68","modified":1650012001768},{"_id":"public/live2d_models/hijiki/assets/mtn/04.mtn","hash":"c7a25d3c5d783639bae18db2f3cd284b819c3c85","modified":1650012001768},{"_id":"public/live2d_models/hijiki/assets/mtn/05.mtn","hash":"dd20ad24b5d1830a5d44b9bccb28f922eea5e0e5","modified":1650012001768},{"_id":"public/live2d_models/hijiki/assets/mtn/06.mtn","hash":"ad404bd852d276cdd3d054c953e23f90e4e45ae1","modified":1650012001768},{"_id":"public/live2d_models/hijiki/assets/mtn/07.mtn","hash":"b7f2e3a9fa4f3ffbb6e64a08f8d9f45ca1868ffb","modified":1650012001768},{"_id":"public/live2d_models/hijiki/assets/mtn/08.mtn","hash":"4411c7651ff65195b113d95e7d5ebef8a59a37d9","modified":1650012001768},{"_id":"public/live2d_models/koharu/assets/mtn/01.mtn","hash":"61d7d590d9feb71b32fd6bd142b59410d75bc1fa","modified":1650012001768},{"_id":"public/live2d_models/koharu/assets/mtn/02.mtn","hash":"efc99efdff39c93372cff0f6d62c4e748e1a5593","modified":1650012001768},{"_id":"public/live2d_models/koharu/assets/mtn/03.mtn","hash":"a72b697a92a7cff40d15774b143b465b34cee5e6","modified":1650012001768},{"_id":"public/live2d_models/koharu/assets/mtn/04.mtn","hash":"32c888667455a3ff6f1b04f910c1a5cc4de30af0","modified":1650012001768},{"_id":"public/live2d_models/koharu/assets/mtn/05.mtn","hash":"637e00442da4042cd4b0ed2cc62ffb1559881814","modified":1650012001768},{"_id":"public/live2d_models/koharu/assets/mtn/06.mtn","hash":"df10cc1d333c96da1296a4853c1ddbd44d8a11f3","modified":1650012001768},{"_id":"public/live2d_models/koharu/assets/mtn/07.mtn","hash":"d8c9410135c81604eba665b59808089808e0851a","modified":1650012001768},{"_id":"public/live2d_models/koharu/assets/mtn/08.mtn","hash":"9b95ef8548b979d1fca557c74f8d66fb15b34578","modified":1650012001768},{"_id":"public/live2d_models/koharu/assets/mtn/09.mtn","hash":"ecf1283b72e1c4b7e3a97343cd97726813f18790","modified":1650012001768},{"_id":"public/live2d_models/koharu/assets/mtn/idle.mtn","hash":"058d4628ab04bf42c279501ba4fa37116d384e41","modified":1650012001768},{"_id":"public/live2d_models/miku/assets/mtn/miku_idle_01.mtn","hash":"5633f73601cf8b0a318e7a7265f71cc782683251","modified":1650012001768},{"_id":"public/live2d_models/miku/assets/mtn/miku_m_01.mtn","hash":"bd0ea5f2f0528b21c4e5632838b69e478b652e88","modified":1650012001768},{"_id":"public/live2d_models/miku/assets/mtn/miku_m_02.mtn","hash":"2eda9602d626d89285e0c0c5f564383964516cc8","modified":1650012001768},{"_id":"public/live2d_models/miku/assets/mtn/miku_m_03.mtn","hash":"94ef9d31a78f7f90d3fb213c4353afbdb3462cff","modified":1650012001768},{"_id":"public/live2d_models/miku/assets/mtn/miku_m_04.mtn","hash":"5c440e8f4cd45e73a7c8044ea0e2ea11234f9fd9","modified":1650012001768},{"_id":"public/live2d_models/miku/assets/mtn/miku_m_05.mtn","hash":"73b9b162c1dbf9a6747364ae47b12cba9da0bbec","modified":1650012001768},{"_id":"public/live2d_models/miku/assets/mtn/miku_shake_01.mtn","hash":"190875ab6cdeee7ae87c4c296429b848c942dd8a","modified":1650012001768},{"_id":"public/live2d_models/miku/assets/mtn/miku_m_06.mtn","hash":"0bfd6ad29e5e171a1ce03a7acb8ffcca9f463902","modified":1650012001768},{"_id":"public/live2d_models/nico/assets/mtn/00_idle.mtn","hash":"3686b7bfdb43f85f4fe1d94ed59379d2c4bee41d","modified":1650012001768},{"_id":"public/live2d_models/nico/assets/mtn/01_happy.mtn","hash":"2020573671b39c81fbd784a8b873ebee019ca501","modified":1650012001768},{"_id":"public/live2d_models/nico/assets/mtn/02_angry.mtn","hash":"f75e1f580c64695fbbf8ba3c5f49eafc7208411d","modified":1650012001768},{"_id":"public/live2d_models/nico/assets/mtn/03_fear.mtn","hash":"b6cdb8fa48960b2a6e66d78ea992221e8108437b","modified":1650012001768},{"_id":"public/live2d_models/nico/assets/mtn/05_fun.mtn","hash":"4b956c9c028dce753fafa1859404a136975786d4","modified":1650012001768},{"_id":"public/live2d_models/nico/assets/mtn/04_surprise.mtn","hash":"4b911af06de9bc6f386aecd623851e5799edaa96","modified":1650012001768},{"_id":"public/live2d_models/nico/assets/mtn/06_love.mtn","hash":"c9f90cc2e2be55ac9c19cf6a962330dad3833fc1","modified":1650012001768},{"_id":"public/live2d_models/nico/assets/mtn/07_bye.mtn","hash":"6a3e90e8efb64cd5b187196625a3d8915efb21c8","modified":1650012001768},{"_id":"public/live2d_models/nico/assets/mtn/08_sad.mtn","hash":"63647d9320bf3928d658e1275adbfaeba88748b7","modified":1650012001768},{"_id":"public/live2d_models/nico/assets/mtn/09_yawn.mtn","hash":"e0e29a712b01be59ae8bba2e1a0d850e06260d20","modified":1650012001768},{"_id":"public/live2d_models/nico/assets/mtn/10_yeah.mtn","hash":"58c4bda1339f41fa8a7e554509a7a871bad392b8","modified":1650012001768},{"_id":"public/live2d_models/nico/assets/mtn/11_muscle.mtn","hash":"7d0e3466a996f8704e86913c723ac4b82f14ff47","modified":1650012001768},{"_id":"public/live2d_models/nico/assets/mtn/12_stagger.mtn","hash":"3f1a0b25cb1b9fb150f7a9ef37e8c9ba8d4e6ba1","modified":1650012001768},{"_id":"public/live2d_models/nico/assets/mtn/13_cry.mtn","hash":"27709b59d2e6cba73d69a67cadb8bf50413206a9","modified":1650012001768},{"_id":"public/live2d_models/nico/assets/mtn/14_ sigh.mtn","hash":"80c4e4f539253d86a7aa5faae2c5e5a3a7b1adcc","modified":1650012001768},{"_id":"public/live2d_models/nico/assets/mtn/15_joy.mtn","hash":"b76a24efc57e4c2cc4abf70c293b2e800029a20d","modified":1650012001768},{"_id":"public/live2d_models/nico/assets/mtn/16_menace.mtn","hash":"6edb6b114d53d7f93cff164992db475b0b6f09c3","modified":1650012001768},{"_id":"public/live2d_models/nico/assets/mtn/17_yes.mtn","hash":"a023cc93e55b3940f1a8690dcfa7ad1cfa534fad","modified":1650012001768},{"_id":"public/live2d_models/nico/assets/mtn/18_no.mtn","hash":"9a18a2537bf6634da2bafd3a57d236de30c73b4e","modified":1650012001768},{"_id":"public/live2d_models/nico/assets/mtn/19_walk.mtn","hash":"035516e8cdaa5b3c6e7524daca72294284a81126","modified":1650012001768},{"_id":"public/live2d_models/nico/assets/mtn/20_sleep.mtn","hash":"914e4670825467e5e8d2f6983bd21c7190e57310","modified":1650012001768},{"_id":"public/live2d_models/ni-j/assets/mtn/00_idle.mtn","hash":"3686b7bfdb43f85f4fe1d94ed59379d2c4bee41d","modified":1650012001768},{"_id":"public/live2d_models/ni-j/assets/mtn/01_happy.mtn","hash":"2020573671b39c81fbd784a8b873ebee019ca501","modified":1650012001768},{"_id":"public/live2d_models/ni-j/assets/mtn/02_angry.mtn","hash":"f75e1f580c64695fbbf8ba3c5f49eafc7208411d","modified":1650012001768},{"_id":"public/live2d_models/ni-j/assets/mtn/03_fear.mtn","hash":"b6cdb8fa48960b2a6e66d78ea992221e8108437b","modified":1650012001768},{"_id":"public/live2d_models/ni-j/assets/mtn/04_surprise.mtn","hash":"4b911af06de9bc6f386aecd623851e5799edaa96","modified":1650012001768},{"_id":"public/live2d_models/ni-j/assets/mtn/05_fun.mtn","hash":"4b956c9c028dce753fafa1859404a136975786d4","modified":1650012001768},{"_id":"public/live2d_models/ni-j/assets/mtn/06_love.mtn","hash":"c9f90cc2e2be55ac9c19cf6a962330dad3833fc1","modified":1650012001768},{"_id":"public/live2d_models/ni-j/assets/mtn/07_bye.mtn","hash":"6a3e90e8efb64cd5b187196625a3d8915efb21c8","modified":1650012001768},{"_id":"public/live2d_models/ni-j/assets/mtn/08_sad.mtn","hash":"63647d9320bf3928d658e1275adbfaeba88748b7","modified":1650012001768},{"_id":"public/live2d_models/ni-j/assets/mtn/09_yawn.mtn","hash":"e0e29a712b01be59ae8bba2e1a0d850e06260d20","modified":1650012001768},{"_id":"public/live2d_models/ni-j/assets/mtn/10_yeah.mtn","hash":"58c4bda1339f41fa8a7e554509a7a871bad392b8","modified":1650012001768},{"_id":"public/live2d_models/ni-j/assets/mtn/11_muscle.mtn","hash":"7d0e3466a996f8704e86913c723ac4b82f14ff47","modified":1650012001768},{"_id":"public/live2d_models/ni-j/assets/mtn/12_stagger.mtn","hash":"3f1a0b25cb1b9fb150f7a9ef37e8c9ba8d4e6ba1","modified":1650012001768},{"_id":"public/live2d_models/ni-j/assets/mtn/13_cry.mtn","hash":"27709b59d2e6cba73d69a67cadb8bf50413206a9","modified":1650012001768},{"_id":"public/live2d_models/ni-j/assets/mtn/14_ sigh.mtn","hash":"80c4e4f539253d86a7aa5faae2c5e5a3a7b1adcc","modified":1650012001768},{"_id":"public/live2d_models/ni-j/assets/mtn/15_joy.mtn","hash":"b76a24efc57e4c2cc4abf70c293b2e800029a20d","modified":1650012001768},{"_id":"public/live2d_models/ni-j/assets/mtn/16_menace.mtn","hash":"6edb6b114d53d7f93cff164992db475b0b6f09c3","modified":1650012001768},{"_id":"public/live2d_models/ni-j/assets/mtn/17_yes.mtn","hash":"a023cc93e55b3940f1a8690dcfa7ad1cfa534fad","modified":1650012001768},{"_id":"public/live2d_models/ni-j/assets/mtn/18_no.mtn","hash":"9a18a2537bf6634da2bafd3a57d236de30c73b4e","modified":1650012001768},{"_id":"public/live2d_models/ni-j/assets/mtn/19_walk.mtn","hash":"035516e8cdaa5b3c6e7524daca72294284a81126","modified":1650012001768},{"_id":"public/live2d_models/ni-j/assets/mtn/20_sleep.mtn","hash":"914e4670825467e5e8d2f6983bd21c7190e57310","modified":1650012001768},{"_id":"public/live2d_models/nietzsche/assets/mtn/00_idle.mtn","hash":"3686b7bfdb43f85f4fe1d94ed59379d2c4bee41d","modified":1650012001768},{"_id":"public/live2d_models/nietzsche/assets/mtn/01_happy.mtn","hash":"2020573671b39c81fbd784a8b873ebee019ca501","modified":1650012001768},{"_id":"public/live2d_models/nietzsche/assets/mtn/02_angry.mtn","hash":"f75e1f580c64695fbbf8ba3c5f49eafc7208411d","modified":1650012001768},{"_id":"public/live2d_models/nietzsche/assets/mtn/03_fear.mtn","hash":"b6cdb8fa48960b2a6e66d78ea992221e8108437b","modified":1650012001768},{"_id":"public/live2d_models/nietzsche/assets/mtn/05_fun.mtn","hash":"4b956c9c028dce753fafa1859404a136975786d4","modified":1650012001768},{"_id":"public/live2d_models/nietzsche/assets/mtn/04_surprise.mtn","hash":"4b911af06de9bc6f386aecd623851e5799edaa96","modified":1650012001768},{"_id":"public/live2d_models/nietzsche/assets/mtn/06_love.mtn","hash":"c9f90cc2e2be55ac9c19cf6a962330dad3833fc1","modified":1650012001768},{"_id":"public/live2d_models/nietzsche/assets/mtn/07_bye.mtn","hash":"6a3e90e8efb64cd5b187196625a3d8915efb21c8","modified":1650012001768},{"_id":"public/live2d_models/nietzsche/assets/mtn/08_sad.mtn","hash":"63647d9320bf3928d658e1275adbfaeba88748b7","modified":1650012001768},{"_id":"public/live2d_models/nietzsche/assets/mtn/10_yeah.mtn","hash":"58c4bda1339f41fa8a7e554509a7a871bad392b8","modified":1650012001768},{"_id":"public/live2d_models/nietzsche/assets/mtn/09_yawn.mtn","hash":"e0e29a712b01be59ae8bba2e1a0d850e06260d20","modified":1650012001768},{"_id":"public/live2d_models/nietzsche/assets/mtn/11_muscle.mtn","hash":"7d0e3466a996f8704e86913c723ac4b82f14ff47","modified":1650012001768},{"_id":"public/live2d_models/nietzsche/assets/mtn/12_stagger.mtn","hash":"3f1a0b25cb1b9fb150f7a9ef37e8c9ba8d4e6ba1","modified":1650012001768},{"_id":"public/live2d_models/nietzsche/assets/mtn/13_cry.mtn","hash":"27709b59d2e6cba73d69a67cadb8bf50413206a9","modified":1650012001768},{"_id":"public/live2d_models/nietzsche/assets/mtn/14_ sigh.mtn","hash":"80c4e4f539253d86a7aa5faae2c5e5a3a7b1adcc","modified":1650012001768},{"_id":"public/live2d_models/nietzsche/assets/mtn/15_joy.mtn","hash":"b76a24efc57e4c2cc4abf70c293b2e800029a20d","modified":1650012001768},{"_id":"public/live2d_models/nietzsche/assets/mtn/17_yes.mtn","hash":"a023cc93e55b3940f1a8690dcfa7ad1cfa534fad","modified":1650012001768},{"_id":"public/live2d_models/nietzsche/assets/mtn/18_no.mtn","hash":"9a18a2537bf6634da2bafd3a57d236de30c73b4e","modified":1650012001768},{"_id":"public/live2d_models/nietzsche/assets/mtn/16_menace.mtn","hash":"6edb6b114d53d7f93cff164992db475b0b6f09c3","modified":1650012001768},{"_id":"public/live2d_models/nietzsche/assets/mtn/19_walk.mtn","hash":"035516e8cdaa5b3c6e7524daca72294284a81126","modified":1650012001768},{"_id":"public/live2d_models/nietzsche/assets/mtn/20_sleep.mtn","hash":"914e4670825467e5e8d2f6983bd21c7190e57310","modified":1650012001768},{"_id":"public/live2d_models/nipsilon/assets/mtn/00_idle.mtn","hash":"3686b7bfdb43f85f4fe1d94ed59379d2c4bee41d","modified":1650012001768},{"_id":"public/live2d_models/nipsilon/assets/mtn/01_happy.mtn","hash":"2020573671b39c81fbd784a8b873ebee019ca501","modified":1650012001768},{"_id":"public/live2d_models/nipsilon/assets/mtn/03_fear.mtn","hash":"b6cdb8fa48960b2a6e66d78ea992221e8108437b","modified":1650012001768},{"_id":"public/live2d_models/nipsilon/assets/mtn/02_angry.mtn","hash":"f75e1f580c64695fbbf8ba3c5f49eafc7208411d","modified":1650012001768},{"_id":"public/live2d_models/nipsilon/assets/mtn/04_surprise.mtn","hash":"4b911af06de9bc6f386aecd623851e5799edaa96","modified":1650012001768},{"_id":"public/live2d_models/nipsilon/assets/mtn/05_fun.mtn","hash":"4b956c9c028dce753fafa1859404a136975786d4","modified":1650012001768},{"_id":"public/live2d_models/nipsilon/assets/mtn/06_love.mtn","hash":"c9f90cc2e2be55ac9c19cf6a962330dad3833fc1","modified":1650012001768},{"_id":"public/live2d_models/nipsilon/assets/mtn/07_bye.mtn","hash":"6a3e90e8efb64cd5b187196625a3d8915efb21c8","modified":1650012001768},{"_id":"public/live2d_models/nipsilon/assets/mtn/08_sad.mtn","hash":"63647d9320bf3928d658e1275adbfaeba88748b7","modified":1650012001768},{"_id":"public/live2d_models/nipsilon/assets/mtn/09_yawn.mtn","hash":"e0e29a712b01be59ae8bba2e1a0d850e06260d20","modified":1650012001768},{"_id":"public/live2d_models/nipsilon/assets/mtn/10_yeah.mtn","hash":"58c4bda1339f41fa8a7e554509a7a871bad392b8","modified":1650012001768},{"_id":"public/live2d_models/nipsilon/assets/mtn/11_muscle.mtn","hash":"7d0e3466a996f8704e86913c723ac4b82f14ff47","modified":1650012001768},{"_id":"public/live2d_models/nipsilon/assets/mtn/12_stagger.mtn","hash":"3f1a0b25cb1b9fb150f7a9ef37e8c9ba8d4e6ba1","modified":1650012001768},{"_id":"public/live2d_models/nipsilon/assets/mtn/13_cry.mtn","hash":"27709b59d2e6cba73d69a67cadb8bf50413206a9","modified":1650012001768},{"_id":"public/live2d_models/nipsilon/assets/mtn/14_ sigh.mtn","hash":"80c4e4f539253d86a7aa5faae2c5e5a3a7b1adcc","modified":1650012001768},{"_id":"public/live2d_models/nipsilon/assets/mtn/15_joy.mtn","hash":"b76a24efc57e4c2cc4abf70c293b2e800029a20d","modified":1650012001768},{"_id":"public/live2d_models/nipsilon/assets/mtn/16_menace.mtn","hash":"6edb6b114d53d7f93cff164992db475b0b6f09c3","modified":1650012001768},{"_id":"public/live2d_models/nipsilon/assets/mtn/17_yes.mtn","hash":"a023cc93e55b3940f1a8690dcfa7ad1cfa534fad","modified":1650012001768},{"_id":"public/live2d_models/nipsilon/assets/mtn/18_no.mtn","hash":"9a18a2537bf6634da2bafd3a57d236de30c73b4e","modified":1650012001768},{"_id":"public/live2d_models/nipsilon/assets/mtn/19_walk.mtn","hash":"035516e8cdaa5b3c6e7524daca72294284a81126","modified":1650012001768},{"_id":"public/live2d_models/nipsilon/assets/mtn/20_sleep.mtn","hash":"914e4670825467e5e8d2f6983bd21c7190e57310","modified":1650012001768},{"_id":"public/live2d_models/nito/assets/mtn/00_idle.mtn","hash":"3686b7bfdb43f85f4fe1d94ed59379d2c4bee41d","modified":1650012001768},{"_id":"public/live2d_models/nito/assets/mtn/01_happy.mtn","hash":"2020573671b39c81fbd784a8b873ebee019ca501","modified":1650012001768},{"_id":"public/live2d_models/nito/assets/mtn/02_angry.mtn","hash":"f75e1f580c64695fbbf8ba3c5f49eafc7208411d","modified":1650012001768},{"_id":"public/live2d_models/nito/assets/mtn/03_fear.mtn","hash":"b6cdb8fa48960b2a6e66d78ea992221e8108437b","modified":1650012001768},{"_id":"public/live2d_models/nito/assets/mtn/04_surprise.mtn","hash":"4b911af06de9bc6f386aecd623851e5799edaa96","modified":1650012001768},{"_id":"public/live2d_models/nito/assets/mtn/05_fun.mtn","hash":"4b956c9c028dce753fafa1859404a136975786d4","modified":1650012001768},{"_id":"public/live2d_models/nito/assets/mtn/06_love.mtn","hash":"c9f90cc2e2be55ac9c19cf6a962330dad3833fc1","modified":1650012001768},{"_id":"public/live2d_models/nito/assets/mtn/07_bye.mtn","hash":"6a3e90e8efb64cd5b187196625a3d8915efb21c8","modified":1650012001768},{"_id":"public/live2d_models/nito/assets/mtn/08_sad.mtn","hash":"63647d9320bf3928d658e1275adbfaeba88748b7","modified":1650012001768},{"_id":"public/live2d_models/nito/assets/mtn/09_yawn.mtn","hash":"e0e29a712b01be59ae8bba2e1a0d850e06260d20","modified":1650012001768},{"_id":"public/live2d_models/nito/assets/mtn/10_yeah.mtn","hash":"58c4bda1339f41fa8a7e554509a7a871bad392b8","modified":1650012001768},{"_id":"public/live2d_models/nito/assets/mtn/11_muscle.mtn","hash":"7d0e3466a996f8704e86913c723ac4b82f14ff47","modified":1650012001768},{"_id":"public/live2d_models/nito/assets/mtn/12_stagger.mtn","hash":"3f1a0b25cb1b9fb150f7a9ef37e8c9ba8d4e6ba1","modified":1650012001768},{"_id":"public/live2d_models/nito/assets/mtn/13_cry.mtn","hash":"27709b59d2e6cba73d69a67cadb8bf50413206a9","modified":1650012001768},{"_id":"public/live2d_models/nito/assets/mtn/14_ sigh.mtn","hash":"80c4e4f539253d86a7aa5faae2c5e5a3a7b1adcc","modified":1650012001768},{"_id":"public/live2d_models/nito/assets/mtn/15_joy.mtn","hash":"b76a24efc57e4c2cc4abf70c293b2e800029a20d","modified":1650012001768},{"_id":"public/live2d_models/nito/assets/mtn/16_menace.mtn","hash":"6edb6b114d53d7f93cff164992db475b0b6f09c3","modified":1650012001768},{"_id":"public/live2d_models/nito/assets/mtn/17_yes.mtn","hash":"a023cc93e55b3940f1a8690dcfa7ad1cfa534fad","modified":1650012001768},{"_id":"public/live2d_models/nito/assets/mtn/18_no.mtn","hash":"9a18a2537bf6634da2bafd3a57d236de30c73b4e","modified":1650012001768},{"_id":"public/live2d_models/nito/assets/mtn/19_walk.mtn","hash":"035516e8cdaa5b3c6e7524daca72294284a81126","modified":1650012001768},{"_id":"public/live2d_models/nito/assets/mtn/20_sleep.mtn","hash":"914e4670825467e5e8d2f6983bd21c7190e57310","modified":1650012001768},{"_id":"public/live2d_models/shizuku/assets/mtn/flickHead_02.mtn","hash":"d3c9c0acb4dc25a2274f3b9faa71e5ce60ad92e4","modified":1650012001768},{"_id":"public/live2d_models/shizuku/assets/mtn/flickHead_01.mtn","hash":"a1011d6bf397bcd3c3c968d9616f88fe1ffbc83c","modified":1650012001768},{"_id":"public/live2d_models/shizuku/assets/mtn/idle_00.mtn","hash":"f9fa4acb170959ed665690d18790fc618cea6bd2","modified":1650012001768},{"_id":"public/live2d_models/shizuku/assets/mtn/flickHead_00.mtn","hash":"f64c79c9171660db5c440bef229ac2e35a1597d5","modified":1650012001768},{"_id":"public/live2d_models/shizuku/assets/mtn/idle_01.mtn","hash":"fe824e9209bda79277f4785a637c38bf3b8e1cad","modified":1650012001768},{"_id":"public/live2d_models/shizuku/assets/mtn/idle_02.mtn","hash":"58b87745d9c2b2b5667549a52a781b6bfea44927","modified":1650012001768},{"_id":"public/live2d_models/shizuku/assets/mtn/pinchIn_00.mtn","hash":"70978b4c983f6a9fd6d3d9c24571586f7d6eac30","modified":1650012001768},{"_id":"public/live2d_models/shizuku/assets/mtn/pinchIn_01.mtn","hash":"a5fefb45115695db72b9499e627a51b2b9394f2c","modified":1650012001768},{"_id":"public/live2d_models/shizuku/assets/mtn/pinchIn_02.mtn","hash":"aa0d66ca9b06c374577fd7e64e89756de1e1f2ae","modified":1650012001768},{"_id":"public/live2d_models/shizuku/assets/mtn/pinchOut_00.mtn","hash":"e07fe8fd8c2810e3c1d28b730bd49c8c25849bad","modified":1650012001768},{"_id":"public/live2d_models/shizuku/assets/mtn/pinchOut_01.mtn","hash":"e05df948d08b17f34c993a9c1f901190509d5db0","modified":1650012001768},{"_id":"public/live2d_models/shizuku/assets/mtn/pinchOut_02.mtn","hash":"b323fd350d334b33bbdfb31194ae664089986c27","modified":1650012001768},{"_id":"public/live2d_models/shizuku/assets/mtn/shake_00.mtn","hash":"5185d02c7ab9f0bec3d4a890b54b2378e553373d","modified":1650012001768},{"_id":"public/live2d_models/shizuku/assets/mtn/shake_01.mtn","hash":"e812985a56796e122018f9d57d1606a4866ff7d1","modified":1650012001768},{"_id":"public/live2d_models/shizuku/assets/mtn/shake_02.mtn","hash":"2702970805e07777974c383613e631730982bcff","modified":1650012001768},{"_id":"public/live2d_models/shizuku/assets/mtn/tapBody_00.mtn","hash":"835aa3d4a8fbd26c0bb66b164a19464fa3f17a99","modified":1650012001768},{"_id":"public/live2d_models/shizuku/assets/mtn/tapBody_01.mtn","hash":"78fca17436ab5e065e27f419f135aa6c0a0b52ef","modified":1650012001768},{"_id":"public/live2d_models/shizuku/assets/mtn/tapBody_02.mtn","hash":"a75acb51c1191ce5050d3ee1af6f2dcc787c7c5e","modified":1650012001768},{"_id":"public/live2d_models/shizuku/assets/snd/flickHead_00.mp3","hash":"356388d939006b03cf9e6158c603b58d4800bec1","modified":1650012001768},{"_id":"public/live2d_models/shizuku/assets/snd/flickHead_01.mp3","hash":"436d0bbccf6e7a2744447554947eee4563608970","modified":1650012001768},{"_id":"public/live2d_models/shizuku/assets/snd/flickHead_02.mp3","hash":"5f63477ce63f2073e24d68fea906fe136fe6349e","modified":1650012001768},{"_id":"public/live2d_models/shizuku/assets/snd/pinchIn_00.mp3","hash":"f9baa3b7cadec20b714135fc49cfab3ff6adeeb4","modified":1650012001768},{"_id":"public/live2d_models/shizuku/assets/snd/pinchIn_01.mp3","hash":"d5c8cc6f61b56222a83a5174f75006f83c3b88da","modified":1650012001768},{"_id":"public/live2d_models/shizuku/assets/snd/shake_00.mp3","hash":"f65dd58e7b44ec5c865d13c190316070b625b5fe","modified":1650012001768},{"_id":"public/live2d_models/shizuku/assets/snd/shake_01.mp3","hash":"c1e0e8a07ff268ee06c2b7825d1b645e193f21b9","modified":1650012001768},{"_id":"public/live2d_models/shizuku/assets/snd/shake_02.mp3","hash":"8882b94bce00f09232588b7301badb105fa8acab","modified":1650012001768},{"_id":"public/live2d_models/shizuku/assets/snd/tapBody_00.mp3","hash":"003e68a59a9c8392e230f34c91860efbd946277a","modified":1650012001768},{"_id":"public/live2d_models/tororo/assets/mtn/00_idle.mtn","hash":"b224c60e463b9f71ddbfc0c720e430496c175f4f","modified":1650012001768},{"_id":"public/live2d_models/tororo/assets/mtn/01.mtn","hash":"fb550833ae22c9954c3e01df37ed29b2d61700f2","modified":1650012001768},{"_id":"public/live2d_models/tororo/assets/mtn/02.mtn","hash":"7eafc52edc73b7cb80ae70d34b43c6ac778fa47b","modified":1650012001768},{"_id":"public/live2d_models/tororo/assets/mtn/03.mtn","hash":"f900737c7a98441cbb2e05255427e6260e19ae68","modified":1650012001768},{"_id":"public/live2d_models/shizuku/assets/snd/tapBody_01.mp3","hash":"5314b50f153df71559e51e2586581c006df00722","modified":1650012001768},{"_id":"public/live2d_models/tororo/assets/mtn/04.mtn","hash":"c7a25d3c5d783639bae18db2f3cd284b819c3c85","modified":1650012001768},{"_id":"public/live2d_models/shizuku/assets/snd/tapBody_02.mp3","hash":"15e7815ed0a0e5164e18e0c53b97aedc742a134d","modified":1650012001768},{"_id":"public/live2d_models/tororo/assets/mtn/05.mtn","hash":"dd20ad24b5d1830a5d44b9bccb28f922eea5e0e5","modified":1650012001768},{"_id":"public/live2d_models/tororo/assets/mtn/06.mtn","hash":"ad404bd852d276cdd3d054c953e23f90e4e45ae1","modified":1650012001768},{"_id":"public/live2d_models/tororo/assets/mtn/07.mtn","hash":"b7f2e3a9fa4f3ffbb6e64a08f8d9f45ca1868ffb","modified":1650012001768},{"_id":"public/live2d_models/tororo/assets/mtn/08.mtn","hash":"4411c7651ff65195b113d95e7d5ebef8a59a37d9","modified":1650012001768},{"_id":"public/live2d_models/tsumiki/assets/mtn/tsumiki_idle_01.mtn","hash":"dd178b1cb3817bd2d7e6f56f25daf3ffacd4afdd","modified":1650012001768},{"_id":"public/live2d_models/tsumiki/assets/mtn/P01.mtn","hash":"4b6d266d9fe31e01c4e13ac2049435b5d70b5589","modified":1650012001768},{"_id":"public/live2d_models/tsumiki/assets/mtn/tsumiki_m_01_df.mtn","hash":"4b008605c2f61f37fd295d929df8b51e9f1f447e","modified":1650012001768},{"_id":"public/live2d_models/tsumiki/assets/mtn/tsumiki_m_01.mtn","hash":"b1b0e2237926a52970703bcfdd5cf6bb6fc39248","modified":1650012001768},{"_id":"public/live2d_models/tsumiki/assets/mtn/tsumiki_m_02.mtn","hash":"43f73acf0ec68e5ddda2fb212b3bd62b4ec63829","modified":1650012001768},{"_id":"public/live2d_models/tsumiki/assets/mtn/tsumiki_m_03.mtn","hash":"bbd6a2cbe87dea113024d9d953bb42864cad31a5","modified":1650012001768},{"_id":"public/live2d_models/tsumiki/assets/mtn/tsumiki_m_04.mtn","hash":"b6395b5acb2136c8265f37483cfe60b4a1bfb66d","modified":1650012001768},{"_id":"public/live2d_models/tsumiki/assets/mtn/tsumiki_m_05.mtn","hash":"c118b3bcbf03d0cc07c9f6a2a8e8c495f07f4091","modified":1650012001768},{"_id":"public/live2d_models/tsumiki/assets/mtn/tsumiki_m_06.mtn","hash":"2641628ced0c982f214242744da73f1ab048c078","modified":1650012001768},{"_id":"public/live2d_models/tsumiki/assets/mtn/tsumiki_m_07.mtn","hash":"ec5da8fb40ff26dc3e9f306cade5f4bfc2f15642","modified":1650012001768},{"_id":"public/live2d_models/tsumiki/assets/mtn/tsumiki_m_08.mtn","hash":"98768aafeb239e75f788969eb995adbe7a89bc3f","modified":1650012001768},{"_id":"public/live2d_models/tsumiki/assets/mtn/tsumiki_m_09.mtn","hash":"c4f3635225ba606873a7c14cc91bf5a28a2afa95","modified":1650012001768},{"_id":"public/live2d_models/tsumiki/assets/mtn/tsumiki_m_10.mtn","hash":"8e6d0609ae64f8dd4db0e5e85addbc677fac3a79","modified":1650012001768},{"_id":"public/live2d_models/tsumiki/assets/mtn/tsumiki_m_13.mtn","hash":"d20d09dfbdf42d13240c45f9d2fa4474a4541dd8","modified":1650012001768},{"_id":"public/live2d_models/tsumiki/assets/mtn/tsumiki_m_14.mtn","hash":"2480493fffb4fd8135ef1e88c5f717952b7d6542","modified":1650012001768},{"_id":"public/live2d_models/tsumiki/assets/mtn/tsumiki_m_16.mtn","hash":"03843599008ab2ee23d9d03174924609ad042ce6","modified":1650012001768},{"_id":"public/live2d_models/tsumiki/assets/mtn/tsumiki_m_15.mtn","hash":"4fa8d8667c41cd5b3c49cf4bdd8b36cf0a9158b9","modified":1650012001768},{"_id":"public/live2d_models/tsumiki/assets/mtn/tsumiki_m_17.mtn","hash":"6346ebcf76b0780987f552b16c4c62c39732597f","modified":1650012001768},{"_id":"public/live2d_models/tsumiki/assets/mtn/tsumiki_m_18.mtn","hash":"34fbff31238e9b6a541f5f03a00bec5cbcec6649","modified":1650012001768},{"_id":"public/live2d_models/tsumiki/assets/mtn/tsumiki_m_19.mtn","hash":"685fc0130899e903d9c9433ec1c1a987323d6c8c","modified":1650012001768},{"_id":"public/live2d_models/tsumiki/assets/mtn/tsumiki_m_20.mtn","hash":"076ca7be2c81e776794245a3865478b20428e416","modified":1650012001768},{"_id":"public/live2d_models/tsumiki/assets/mtn/tsumiki_m_21.mtn","hash":"bd917f60537e4e9037c85bf356d4c25e75e2807c","modified":1650012001768},{"_id":"public/live2d_models/tsumiki/assets/mtn/tsumiki_m_23.mtn","hash":"d5a156e295e575c615b673350c025e3270afee8e","modified":1650012001768},{"_id":"public/live2d_models/tsumiki/assets/mtn/tsumiki_m_22.mtn","hash":"0fb02e4734ab8c455e1405dfed9546af583595ae","modified":1650012001768},{"_id":"public/live2d_models/tsumiki/assets/mtn/tsumiki_m_24.mtn","hash":"696502793e9917abc495645be784262e3b997bde","modified":1650012001768},{"_id":"public/live2d_models/unitychan/assets/mtn/idle_01.mtn","hash":"e38a7dcfcad059b695f935b2071a1270c1ddf905","modified":1650012001768},{"_id":"public/live2d_models/unitychan/assets/mtn/idle_02.mtn","hash":"8c3929962a4991c94bf7aeaf33169d61ccaccb2c","modified":1650012001768},{"_id":"public/live2d_models/unitychan/assets/mtn/m_01.mtn","hash":"97d08b57c3b07a854f69cdef3ce6d13a2b2ece1c","modified":1650012001768},{"_id":"public/live2d_models/unitychan/assets/mtn/m_02.mtn","hash":"a4dd9580452854f6adc7b30e9e85702a7641179c","modified":1650012001768},{"_id":"public/live2d_models/unitychan/assets/mtn/m_03.mtn","hash":"dd140c6c4702f3fbd785a85a4d5d8cfa32b9bc32","modified":1650012001768},{"_id":"public/live2d_models/unitychan/assets/mtn/m_04.mtn","hash":"32f8515854a89878c5becbabf56dabd4c675d437","modified":1650012001768},{"_id":"public/live2d_models/unitychan/assets/mtn/m_05.mtn","hash":"ca1f068a2c9c56519e4306115b95d1f497f31124","modified":1650012001768},{"_id":"public/live2d_models/unitychan/assets/mtn/m_06.mtn","hash":"cb16f119956346e4b15a1c432491423893cf2389","modified":1650012001768},{"_id":"public/live2d_models/unitychan/assets/mtn/m_07.mtn","hash":"35caceb556d9bb4fc2a5ed4f8c51d766a6e70405","modified":1650012001768},{"_id":"public/live2d_models/unitychan/assets/mtn/m_08.mtn","hash":"fbd6ae1967446a421d8505a8d29d5f7f64b5c0d7","modified":1650012001768},{"_id":"public/live2d_models/unitychan/assets/mtn/m_10.mtn","hash":"837f0cda82543d87c12108957a16e482964f3796","modified":1650012001768},{"_id":"public/live2d_models/unitychan/assets/mtn/m_09.mtn","hash":"4b942bfbde2a82f19bb4aab7e54e3caae9691da6","modified":1650012001768},{"_id":"public/live2d_models/unitychan/assets/mtn/m_11.mtn","hash":"2c5ec476b9e3246d8c7a5ae4611401d3420cfa1e","modified":1650012001768},{"_id":"public/live2d_models/unitychan/assets/mtn/m_13.mtn","hash":"f08d7f660fda4029fec2acb1f1389f855b5d1b96","modified":1650012001768},{"_id":"public/live2d_models/unitychan/assets/mtn/m_12.mtn","hash":"90e96587969b78785c16cdffbdbe0b220cac39b7","modified":1650012001768},{"_id":"public/live2d_models/unitychan/assets/mtn/m_14.mtn","hash":"4c5c7fdc05237a090341d4690bd7e07344728e9e","modified":1650012001768},{"_id":"public/live2d_models/wanko/assets/mtn/idle_02.mtn","hash":"865874c50848fbc9a55011391531e2ec171c9b91","modified":1650012001768},{"_id":"public/live2d_models/wanko/assets/mtn/idle_01.mtn","hash":"908abce18f6cf7fd4bc1486f048c25a517f4a34a","modified":1650012001768},{"_id":"public/live2d_models/wanko/assets/mtn/idle_03.mtn","hash":"84684914ebf5dc5b2df160338bb97dcc0a978476","modified":1650012001768},{"_id":"public/live2d_models/wanko/assets/mtn/idle_04.mtn","hash":"78e22091792abb0600f724a5dfd60371257954e8","modified":1650012001768},{"_id":"public/live2d_models/wanko/assets/mtn/shake_01.mtn","hash":"dffc54733127832f8f5e91aced55a83da58fa215","modified":1650012001768},{"_id":"public/live2d_models/wanko/assets/mtn/shake_02.mtn","hash":"7b6c914f6c33450eda2e53d9b638fd7045c0f683","modified":1650012001768},{"_id":"public/live2d_models/wanko/assets/mtn/touch_01.mtn","hash":"99270ea8fe1f8f5d88eadb94f36bd0810009d1e6","modified":1650012001768},{"_id":"public/live2d_models/wanko/assets/mtn/touch_02.mtn","hash":"4d1f099fbd18d15c598a644227ed5bf942a2ba71","modified":1650012001768},{"_id":"public/live2d_models/wanko/assets/mtn/touch_03.mtn","hash":"9c394975083915f0f3786caff1762381348b041e","modified":1650012001768},{"_id":"public/live2d_models/wanko/assets/mtn/touch_04.mtn","hash":"8d2302cfdaec698e575048797ff4f30ae4d202de","modified":1650012001768},{"_id":"public/live2d_models/wanko/assets/mtn/touch_05.mtn","hash":"9610bb8a937ba9b11445a3894d8cc0733a2b67e5","modified":1650012001768},{"_id":"public/live2d_models/wanko/assets/mtn/touch_06.mtn","hash":"feb9237c73f2045ed1704c01b5362c9a54ee5a18","modified":1650012001768},{"_id":"public/live2d_models/z16/assets/mtn/idle.mtn","hash":"f6b879d9f1d096509a7edbc971b8fdd9697932e9","modified":1650012001768},{"_id":"public/live2d_models/haru/02/assets/mtn/flickHead_00.mtn","hash":"66577f6dde2bec905930fba0dd5f06de939c8f1e","modified":1650012001768},{"_id":"public/live2d_models/haru/02/assets/mtn/idle_00.mtn","hash":"bbaaafe4de159dd4fb73d137d283c640d3fede53","modified":1650012001768},{"_id":"public/live2d_models/haru/02/assets/mtn/idle_01.mtn","hash":"035c196f276ed177239ea05eeaece68b0fda2935","modified":1650012001768},{"_id":"public/live2d_models/haru/02/assets/mtn/idle_02.mtn","hash":"82291b3b78339d52f559a65d02b78e0b30180503","modified":1650012001768},{"_id":"public/live2d_models/haru/02/assets/mtn/pinchIn_00.mtn","hash":"ed792ed8226aa5a3e5bf059285b2c95855c11303","modified":1650012001768},{"_id":"public/live2d_models/haru/02/assets/mtn/pinchOut_00.mtn","hash":"db831991287e3a4724578f068a68e48168081d5a","modified":1650012001768},{"_id":"public/live2d_models/haru/02/assets/mtn/shake_00.mtn","hash":"7e938c4abe83273766c4562a571301811dea1de6","modified":1650012001768},{"_id":"public/live2d_models/haru/02/assets/mtn/tapBody_01.mtn","hash":"91fbfe1870f7a0a5f5fdb87c213c41b2a8cb5648","modified":1650012001768},{"_id":"public/live2d_models/haru/02/assets/mtn/tapBody_00.mtn","hash":"4041b2f1f2f4a84454180f9dab14e46d99e135c0","modified":1650012001768},{"_id":"public/live2d_models/haru/02/assets/mtn/tapBody_02.mtn","hash":"e93a2163cbb85525338e11a520e317329b11fb65","modified":1650012001768},{"_id":"public/live2d_models/haru/02/assets/mtn/tapBody_03.mtn","hash":"fcd573576112ad5f4e4b7dc0b750de79f150f971","modified":1650012001768},{"_id":"public/live2d_models/haru/02/assets/mtn/tapBody_04.mtn","hash":"557811c5f4ddbd393542366ef95794b19fc60387","modified":1650012001768},{"_id":"public/live2d_models/haru/02/assets/mtn/tapBody_05.mtn","hash":"5f48e50e938f98636519c370745a39b921907719","modified":1650012001768},{"_id":"public/live2d_models/haru/02/assets/mtn/tapBody_06.mtn","hash":"3d06ac66c04eb12c64d36551dd85389f0b0ee51f","modified":1650012001768},{"_id":"public/live2d_models/haru/02/assets/mtn/tapBody_07.mtn","hash":"d299747aaf27377d552ef1f8b4fce9871a65c37d","modified":1650012001768},{"_id":"public/live2d_models/haru/02/assets/mtn/tapBody_08.mtn","hash":"64a03a904d701039bf81e1296ee79537c2e8800e","modified":1650012001768},{"_id":"public/live2d_models/haru/02/assets/mtn/tapBody_09.mtn","hash":"4f50c17dcf352995e51a4d462b9ca7a9e9197d5c","modified":1650012001768},{"_id":"public/live2d_models/haru/02/assets/snd/pinchOut_00.mp3","hash":"6872da79e1b515b2c996eecee4ca150e22aa48c0","modified":1650012001768},{"_id":"public/live2d_models/haru/02/assets/snd/pinchIn_00.mp3","hash":"d143662d2c8cfb1150f719d3d55c75d454535690","modified":1650012001768},{"_id":"public/live2d_models/haru/02/assets/snd/tapBody_00.mp3","hash":"23c998ca4549b7908aef029d28b6ae22cbfcdc82","modified":1650012001768},{"_id":"public/live2d_models/haru/02/assets/snd/shake_00.mp3","hash":"28b245865f200b61cb009dfbd3811d9e9b0748fb","modified":1650012001768},{"_id":"public/live2d_models/haru/02/assets/snd/tapBody_01.mp3","hash":"d3d5607dbe394225e2ee858531b7767f567c4e10","modified":1650012001768},{"_id":"public/live2d_models/haru/02/assets/snd/tapBody_02.mp3","hash":"be111df9ecd006e992f94cb4280c2b66d9cd23ed","modified":1650012001768},{"_id":"public/live2d_models/haru/02/assets/snd/flickHead_00.mp3","hash":"0b447e7e38eb20f3f7e8ba2a5ea5f521f6e37a26","modified":1650012001768},{"_id":"public/live2d_models/haru/01/assets/mtn/flickHead_00.mtn","hash":"66577f6dde2bec905930fba0dd5f06de939c8f1e","modified":1650012001768},{"_id":"public/live2d_models/haru/01/assets/mtn/idle_00.mtn","hash":"bbaaafe4de159dd4fb73d137d283c640d3fede53","modified":1650012001768},{"_id":"public/live2d_models/haru/01/assets/mtn/idle_02.mtn","hash":"82291b3b78339d52f559a65d02b78e0b30180503","modified":1650012001768},{"_id":"public/live2d_models/haru/01/assets/mtn/idle_01.mtn","hash":"035c196f276ed177239ea05eeaece68b0fda2935","modified":1650012001768},{"_id":"public/live2d_models/haru/01/assets/mtn/pinchIn_00.mtn","hash":"ed792ed8226aa5a3e5bf059285b2c95855c11303","modified":1650012001768},{"_id":"public/live2d_models/haru/01/assets/mtn/pinchOut_00.mtn","hash":"db831991287e3a4724578f068a68e48168081d5a","modified":1650012001768},{"_id":"public/live2d_models/haru/01/assets/mtn/shake_00.mtn","hash":"7e938c4abe83273766c4562a571301811dea1de6","modified":1650012001768},{"_id":"public/live2d_models/haru/01/assets/mtn/tapBody_00.mtn","hash":"4041b2f1f2f4a84454180f9dab14e46d99e135c0","modified":1650012001768},{"_id":"public/live2d_models/haru/01/assets/mtn/tapBody_01.mtn","hash":"91fbfe1870f7a0a5f5fdb87c213c41b2a8cb5648","modified":1650012001768},{"_id":"public/live2d_models/haru/01/assets/mtn/tapBody_02.mtn","hash":"e93a2163cbb85525338e11a520e317329b11fb65","modified":1650012001768},{"_id":"public/live2d_models/haru/01/assets/mtn/tapBody_03.mtn","hash":"fcd573576112ad5f4e4b7dc0b750de79f150f971","modified":1650012001768},{"_id":"public/live2d_models/haru/01/assets/mtn/tapBody_04.mtn","hash":"557811c5f4ddbd393542366ef95794b19fc60387","modified":1650012001768},{"_id":"public/live2d_models/haru/01/assets/mtn/tapBody_05.mtn","hash":"5f48e50e938f98636519c370745a39b921907719","modified":1650012001768},{"_id":"public/live2d_models/haru/01/assets/mtn/tapBody_06.mtn","hash":"3d06ac66c04eb12c64d36551dd85389f0b0ee51f","modified":1650012001768},{"_id":"public/live2d_models/haru/01/assets/mtn/tapBody_07.mtn","hash":"d299747aaf27377d552ef1f8b4fce9871a65c37d","modified":1650012001768},{"_id":"public/live2d_models/haru/01/assets/mtn/tapBody_08.mtn","hash":"64a03a904d701039bf81e1296ee79537c2e8800e","modified":1650012001768},{"_id":"public/live2d_models/haru/01/assets/mtn/tapBody_09.mtn","hash":"4f50c17dcf352995e51a4d462b9ca7a9e9197d5c","modified":1650012001768},{"_id":"public/live2d_models/haru/01/assets/snd/flickHead_00.mp3","hash":"0b447e7e38eb20f3f7e8ba2a5ea5f521f6e37a26","modified":1650012001768},{"_id":"public/live2d_models/haru/01/assets/snd/pinchIn_00.mp3","hash":"d143662d2c8cfb1150f719d3d55c75d454535690","modified":1650012001768},{"_id":"public/live2d_models/haru/01/assets/snd/pinchOut_00.mp3","hash":"6872da79e1b515b2c996eecee4ca150e22aa48c0","modified":1650012001768},{"_id":"public/live2d_models/haru/01/assets/snd/shake_00.mp3","hash":"28b245865f200b61cb009dfbd3811d9e9b0748fb","modified":1650012001768},{"_id":"public/live2d_models/haru/01/assets/snd/tapBody_01.mp3","hash":"d3d5607dbe394225e2ee858531b7767f567c4e10","modified":1650012001768},{"_id":"public/live2d_models/haru/01/assets/snd/tapBody_00.mp3","hash":"23c998ca4549b7908aef029d28b6ae22cbfcdc82","modified":1650012001768},{"_id":"public/live2d_models/haru/01/assets/snd/tapBody_02.mp3","hash":"be111df9ecd006e992f94cb4280c2b66d9cd23ed","modified":1650012001768},{"_id":"public/live2d_models/z16/assets/moc/z16.512/texture_00.png","hash":"251b9f944fb1575c01a62b8a9d7522fe76954b3b","modified":1650012001768},{"_id":"public/live2d_models/z16/assets/moc/z16.256/texture_00.png","hash":"19f22619c246067d519aa1e6e477497cc4342414","modified":1650012001768},{"_id":"public/live2d_models/haru/02/assets/moc/haru02.1024/texture_00.png","hash":"f3c4103630bbf0660f793f90a14b51fdb7dfb7ea","modified":1650012001768},{"_id":"public/live2d_models/haru/01/assets/moc/haru01.1024/texture_00.png","hash":"f3c4103630bbf0660f793f90a14b51fdb7dfb7ea","modified":1650012001768},{"_id":"public/img/biubiubiu.png","hash":"d3f4b8f32f98ec94bef3129f1e737ba99f91cde7","modified":1650012001768},{"_id":"public/img/left.jpg","hash":"08023016b6ad32a8f54d7711e1e47904f7aadcdd","modified":1650012001768},{"_id":"public/lib/gitment.js.bak","hash":"ded86ac10cc79a7d28e2ea44778e792cef6c3470","modified":1650012001768},{"_id":"public/plugins/live2d-widget.js/L2Dwidget.min.js.map","hash":"75322ae0754f0580c0fb5ce9176ab72ce4009903","modified":1650012001768},{"_id":"public/live2d_models/epsilon2_1/assets/moc/Epsilon2.1.moc","hash":"2148649bde741b6e1557c0ea3c076e5ce5a23632","modified":1650012001768},{"_id":"public/lib/busuanzi.pure.js","hash":"f54c44e2b30e551540b83640dd8c5ff266e157d5","modified":1650012001768},{"_id":"public/lib/clickLove.js","hash":"9e8e79d69ad8338761272f86fe5cad0ad5e503cc","modified":1650012001768},{"_id":"public/lib/default.css","hash":"c9c344d5c98cc90b5583865e71726bab1046cdeb","modified":1650012001768},{"_id":"public/lib/gitment.css","hash":"cb2e0be2c7ebbcc3e756340c811864115bf0ec56","modified":1650012001768},{"_id":"public/lib/oauthcallback.browser.js","hash":"989b9e2638336461a9911ebf60e9a839819dd11f","modified":1650012001768},{"_id":"public/lib/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1650012001768},{"_id":"public/lib/snow.js","hash":"12ed5d697aa8a337064a1827ea94c0652c36b4e5","modified":1650012001768},{"_id":"public/live2d_models/epsilon2_1/package-lock.json","hash":"dcd7a1d062ac78cbc821b0aed14a5888f6ac6c66","modified":1650012001768},{"_id":"public/live2d_models/epsilon2_1/package.json","hash":"183bc1baa9ba97b40a74799a66a215665a8313c7","modified":1650012001768},{"_id":"public/live2d_models/chitose/package-lock.json","hash":"81416d5dc6eb73844dc5d23620d2d8926cf2cc16","modified":1650012001768},{"_id":"public/live2d_models/chitose/package.json","hash":"c5b1696877925757a369dde0b66ae857a184a1a3","modified":1650012001768},{"_id":"public/live2d_models/gf/package-lock.json","hash":"a69cde4811a9868b17ecc5c30cd109a8dac31517","modified":1650012001768},{"_id":"public/live2d_models/gf/package.json","hash":"7db5654fd135fa7983df40d88969ad29a5ffb17d","modified":1650012001768},{"_id":"public/live2d_models/haru/package-lock.json","hash":"a7ec24dfd1ac820792945d002f940ac148e38f1d","modified":1650012001768},{"_id":"public/live2d_models/haru/package.json","hash":"db61eea30ab8ec7d54954006f80d2699cb9725ec","modified":1650012001768},{"_id":"public/live2d_models/haruto/package.json","hash":"c80910992505ea994a619b4a89423558e1b7892c","modified":1650012001768},{"_id":"public/live2d_models/hibiki/package-lock.json","hash":"81a0982aba92efdbd98f9b5203319385aa3cad52","modified":1650012001768},{"_id":"public/live2d_models/haruto/package-lock.json","hash":"67e0274fdd53300f873656c9464cb1ee1f41cfe6","modified":1650012001768},{"_id":"public/live2d_models/hibiki/package.json","hash":"cf6af2a7188ed72fcbffbff207e000fa3f8a482f","modified":1650012001768},{"_id":"public/live2d_models/izumi/package-lock.json","hash":"0e18be77e558654ef7eb84ac037226c6a2fc1e58","modified":1650012001768},{"_id":"public/live2d_models/hijiki/package-lock.json","hash":"985ee74389f276692c88f3b039fcc632dc73819d","modified":1650012001768},{"_id":"public/live2d_models/izumi/package.json","hash":"2a15a868b8fbbf50a975ab23063585f0ece7f206","modified":1650012001768},{"_id":"public/live2d_models/hijiki/package.json","hash":"8f82d1cf92106d059f3a619910e5cc83bb6044d0","modified":1650012001768},{"_id":"public/live2d_models/koharu/package-lock.json","hash":"5ee7591c194c1f8c89dfe437863cd0a6b161f832","modified":1650012001768},{"_id":"public/live2d_models/koharu/package.json","hash":"4d7cb22cf4e1449b0babd18189a8dc1eb1ee9e0e","modified":1650012001768},{"_id":"public/live2d_models/miku/package-lock.json","hash":"ec31a7cc0e536e3c79d392a89674018ce2a3c488","modified":1650012001768},{"_id":"public/live2d_models/miku/package.json","hash":"057f45aa125f0a95be51ba828d3e12a61058ee73","modified":1650012001768},{"_id":"public/live2d_models/ni-j/package.json","hash":"b1ca7b43b45ee03b4dfbaeded741b6edf9e1523b","modified":1650012001768},{"_id":"public/live2d_models/nico/package-lock.json","hash":"6ebcc37f9661edd9b03d4922cc6bdfe66d90e765","modified":1650012001768},{"_id":"public/live2d_models/nico/package.json","hash":"e9cdb3b41566fb453b0e38e7763cfbc36a8c9241","modified":1650012001768},{"_id":"public/live2d_models/nietzsche/package-lock.json","hash":"0ddcbcd20431260f3e25b3f1ee758357ef934cc5","modified":1650012001768},{"_id":"public/live2d_models/ni-j/package-lock.json","hash":"2e6c14a3f4167e5de16492b0e8cbd6f9b5bc09e7","modified":1650012001768},{"_id":"public/live2d_models/nietzsche/package.json","hash":"d89fe315b6a1b547c15eeef6ad5bbf38458f1bb6","modified":1650012001768},{"_id":"public/live2d_models/nipsilon/package-lock.json","hash":"afb471ff865ae1327beae650bfe0a602ad27a92a","modified":1650012001768},{"_id":"public/live2d_models/nipsilon/package.json","hash":"6b10ad8d148e29876559e9bf3dbfac3998f55c92","modified":1650012001768},{"_id":"public/live2d_models/nito/package.json","hash":"09493580a6cd62f46859babec6c9f13dc617d4ea","modified":1650012001768},{"_id":"public/live2d_models/shizuku/package-lock.json","hash":"7a70380a9b50f5b7374fcf07af2fc8e59205e8d8","modified":1650012001768},{"_id":"public/live2d_models/nito/package-lock.json","hash":"caf6080b25844aa44cb51dae30fb34691793eb07","modified":1650012001768},{"_id":"public/live2d_models/shizuku/package.json","hash":"9ace1963033ab9a396ff7b8c90de4c8c48b51c0d","modified":1650012001768},{"_id":"public/live2d_models/tororo/package-lock.json","hash":"adca3b14a22758a9b5d6d392354a9916a4283505","modified":1650012001768},{"_id":"public/live2d_models/tororo/package.json","hash":"68f3ec7e366ec1c7c58112acb04a75ffc3feca58","modified":1650012001768},{"_id":"public/live2d_models/tsumiki/package-lock.json","hash":"d96d7121a59557be2bad97237e784fbdb01d7096","modified":1650012001768},{"_id":"public/live2d_models/tsumiki/package.json","hash":"baed56b3f5f732adb02aca10859687dcaf0faffc","modified":1650012001768},{"_id":"public/live2d_models/unitychan/package.json","hash":"fbd004c83803cc378e30a4dd4b942950add8dc5a","modified":1650012001768},{"_id":"public/live2d_models/unitychan/package-lock.json","hash":"edb139e5fe6b99dbe2061533da424fef16c2a89d","modified":1650012001768},{"_id":"public/live2d_models/wanko/package-lock.json","hash":"121d859582cd7a7cadec5ad7391d74461b179128","modified":1650012001768},{"_id":"public/live2d_models/wanko/package.json","hash":"2bca16153b313e3582df1438cf4bad8a9c8ffd16","modified":1650012001768},{"_id":"public/live2d_models/z16/package.json","hash":"25eb264b356de9f58c7b068b601b292ed3950864","modified":1650012001768},{"_id":"public/live2d_models/z16/package-lock.json","hash":"f3d9457756272106295c1b7b15b0cd65590aaf43","modified":1650012001768},{"_id":"public/plugins/TweenMax/HoverImg.js","hash":"ecc51aed76c22ca181870d4ba47765c0598e3a1b","modified":1650012001768},{"_id":"public/plugins/TweenMax/charming.min.js","hash":"0b11f943ec562c9031be07203058650eee74d73d","modified":1650012001768},{"_id":"public/plugins/activate-power-mode/activate-power-mode.js","hash":"8161c7d2b8fd7fa407db3c3429edd8d19f82ae81","modified":1650012001768},{"_id":"public/plugins/ribbon.js/ribbon.js","hash":"65b1a8f12d04b15d7ed6eeb9d11dec760a799c5f","modified":1650012001768},{"_id":"public/plugins/live2d-widget.js/manifest.json","hash":"d3c86ddfd62f3560e306910369745116005f3892","modified":1650012001768},{"_id":"public/plugins/ribbon.js/ribbon.min.js","hash":"3c8e4d717ca107f3723def1795c8ed62a5f1a8d0","modified":1650012001768},{"_id":"public/live2d_models/epsilon2_1/assets/Epsilon2.1.model.json","hash":"a47e7d1fd76d5a90d383fa049295c1cdd1546845","modified":1650012001768},{"_id":"public/live2d_models/epsilon2_1/assets/Epsilon2.1.physics.json","hash":"bbf1a8cb496831fbf9715d8431b82fffc9f89257","modified":1650012001768},{"_id":"public/live2d_models/chitose/assets/chitose.model.json","hash":"a9b9986e72b8245f036f6ada876b84a3986c4218","modified":1650012001768},{"_id":"public/live2d_models/chitose/assets/chitose.physics.json","hash":"5ff4acbc4cf23a7f2ff211f50e53df6f6b7c0995","modified":1650012001768},{"_id":"public/live2d_models/chitose/assets/chitose.pose.json","hash":"52f9b579ca15b4b2dc4c5fa71172472dd6924264","modified":1650012001768},{"_id":"public/live2d_models/gf/assets/Gantzert_Felixander.model.json","hash":"d5caeb1c758088ff03bc190cd8dcee98e6e02392","modified":1650012001768},{"_id":"public/live2d_models/haruto/assets/haruto.physics.json","hash":"2fbf886979212357ba293bd35884f2cb5b26b6a6","modified":1650012001768},{"_id":"public/live2d_models/hibiki/assets/hibiki.model.json","hash":"73bbc0004fc21039452f80dc6dc3c287723aedc4","modified":1650012001768},{"_id":"public/live2d_models/haruto/assets/haruto.model.json","hash":"76f915f7edbd9c47df0ca041dddb151c0c93a2bf","modified":1650012001768},{"_id":"public/live2d_models/hibiki/assets/hibiki.physics.json","hash":"ba100c7a8c3fc777d05f41e3371d18c457febfa7","modified":1650012001768},{"_id":"public/live2d_models/izumi/assets/izumi.model.json","hash":"3ba8caa98a3af7b09d7a79419a691f543a1e3ea4","modified":1650012001768},{"_id":"public/live2d_models/hijiki/assets/hijiki.model.json","hash":"feff43bf7498d213982c3736c2c029664e4bcbd2","modified":1650012001768},{"_id":"public/live2d_models/izumi/assets/izumi.physics.json","hash":"cee4a6e1c8ec3e1c2bfc8028ff49dc9c34c06258","modified":1650012001768},{"_id":"public/live2d_models/hijiki/assets/hijiki.pose.json","hash":"81438bf69b32c7c11e311b4fe043730cdc7b7ec2","modified":1650012001768},{"_id":"public/live2d_models/koharu/assets/koharu.model.json","hash":"ceccdefd776b7c9475a29cff0842796e4f58b7e9","modified":1650012001768},{"_id":"public/live2d_models/koharu/assets/koharu.physics.json","hash":"2fbf886979212357ba293bd35884f2cb5b26b6a6","modified":1650012001768},{"_id":"public/live2d_models/miku/assets/miku.model.json","hash":"32e49dfc6cb4d9c537453bb083aab39ed708c476","modified":1650012001768},{"_id":"public/live2d_models/miku/assets/miku.physics.json","hash":"d5ca7f215044ba5bf1cdb8045a5c99b64ec258ce","modified":1650012001768},{"_id":"public/live2d_models/nico/assets/nico.model.json","hash":"9f007936f4748e80a1da60ca078daed595acffee","modified":1650012001768},{"_id":"public/live2d_models/nico/assets/nico.physics.json","hash":"1db72a0413771e14d74de955af728224318e91d1","modified":1650012001768},{"_id":"public/live2d_models/nico/assets/nico.pose.json","hash":"a8c949d20eebf1e716a495bf806b2eccff62a925","modified":1650012001768},{"_id":"public/live2d_models/ni-j/assets/ni-j.model.json","hash":"3c77e66d6436136bf50d5fdbc8ee8cd543a35e01","modified":1650012001768},{"_id":"public/live2d_models/ni-j/assets/ni-j.physics.json","hash":"ef2dd194f934f129f5f4db7785a9c7b7e45671ff","modified":1650012001768},{"_id":"public/live2d_models/ni-j/assets/ni-j.pose.json","hash":"a8c949d20eebf1e716a495bf806b2eccff62a925","modified":1650012001768},{"_id":"public/live2d_models/nietzsche/assets/nietzche.model.json","hash":"4f8fb457ddf9b0aa930cbcd4a3258ccdbf9e7506","modified":1650012001768},{"_id":"public/live2d_models/nietzsche/assets/nietzsche.physics.json","hash":"5e83e055f99be8c8752fdcad30f9ed043111b83b","modified":1650012001768},{"_id":"public/live2d_models/nietzsche/assets/nietzsche.pose.json","hash":"a8c949d20eebf1e716a495bf806b2eccff62a925","modified":1650012001768},{"_id":"public/live2d_models/nipsilon/assets/nipsilon.model.json","hash":"271e40dfe9c04c8b5f5e4c6a9aa4f7ee6c65cff9","modified":1650012001768},{"_id":"public/live2d_models/nipsilon/assets/nipsilon.physics.json","hash":"5e83e055f99be8c8752fdcad30f9ed043111b83b","modified":1650012001768},{"_id":"public/live2d_models/nipsilon/assets/nipsilon.pose.json","hash":"a8c949d20eebf1e716a495bf806b2eccff62a925","modified":1650012001768},{"_id":"public/live2d_models/nito/assets/nito.model.json","hash":"7d7930d1fc8114ae0e694624db457612dca64814","modified":1650012001768},{"_id":"public/live2d_models/nito/assets/nito.physics.json","hash":"27db548eec3c5f3c71330e675b3f602cd86f2242","modified":1650012001768},{"_id":"public/live2d_models/nito/assets/nito.pose.json","hash":"a8c949d20eebf1e716a495bf806b2eccff62a925","modified":1650012001768},{"_id":"public/live2d_models/shizuku/assets/shizuku.physics.json","hash":"6484d646e79a44c83784c6ae434cf7349746c5c8","modified":1650012001768},{"_id":"public/live2d_models/shizuku/assets/shizuku.pose.json","hash":"ac5505efbf80ba0a2e5783d67fe232bc5c6f1f80","modified":1650012001768},{"_id":"public/live2d_models/shizuku/assets/shizuku.model.json","hash":"19a05bd41b806a935cea42c2000626fc82da2536","modified":1650012001768},{"_id":"public/live2d_models/tororo/assets/tororo.model.json","hash":"3b96ea33460642d288c98327444966d93a0c11ba","modified":1650012001768},{"_id":"public/live2d_models/tororo/assets/tororo.pose.json","hash":"81438bf69b32c7c11e311b4fe043730cdc7b7ec2","modified":1650012001768},{"_id":"public/live2d_models/tsumiki/assets/tsumiki.model.json","hash":"3d5d18ccaf9dc5d4bb42e1c6c3a3d8d89b55524b","modified":1650012001768},{"_id":"public/live2d_models/tsumiki/assets/tsumiki.physics.json","hash":"737f5ef200fd8d33b75bf19176dcff311591bd8f","modified":1650012001768},{"_id":"public/live2d_models/unitychan/assets/unitychan.model.json","hash":"6baa976186d98050740e02eadc796036a16f6fa2","modified":1650012001768},{"_id":"public/live2d_models/wanko/assets/wanko.model.json","hash":"b98a8ce54fbcf1606a489f1bc5f26b1a18c82d79","modified":1650012001768},{"_id":"public/live2d_models/unitychan/assets/unitychan.physics.json","hash":"d32ffd9263044d17d46facb5d878ea3683b8023e","modified":1650012001768},{"_id":"public/live2d_models/z16/assets/z16.model.json","hash":"e69f3d2ecc9bf51b3972ad9df8f6aaa31956910c","modified":1650012001768},{"_id":"public/live2d_models/z16/assets/z16.physics.json","hash":"67f13f60030d7e4c7f824c001ab5254ce4b9bafd","modified":1650012001768},{"_id":"public/live2d_models/epsilon2_1/assets/exp/f01.exp.json","hash":"84073a497ddb6e56c6cfc244a0fb217ba473abf9","modified":1650012001768},{"_id":"public/plugins/ribbon.js/demo/index.html","hash":"97ff0bb6307330d15d81075eba56bd85eb589905","modified":1650012001768},{"_id":"public/live2d_models/epsilon2_1/assets/exp/f02.exp.json","hash":"fb553024b5a62d0a54ba32c40b5d12598dc434e7","modified":1650012001768},{"_id":"public/live2d_models/epsilon2_1/assets/exp/f03.exp.json","hash":"02d1ac5b6d9019a1ee89b9d4d82894458deae35d","modified":1650012001768},{"_id":"public/live2d_models/epsilon2_1/assets/exp/f04.exp.json","hash":"05dccc2eab9b9d019af1a9cc6f748276376dd828","modified":1650012001768},{"_id":"public/live2d_models/epsilon2_1/assets/exp/f05.exp.json","hash":"b53d5e42ca3105b19e5fe5fbf7fe4a6b4ced61f2","modified":1650012001768},{"_id":"public/live2d_models/epsilon2_1/assets/exp/f07.exp.json","hash":"d501ae71f1e36ff7e7834422900c0e84b8de8f28","modified":1650012001768},{"_id":"public/live2d_models/epsilon2_1/assets/exp/f06.exp.json","hash":"0a7f5b3ac25b13d8688b1f529f3279a8342e3c75","modified":1650012001768},{"_id":"public/live2d_models/epsilon2_1/assets/exp/f08.exp.json","hash":"1dbb31e341c9fcc59475bd2594d60648c0c3e51c","modified":1650012001768},{"_id":"public/live2d_models/chitose/assets/exp/f01.exp.json","hash":"84073a497ddb6e56c6cfc244a0fb217ba473abf9","modified":1650012001768},{"_id":"public/live2d_models/chitose/assets/exp/f02.exp.json","hash":"5b3dfc33ba22945adb77efacb9c55efbfd4975f9","modified":1650012001768},{"_id":"public/live2d_models/chitose/assets/exp/f03.exp.json","hash":"a506220e6b908154eea59f4bcfd73e7a457616b6","modified":1650012001768},{"_id":"public/live2d_models/chitose/assets/exp/f05.exp.json","hash":"154b1b33701c61570e8adc5cab977ea3198ade6a","modified":1650012001768},{"_id":"public/live2d_models/chitose/assets/exp/f04.exp.json","hash":"6fee0e4d489e8ca3b7252b9dfc7c25cbe6a6a1e7","modified":1650012001768},{"_id":"public/live2d_models/chitose/assets/exp/f06.exp.json","hash":"f3db49d621e2008b9eb59fba98e10db5dbd19d3d","modified":1650012001768},{"_id":"public/live2d_models/chitose/assets/exp/f07.exp.json","hash":"1ad00a1e4843b5b31b0c43fa292193bb049f6779","modified":1650012001768},{"_id":"public/live2d_models/haru/02/assets/haru02.model.json","hash":"ffed6d4654deeb772e389213f84701940ee0126f","modified":1650012001768},{"_id":"public/live2d_models/haru/02/assets/haru02.pose.json","hash":"4fb902065bd3f309fa0029fe2505424851fd489f","modified":1650012001768},{"_id":"public/live2d_models/haru/02/assets/haru02.physics.json","hash":"490ab4735f5cddca766344468591c0eb90cda1f7","modified":1650012001768},{"_id":"public/live2d_models/haru/01/assets/haru01.model.json","hash":"cab2aac3d697eafa420e8a02b1f52c1f19666ffd","modified":1650012001768},{"_id":"public/live2d_models/haru/01/assets/haru01.physics.json","hash":"490ab4735f5cddca766344468591c0eb90cda1f7","modified":1650012001768},{"_id":"public/live2d_models/haru/01/assets/haru01.pose.json","hash":"4fb902065bd3f309fa0029fe2505424851fd489f","modified":1650012001768},{"_id":"public/live2d_models/hibiki/assets/exp/f01.exp.json","hash":"84073a497ddb6e56c6cfc244a0fb217ba473abf9","modified":1650012001768},{"_id":"public/live2d_models/hibiki/assets/exp/f02.exp.json","hash":"a5f786a8ebce6d2b14efcd4476179ed324c8def6","modified":1650012001768},{"_id":"public/live2d_models/hibiki/assets/exp/f03.exp.json","hash":"b8f958f736acd4eb7433043fbae946487e872f5b","modified":1650012001768},{"_id":"public/live2d_models/hibiki/assets/exp/f04.exp.json","hash":"19fdb5558be54a9ec6d882e2d1780a369bc66b62","modified":1650012001768},{"_id":"public/live2d_models/hibiki/assets/exp/f05.exp.json","hash":"8fdbc6eabb1890bc5953f170f95e4404bd3d62b4","modified":1650012001768},{"_id":"public/live2d_models/izumi/assets/exp/f01.exp.json","hash":"84073a497ddb6e56c6cfc244a0fb217ba473abf9","modified":1650012001768},{"_id":"public/live2d_models/hibiki/assets/exp/f06.exp.json","hash":"b8ee09beda85aff415e6598ecd6573a238e15d18","modified":1650012001768},{"_id":"public/live2d_models/izumi/assets/exp/f02.exp.json","hash":"d4c339f80452528f6cacba3ffe97fbb9e2e4d144","modified":1650012001768},{"_id":"public/live2d_models/izumi/assets/exp/f03.exp.json","hash":"fc1f79f65c09c845f08ee92d237f8cfabe90a3c6","modified":1650012001768},{"_id":"public/live2d_models/izumi/assets/exp/f04.exp.json","hash":"2e4f19882061c1b9bf49537244550cb5c9dd8a18","modified":1650012001768},{"_id":"public/live2d_models/izumi/assets/exp/f05.exp.json","hash":"b0c99350872f614a2a7f60e6479a4799d2d74986","modified":1650012001768},{"_id":"public/live2d_models/izumi/assets/exp/f07.exp.json","hash":"bb8dc60fc59444fee419265e68216bdcc0282b0b","modified":1650012001768},{"_id":"public/live2d_models/izumi/assets/exp/f06.exp.json","hash":"fd90baab724e71a25c8fd1eba2fab97974906374","modified":1650012001768},{"_id":"public/live2d_models/shizuku/assets/exp/f01.exp.json","hash":"84073a497ddb6e56c6cfc244a0fb217ba473abf9","modified":1650012001768},{"_id":"public/live2d_models/shizuku/assets/exp/f02.exp.json","hash":"241b6afafa2e25c6d7a54692a8b5aa060a137ab1","modified":1650012001768},{"_id":"public/live2d_models/shizuku/assets/exp/f04.exp.json","hash":"35e746ede62e7090e7dfb08561d77772f58b4153","modified":1650012001768},{"_id":"public/live2d_models/shizuku/assets/exp/f03.exp.json","hash":"fbf7729e504f14f83f976827fcf62301a6579a34","modified":1650012001768},{"_id":"public/live2d_models/tsumiki/assets/exp/F01.exp.json","hash":"7c0a23a6f3f0a584887be3d3b482ecc7a359306e","modified":1650012001768},{"_id":"public/live2d_models/tsumiki/assets/exp/F02.exp.json","hash":"5e7fffd67c06aee0cdcab0b8f816fd6a125db260","modified":1650012001768},{"_id":"public/live2d_models/tsumiki/assets/exp/F03.exp.json","hash":"ab92d6fd93d152a4739d93cc6a650c36623dcf72","modified":1650012001768},{"_id":"public/live2d_models/tsumiki/assets/exp/F04.exp.json","hash":"19c9ad9d05ea7cb15ccdabeaa14ec84c2763af9c","modified":1650012001768},{"_id":"public/live2d_models/tsumiki/assets/exp/F05.exp.json","hash":"afd807b47a00389374949731dd97087aeeec28d7","modified":1650012001768},{"_id":"public/live2d_models/tsumiki/assets/exp/F07.exp.json","hash":"65441e1c9d27f4af55b45759e3c8407af2b72c3e","modified":1650012001768},{"_id":"public/live2d_models/tsumiki/assets/exp/F06.exp.json","hash":"8dd11423a36822927463c3adfdd629d4126f2205","modified":1650012001768},{"_id":"public/live2d_models/tsumiki/assets/exp/F08.exp.json","hash":"03284527751a22b05336329df15e103fdc7e95ec","modified":1650012001768},{"_id":"public/live2d_models/tsumiki/assets/exp/F09.exp.json","hash":"eb7d53e7617247158e4d538e2e7f1a602cfe21a5","modified":1650012001768},{"_id":"public/live2d_models/tsumiki/assets/exp/F10.exp.json","hash":"61bccc68a43662888862fe46c91f579958097ed9","modified":1650012001768},{"_id":"public/live2d_models/z16/assets/exp/f00.exp.json","hash":"84073a497ddb6e56c6cfc244a0fb217ba473abf9","modified":1650012001768},{"_id":"public/live2d_models/haru/02/assets/exp/f01.exp.json","hash":"84073a497ddb6e56c6cfc244a0fb217ba473abf9","modified":1650012001768},{"_id":"public/live2d_models/haru/02/assets/exp/f03.exp.json","hash":"a65382a1a8d8f7034eac2c811b9f122a8b3f1403","modified":1650012001768},{"_id":"public/live2d_models/haru/02/assets/exp/f02.exp.json","hash":"461fe8077a2289e309ffc7edf561501a7edcce88","modified":1650012001768},{"_id":"public/live2d_models/haru/02/assets/exp/f04.exp.json","hash":"3156286d7e0281e15c637a889aa415eef3224fa7","modified":1650012001768},{"_id":"public/live2d_models/haru/02/assets/exp/f07.exp.json","hash":"d55366c9bcf382e8273cf1803f65cdb8a4a0d336","modified":1650012001768},{"_id":"public/live2d_models/haru/02/assets/exp/f05.exp.json","hash":"1123786fb0bb9c31f7d30cf14b2299f898cdc207","modified":1650012001768},{"_id":"public/live2d_models/haru/02/assets/exp/f08.exp.json","hash":"4a9ba4b11d9797f59c7b043d2b807ed8253f3cc4","modified":1650012001768},{"_id":"public/live2d_models/haru/02/assets/exp/f06.exp.json","hash":"d962889ec7c563d818ddb5ab1e58cd337b5e62db","modified":1650012001768},{"_id":"public/live2d_models/haru/01/assets/exp/f01.exp.json","hash":"84073a497ddb6e56c6cfc244a0fb217ba473abf9","modified":1650012001768},{"_id":"public/live2d_models/haru/01/assets/exp/f02.exp.json","hash":"461fe8077a2289e309ffc7edf561501a7edcce88","modified":1650012001768},{"_id":"public/live2d_models/haru/01/assets/exp/f03.exp.json","hash":"a65382a1a8d8f7034eac2c811b9f122a8b3f1403","modified":1650012001768},{"_id":"public/live2d_models/haru/01/assets/exp/f05.exp.json","hash":"1123786fb0bb9c31f7d30cf14b2299f898cdc207","modified":1650012001768},{"_id":"public/live2d_models/haru/01/assets/exp/f04.exp.json","hash":"3156286d7e0281e15c637a889aa415eef3224fa7","modified":1650012001768},{"_id":"public/live2d_models/haru/01/assets/exp/f06.exp.json","hash":"d962889ec7c563d818ddb5ab1e58cd337b5e62db","modified":1650012001768},{"_id":"public/live2d_models/haru/01/assets/exp/f07.exp.json","hash":"d55366c9bcf382e8273cf1803f65cdb8a4a0d336","modified":1650012001768},{"_id":"public/live2d_models/haru/01/assets/exp/f08.exp.json","hash":"4a9ba4b11d9797f59c7b043d2b807ed8253f3cc4","modified":1650012001768},{"_id":"public/main.a5fda8.css","hash":"d9b152bfe74cc3253e379fb4a336c2e7ace6ed25","modified":1650012001768},{"_id":"public/main.a5fda8.js","hash":"f8fde8b462ec0fbe1e5a231b9bd871241eacdc17","modified":1650012001768},{"_id":"public/slider.27463f.js","hash":"75db7fcc216082f7363c098fe81c3cbd5e3c87de","modified":1650012001768},{"_id":"public/mobile.a2c207.js","hash":"448860f4e30351fada95db9c974e68b372182656","modified":1650012001768},{"_id":"public/gitment/APlayer.min.js","hash":"9f131b6ca3b89e52545a279356b79530bbb52a64","modified":1650012001768},{"_id":"public/lib/jquery-2.1.4.min.js","hash":"43dc554608df885a59ddeece1598c6ace434d747","modified":1650012001768},{"_id":"public/lib/gitment.js","hash":"d1dd326c7b21f36ad78d55c451a1f0bbb13d201c","modified":1650012001768},{"_id":"public/lib/giteement.browser.js","hash":"824925ebd507d6b6fe3005f6c90c64809638456b","modified":1650012001768},{"_id":"public/plugins/TweenMax/TweenMax.min.js","hash":"8598fc6507e8948a0f99a61bb1dc345ecc1e1f6f","modified":1650012001768},{"_id":"public/plugins/live2d-widget.js/L2Dwidget.0.min.js","hash":"3cfe69c7d1bf48ba529e243f3892f7919d57ccc0","modified":1650012001768},{"_id":"public/plugins/live2d-widget.js/L2Dwidget.min.js","hash":"189df71cee9f1273f134fd78114c72c69b5a44c1","modified":1650012001768},{"_id":"public/plugins/live2d-widget.js/L2Dwidget.common.js","hash":"b6a9fa8908ce9b64fe27b632935219eb10fd9283","modified":1650012001768},{"_id":"public/live2d_models/shizuku/assets/snd/pinchOut_00.mp3","hash":"0654f38f6e9fd623eaf8be11b5d58c9d12991949","modified":1650012001768},{"_id":"public/live2d_models/shizuku/assets/snd/pinchOut_02.mp3","hash":"554edb2f3838cbdc27d1a9c6b8a9cb6eb465cbdd","modified":1650012001768},{"_id":"public/live2d_models/shizuku/assets/snd/pinchOut_01.mp3","hash":"8a081030fd53c07bffe3edd48f87a371ca77296b","modified":1650012001768},{"_id":"public/live2d_models/shizuku/assets/snd/pinchIn_02.mp3","hash":"5b63e02607571ac601c500995e836e6c861b1c62","modified":1650012001768},{"_id":"public/live2d_models/tsumiki/assets/mtn/tsumiki_m_11.mtn","hash":"63b0adf0414ebad9a3bec91417629d983c546975","modified":1650012001768},{"_id":"public/live2d_models/tsumiki/assets/mtn/tsumiki_m_12.mtn","hash":"b68b20df9b695e0d7ac93a5865097b27c3123f21","modified":1650012001768},{"_id":"public/live2d_models/wanko/assets/moc/wanko.moc","hash":"7b188cd4dcddfe5bdba8ec51a65cb1c21cd2e57a","modified":1650012001768},{"_id":"public/live2d_models/z16/assets/moc/z16.moc","hash":"6b0241e80e94664d694b43ad05333960de2550c1","modified":1650012001768},{"_id":"public/live2d_models/gf/assets/moc/Gantzert_Felixander.2048/texture_04.png","hash":"2c63a9622a875fea1abcdb9ef437b64556090d22","modified":1650012001768},{"_id":"public/live2d_models/nico/assets/moc/nico.2048/texture_00.png","hash":"413695bc00193e587b85c944df11d721192dd9a0","modified":1650012001768},{"_id":"public/live2d_models/nico/assets/moc/nico.2048/texture_02.png","hash":"8e4a632c61506e3cc07d8ba704aa4ec2567fe11b","modified":1650012001768},{"_id":"public/live2d_models/ni-j/assets/moc/ni-j.2048/texture_00.png","hash":"413695bc00193e587b85c944df11d721192dd9a0","modified":1650012001768},{"_id":"public/live2d_models/nietzsche/assets/moc/nietzsche.2048/texture_00.png","hash":"413695bc00193e587b85c944df11d721192dd9a0","modified":1650012001768},{"_id":"public/live2d_models/nietzsche/assets/moc/nietzsche.2048/texture_01.png","hash":"fc5a8b833e1b089808e893158a71b8597161fda0","modified":1650012001768},{"_id":"public/live2d_models/nipsilon/assets/moc/nipsilon.2048/texture_01.png","hash":"413695bc00193e587b85c944df11d721192dd9a0","modified":1650012001768},{"_id":"public/live2d_models/nito/assets/moc/nito.2048/texture_01.png","hash":"413695bc00193e587b85c944df11d721192dd9a0","modified":1650012001768},{"_id":"public/live2d_models/shizuku/assets/moc/shizuku.1024/texture_00.png","hash":"21bdb28b31783e23b26b3aa061e90be4088665aa","modified":1650012001768},{"_id":"public/live2d_models/shizuku/assets/moc/shizuku.1024/texture_03.png","hash":"07f568a2bb8045b6bdff7783fb4daf62c821f9ab","modified":1650012001768},{"_id":"public/live2d_models/shizuku/assets/moc/shizuku.1024/texture_05.png","hash":"0cd00007fb8bff62a2eb08e1d7c43abab8722224","modified":1650012001768},{"_id":"public/live2d_models/wanko/assets/moc/wanko.1024/texture_00.png","hash":"c405c1eeb82bcced7aa7a20f04a76168f60ad561","modified":1650012001768},{"_id":"public/live2d_models/haru/02/assets/moc/haru02.1024/texture_01.png","hash":"dd05d6b7f8f0d0c167b040f41ffd7c10a3747d96","modified":1650012001768},{"_id":"public/live2d_models/haru/01/assets/moc/haru01.1024/texture_01.png","hash":"dd05d6b7f8f0d0c167b040f41ffd7c10a3747d96","modified":1650012001768},{"_id":"public/live2d_models/haru/01/assets/moc/haru01.1024/texture_02.png","hash":"6a1e0b336da79557325da9f58a69a380d67ecbb1","modified":1650012001768},{"_id":"public/img/right.jpg","hash":"33492c8491e57358e353324aa8ef618aa00136c9","modified":1650012001768},{"_id":"public/lib/gitment.js.bak2","hash":"abf60c1466261231717cb25faf854ecae9d76b43","modified":1650012001768},{"_id":"public/live2d_models/hibiki/assets/moc/hibiki.moc","hash":"deff9b550df1e2dc47a57f1099e46de6737a0ec6","modified":1650012001768},{"_id":"public/live2d_models/izumi/assets/moc/izumi_illust.moc","hash":"819e029e0d81ed64c59d47fc747026d4bbe637d6","modified":1650012001768},{"_id":"public/live2d_models/hijiki/assets/moc/hijiki.moc","hash":"44289e62545a7046e0f5231103a851750b78524e","modified":1650012001768},{"_id":"public/live2d_models/miku/assets/moc/miku.moc","hash":"a57e92e12f1fcb21d4d3a9ac34f01badbeff3671","modified":1650012001768},{"_id":"public/live2d_models/tororo/assets/moc/tororo.moc","hash":"44289e62545a7046e0f5231103a851750b78524e","modified":1650012001768},{"_id":"public/live2d_models/unitychan/assets/moc/unitychan.moc","hash":"94047b7bb9a99f43ab4dbe5b013a8fb9de854086","modified":1650012001768},{"_id":"public/live2d_models/gf/assets/moc/Gantzert_Felixander.2048/texture_03.png","hash":"80f11d03197912296cd27ce7f59f490336396309","modified":1650012001768},{"_id":"public/live2d_models/gf/assets/moc/Gantzert_Felixander.2048/texture_06.png","hash":"e04b38575cb49bf538d98d0bcc642be4eaf89f73","modified":1650012001768},{"_id":"public/live2d_models/ni-j/assets/moc/ni-j.2048/texture_01.png","hash":"f868cb3bffe97108ef677c43659a6ad7f6a906b2","modified":1650012001768},{"_id":"public/live2d_models/shizuku/assets/moc/shizuku.1024/texture_04.png","hash":"f764d594841905db8b2998dd61c329866125ad97","modified":1650012001768},{"_id":"public/live2d_models/shizuku/assets/moc/shizuku.1024/texture_01.png","hash":"3d0e745f3e560071ee08beeecde186e5ea35d99e","modified":1650012001768},{"_id":"public/live2d_models/unitychan/assets/moc/unitychan.2048/texture_00.png","hash":"2268ef1522ce750bb63f59a6bd1022c8c531e307","modified":1650012001768},{"_id":"public/live2d_models/z16/assets/moc/z16.1024/texture_00.png","hash":"c4f7c067d7d37601490554438ab801fce1feb92d","modified":1650012001768},{"_id":"public/live2d_models/haru/02/assets/moc/haru02.1024/texture_02.png","hash":"df02ff8355fca1389bbed5153dc1dadd8cd1c704","modified":1650012001768},{"_id":"public/live2d_models/chitose/assets/moc/chitose.moc","hash":"7e328a496119887e4caaaa5b81adb3aacb0dac19","modified":1650012001768},{"_id":"public/live2d_models/haruto/assets/moc/haruto.moc","hash":"57bec0b245b49ea941d61ba3dee671f20441afae","modified":1650012001768},{"_id":"public/live2d_models/koharu/assets/moc/koharu.moc","hash":"5eec3fba21444dd6f774b913510b5955e2c0605b","modified":1650012001768},{"_id":"public/live2d_models/ni-j/assets/moc/ni-j.moc","hash":"d846e2c4a4db0f003f2eda466f64cf2165e39ad8","modified":1650012001768},{"_id":"public/live2d_models/nietzsche/assets/moc/nietzsche.moc","hash":"63e70620e9eee593dbb77b26209ad64afa82f571","modified":1650012001768},{"_id":"public/live2d_models/nipsilon/assets/moc/nipsilon.moc","hash":"77ea4fba30cd6f056d1175654a8c950523cdf37e","modified":1650012001768},{"_id":"public/live2d_models/nito/assets/moc/nito.moc","hash":"aae6ab7a4687b166b30fb3bbfb1de5e91a5641e4","modified":1650012001768},{"_id":"public/live2d_models/gf/assets/moc/Gantzert_Felixander.2048/texture_05.png","hash":"e6b2987797dbcf113879024df919aa716ded9d4e","modified":1650012001768},{"_id":"public/live2d_models/haru/02/assets/moc/haru02.moc","hash":"748cf01b45bebb3b217d6363f9d5ff81ab942787","modified":1650012001768},{"_id":"public/live2d_models/haru/01/assets/moc/haru01.moc","hash":"d2223b555b3bdbbd955301c4c5bcbe7ebe19bec1","modified":1650012001768},{"_id":"public/live2d_models/haruto/assets/moc/haruto.2048/texture_00.png","hash":"62b970aa1480a1c18bdc4e74e297f2a1b34ca9fa","modified":1650012001768},{"_id":"public/live2d_models/hibiki/assets/moc/hibiki.2048/texture_00.png","hash":"91349297cc411865cf5605a998b68a97fe67eec5","modified":1650012001768},{"_id":"public/live2d_models/nico/assets/moc/nico.2048/texture_01.png","hash":"9a19b242b9309624de1e43703b240c1c72bf2205","modified":1650012001768},{"_id":"public/live2d_models/hijiki/assets/moc/hijiki.2048/texture_00.png","hash":"66464e0d96439695b5542c5e2f5be60739c29999","modified":1650012001768},{"_id":"public/live2d_models/nietzsche/assets/moc/nietzsche.2048/texture_02.png","hash":"9abe0e1b8fe05ad4c678f17fd0f47a064f98908d","modified":1650012001768},{"_id":"public/live2d_models/nipsilon/assets/moc/nipsilon.2048/texture_00.png","hash":"8ea2e684b826d4a8548b237ab86b3bb701ca8d5b","modified":1650012001768},{"_id":"public/live2d_models/nito/assets/moc/nito.2048/texture_00.png","hash":"8ea2e684b826d4a8548b237ab86b3bb701ca8d5b","modified":1650012001768},{"_id":"public/live2d_models/shizuku/assets/moc/shizuku.1024/texture_02.png","hash":"055eb2da9c13e9116be93a1e60c0ea2b660af864","modified":1650012001768},{"_id":"public/live2d_models/tsumiki/assets/moc/tsumiki.2048/texture_01.png","hash":"ffbb082160de6e3bb664b1a4e16b503a80b549c2","modified":1650012001768},{"_id":"public/live2d_models/tsumiki/assets/moc/tsumiki.moc","hash":"cc023058ae61f70acf7580c4e2352b84eaf1a7b9","modified":1650012001768},{"_id":"public/live2d_models/koharu/assets/moc/koharu.2048/texture_00.png","hash":"0879b61b745084781722636bba9f278f31ce5fc1","modified":1650012001768},{"_id":"public/live2d_models/tororo/assets/moc/tororo.2048/texture_00.png","hash":"98af764b541083e87fc2f8e85f02d2db38c898cc","modified":1650012001768},{"_id":"public/live2d_models/tsumiki/assets/moc/tsumiki.2048/texture_00.png","hash":"0316bc67bc2bde4017530989f34d62981ed88ab5","modified":1650012001768},{"_id":"public/live2d_models/nico/assets/moc/nico.moc","hash":"371b0d972aca62a2b67d32398be091d792f0b3cb","modified":1650012001768},{"_id":"public/live2d_models/epsilon2_1/assets/moc/Epsilon2.1.2048/texture_00.png","hash":"5a245b4c78e6ebaad4d50e47361d1fada208ae5f","modified":1650012001768},{"_id":"public/live2d_models/nipsilon/assets/moc/nipsilon.2048/texture_02.png","hash":"8052842f4b880ce16a01703a128d8881f63f8543","modified":1650012001768},{"_id":"public/live2d_models/gf/assets/moc/Gantzert_Felixander.2048/texture_02.png","hash":"1c2cf2502769b3a359c121823f9ecdb114063288","modified":1650012001768},{"_id":"public/plugins/live2d-widget.js/L2Dwidget.0.min.js.map","hash":"3b3a7076b747b092d6e48f42a8a3497aa21280ee","modified":1650012001768},{"_id":"public/live2d_models/izumi/assets/moc/izumi_illust.1024/texture_01.png","hash":"274627b4750bac66b29a9c19a939aca1655b1d27","modified":1650012001768},{"_id":"public/plugins/live2d-widget.js/L2Dwidget.common.js.map","hash":"8de60ae490ab3d62c91c8ce60a256079b6afd3d8","modified":1650012001768},{"_id":"public/live2d_models/gf/assets/moc/Gantzert_Felixander.2048/texture_00.png","hash":"ff5b30d94adfcca1e5b77a3b7d3d75d750707d83","modified":1650012001768},{"_id":"public/live2d_models/gf/assets/moc/Gantzert_Felixander.2048/texture_01.png","hash":"da2a0785207727ba87a30ed6853dafd9978eb7b4","modified":1650012001768},{"_id":"public/live2d_models/izumi/assets/moc/izumi_illust.1024/texture_02.png","hash":"4b45fb19ee5b662678692132feae93119ff56d08","modified":1650012001768},{"_id":"public/live2d_models/shizuku/assets/moc/shizuku.moc","hash":"c2670a0f75830edc89d7fe6d074de4ee67e8dc5d","modified":1650012001768},{"_id":"public/img/avatar.gif","hash":"8cd3d4043675696e5ede0071d2505c355dcaca7c","modified":1650012001768},{"_id":"public/live2d_models/izumi/assets/moc/izumi_illust.1024/texture_00.png","hash":"bfcecfa399b328ac15eba45f2b6b3b18d50f2daf","modified":1650012001768},{"_id":"public/live2d_models/izumi/assets/moc/izumi_illust.1024/texture_03.png","hash":"84005d6e75ed9db0f531b6e5e0d6d541da796b04","modified":1650012001768},{"_id":"public/live2d_models/miku/assets/moc/miku.2048/texture_00.png","hash":"26fe101720ab8e55fb62c87b563d0dbb903c5eaf","modified":1650012001768},{"_id":"public/live2d_models/gf/assets/moc/Gantzert_Felixander.moc","hash":"67d418af2db593b0b6f318e95f49d4370515c8f0","modified":1650012001768},{"_id":"public/live2d_models/chitose/assets/moc/chitose.2048/texture_00.png","hash":"505dbba0bec5d7fda0cead773caa540a0158a610","modified":1650012001768},{"_id":"source/_posts/QDir.md","hash":"cdd06c098d71fb3d5b0652262233113bc0eeb879","modified":1650525322870},{"_id":"public/2022/04/15/QDir/index.html","hash":"25e8d4bac69c1a5669c8547dd9e456d350ae8336","modified":1650524782329},{"_id":"source/_posts/QButtonGroup简单使用.md","hash":"80b5e41ec437f1d20c0e8c39caafb99f7baaa670","modified":1650525527126},{"_id":"public/2022/04/21/QDir/index.html","hash":"31b4452c71df9ed55ae738ceb499badcbe383096","modified":1650525333978},{"_id":"public/2022/04/21/QButtonGroup简单使用/index.html","hash":"76e6c3e4dd6c82d3c0b38ec5be008ab65ee446f3","modified":1650525558104},{"_id":"public/archives/page/2/index.html","hash":"8f0a6a3f85bae3647346921535f5ade8a5d99cc0","modified":1652860426136},{"_id":"themes/yilia/layout/_partial/pagination.swig","hash":"a24926f9c82c4ff945c1315d7783dfdad148305c","modified":1652859935154}],"Category":[],"Data":[],"Page":[{"title":"文章分类","date":"2021-09-04T11:46:27.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 文章分类\ndate: 2021-09-04 19:46:27\ntype: \"categories\"\ncomments: false\n---","updated":"2021-09-04T11:47:05.743Z","path":"categories/index.html","layout":"page","_id":"cl206jlhm0000pkvng92u90ix","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"QLabel上画图片","date":"2022-04-14T16:00:00.000Z","top":1,"_content":"QLabel上画图片\n<!--more-->\n\n```c++\nQString picture = \"../white.bmp\";\nQLabel *label = new QLabel();\nQImage* image=new QImage();\nif(!(image->load(picture))) //加载图像\n{\n    qDebug()<<\"打开图片失败\";\n    delete image;\n    return;\n}\nQSize LabelSize=ui->label->size();//要显示图片的label的大小\nQImage imageNew = image->scaled(LabelSize,Qt::KeepAspectRatio);//重新调整图像大小以适应窗口\nui->label->setPixmap(QPixmap::fromImage(imageNew));\n```","source":"_posts/QLabel上画图片.md","raw":"---\ntitle: QLabel上画图片\ndate: 2022-4-15\ntop: 1\ntags:\n\tqt/c++\n---\nQLabel上画图片\n<!--more-->\n\n```c++\nQString picture = \"../white.bmp\";\nQLabel *label = new QLabel();\nQImage* image=new QImage();\nif(!(image->load(picture))) //加载图像\n{\n    qDebug()<<\"打开图片失败\";\n    delete image;\n    return;\n}\nQSize LabelSize=ui->label->size();//要显示图片的label的大小\nQImage imageNew = image->scaled(LabelSize,Qt::KeepAspectRatio);//重新调整图像大小以适应窗口\nui->label->setPixmap(QPixmap::fromImage(imageNew));\n```","slug":"QLabel上画图片","published":1,"updated":"2022-04-15T08:37:14.879Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl206jlhp0001pkvncyt8942l","content":"<p>QLabel上画图片</p>\n<span id=\"more\"></span>\n\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">QString picture = <span class=\"string\">&quot;../white.bmp&quot;</span>;</span><br><span class=\"line\">QLabel *label = <span class=\"keyword\">new</span> <span class=\"built_in\">QLabel</span>();</span><br><span class=\"line\">QImage* image=<span class=\"keyword\">new</span> <span class=\"built_in\">QImage</span>();</span><br><span class=\"line\"><span class=\"keyword\">if</span>(!(image-&gt;<span class=\"built_in\">load</span>(picture))) <span class=\"comment\">//加载图像</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">qDebug</span>()&lt;&lt;<span class=\"string\">&quot;打开图片失败&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">delete</span> image;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">QSize LabelSize=ui-&gt;label-&gt;<span class=\"built_in\">size</span>();<span class=\"comment\">//要显示图片的label的大小</span></span><br><span class=\"line\">QImage imageNew = image-&gt;<span class=\"built_in\">scaled</span>(LabelSize,Qt::KeepAspectRatio);<span class=\"comment\">//重新调整图像大小以适应窗口</span></span><br><span class=\"line\">ui-&gt;label-&gt;<span class=\"built_in\">setPixmap</span>(QPixmap::<span class=\"built_in\">fromImage</span>(imageNew));</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>QLabel上画图片</p>","more":"<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">QString picture = <span class=\"string\">&quot;../white.bmp&quot;</span>;</span><br><span class=\"line\">QLabel *label = <span class=\"keyword\">new</span> <span class=\"built_in\">QLabel</span>();</span><br><span class=\"line\">QImage* image=<span class=\"keyword\">new</span> <span class=\"built_in\">QImage</span>();</span><br><span class=\"line\"><span class=\"keyword\">if</span>(!(image-&gt;<span class=\"built_in\">load</span>(picture))) <span class=\"comment\">//加载图像</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">qDebug</span>()&lt;&lt;<span class=\"string\">&quot;打开图片失败&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">delete</span> image;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">QSize LabelSize=ui-&gt;label-&gt;<span class=\"built_in\">size</span>();<span class=\"comment\">//要显示图片的label的大小</span></span><br><span class=\"line\">QImage imageNew = image-&gt;<span class=\"built_in\">scaled</span>(LabelSize,Qt::KeepAspectRatio);<span class=\"comment\">//重新调整图像大小以适应窗口</span></span><br><span class=\"line\">ui-&gt;label-&gt;<span class=\"built_in\">setPixmap</span>(QPixmap::<span class=\"built_in\">fromImage</span>(imageNew));</span><br></pre></td></tr></table></figure>"},{"title":"QTableWidget简单应用","date":"2022-04-14T16:00:00.000Z","top":1,"_content":"QTableWidget简单应用\n<!--more-->\n\n```c++\nQTableWidget *FilePageHandle = new QTableWidget();\nint lineCnt = 0;    //初始化行数,不算标题行\nint columnCnt = 6;  //列数\nQStringList columID = {\"图形名称\" , \"时序\" , \"电源\" , \"锁秒(ms)\" , \"AutoLock\", \"功能\"};  //列标题\nui->FilePageHandle->setColumnCount(columnCnt);  //设置列数\nui->FilePageHandle->setRowCount(lineCnt);  //设置行数\nui->FilePageHandle->setHorizontalHeaderLabels(columID);  //写入列标题\nui->FilePageHandle->verticalHeader()->setVisible(false); // 隐藏水平header\nui->FilePageHandle->horizontalHeader()->setVisible(false); //隐藏行表头\nui->FilePageHandle->setSelectionMode(QAbstractItemView::SingleSelection); //设置为选中单个目标\nui->FilePageHandle->setSelectionBehavior(QAbstractItemView::SelectRows); //整行选中的方式\nui->FilePageHandle->setEditTriggers(QAbstractItemView::DoubleClicked);  //修改表格数据方式\n/* 表格样式定制 */\nui->FilePageHandle->setColumnWidth(0,200); //列宽\nui->FilePageHandle->setFont(QFont(\"Helvetica\"));  //设置单元格字体\nui->FilePageHandle->horizontalHeader()->setStretchLastSection(true);  //最后一列设置自适应宽度\nui->FilePageHandle->horizontalHeader()->setFixedHeight(30);//设置表头的高度\nui->FilePageHandle->horizontalHeader()->setStyleSheet(\"QHeaderView::section{background:white;color:black;}\");  //表头颜色\n/* 滑块样式 */\nui->FilePageHandle->horizontalScrollBar()->setStyleSheet(\n\t \"QScrollBar:horizontal{background:#DADADA;height:25px;margin-left:25px;margin-right:25px }\"\n\t \"QScrollBar::handle:horizontal{background:lightgray;min-height:80px;height:25px}\"\n\t \"QScrollBar::sub-line:horizontal{width:25px;subcontrol-position:left;subcontrol-origin:margin;}\"\n\t \"QScrollBar::add-line:horizontal{width:25px;subcontrol-position:right;subcontrol-origin:margin;}\"\n\t );\nui->FilePageHandle->verticalScrollBar()->setStyleSheet(\n\t \"QScrollBar{background:#DADADA;width:25px;margin-top:25px;margin-bottom:25px}\"\n\t \"QScrollBar::handle:vertical{background:lightgray;min-height:80px;width:25px}\"\n\t \"QScrollBar::sub-line:vertical{height:25px;subcontrol-position:top;subcontrol-origin:margin;}\"\n\t \"QScrollBar::add-line:vertical{height:25px;subcontrol-position:bottom;subcontrol-origin:margin;}\"\n\t );\n```\n\n","source":"_posts/QTableWidget.md","raw":"---\ntitle: QTableWidget简单应用\ndate: 2022-4-15\ntop: 1\ntags:\n\tqt/c++\n---\nQTableWidget简单应用\n<!--more-->\n\n```c++\nQTableWidget *FilePageHandle = new QTableWidget();\nint lineCnt = 0;    //初始化行数,不算标题行\nint columnCnt = 6;  //列数\nQStringList columID = {\"图形名称\" , \"时序\" , \"电源\" , \"锁秒(ms)\" , \"AutoLock\", \"功能\"};  //列标题\nui->FilePageHandle->setColumnCount(columnCnt);  //设置列数\nui->FilePageHandle->setRowCount(lineCnt);  //设置行数\nui->FilePageHandle->setHorizontalHeaderLabels(columID);  //写入列标题\nui->FilePageHandle->verticalHeader()->setVisible(false); // 隐藏水平header\nui->FilePageHandle->horizontalHeader()->setVisible(false); //隐藏行表头\nui->FilePageHandle->setSelectionMode(QAbstractItemView::SingleSelection); //设置为选中单个目标\nui->FilePageHandle->setSelectionBehavior(QAbstractItemView::SelectRows); //整行选中的方式\nui->FilePageHandle->setEditTriggers(QAbstractItemView::DoubleClicked);  //修改表格数据方式\n/* 表格样式定制 */\nui->FilePageHandle->setColumnWidth(0,200); //列宽\nui->FilePageHandle->setFont(QFont(\"Helvetica\"));  //设置单元格字体\nui->FilePageHandle->horizontalHeader()->setStretchLastSection(true);  //最后一列设置自适应宽度\nui->FilePageHandle->horizontalHeader()->setFixedHeight(30);//设置表头的高度\nui->FilePageHandle->horizontalHeader()->setStyleSheet(\"QHeaderView::section{background:white;color:black;}\");  //表头颜色\n/* 滑块样式 */\nui->FilePageHandle->horizontalScrollBar()->setStyleSheet(\n\t \"QScrollBar:horizontal{background:#DADADA;height:25px;margin-left:25px;margin-right:25px }\"\n\t \"QScrollBar::handle:horizontal{background:lightgray;min-height:80px;height:25px}\"\n\t \"QScrollBar::sub-line:horizontal{width:25px;subcontrol-position:left;subcontrol-origin:margin;}\"\n\t \"QScrollBar::add-line:horizontal{width:25px;subcontrol-position:right;subcontrol-origin:margin;}\"\n\t );\nui->FilePageHandle->verticalScrollBar()->setStyleSheet(\n\t \"QScrollBar{background:#DADADA;width:25px;margin-top:25px;margin-bottom:25px}\"\n\t \"QScrollBar::handle:vertical{background:lightgray;min-height:80px;width:25px}\"\n\t \"QScrollBar::sub-line:vertical{height:25px;subcontrol-position:top;subcontrol-origin:margin;}\"\n\t \"QScrollBar::add-line:vertical{height:25px;subcontrol-position:bottom;subcontrol-origin:margin;}\"\n\t );\n```\n\n","slug":"QTableWidget","published":1,"updated":"2022-04-15T08:33:51.360Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl206jlhr0002pkvnbx296hcb","content":"<p>QTableWidget简单应用</p>\n<span id=\"more\"></span>\n\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">QTableWidget *FilePageHandle = <span class=\"keyword\">new</span> <span class=\"built_in\">QTableWidget</span>();</span><br><span class=\"line\"><span class=\"keyword\">int</span> lineCnt = <span class=\"number\">0</span>;    <span class=\"comment\">//初始化行数,不算标题行</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> columnCnt = <span class=\"number\">6</span>;  <span class=\"comment\">//列数</span></span><br><span class=\"line\">QStringList columID = &#123;<span class=\"string\">&quot;图形名称&quot;</span> , <span class=\"string\">&quot;时序&quot;</span> , <span class=\"string\">&quot;电源&quot;</span> , <span class=\"string\">&quot;锁秒(ms)&quot;</span> , <span class=\"string\">&quot;AutoLock&quot;</span>, <span class=\"string\">&quot;功能&quot;</span>&#125;;  <span class=\"comment\">//列标题</span></span><br><span class=\"line\">ui-&gt;FilePageHandle-&gt;<span class=\"built_in\">setColumnCount</span>(columnCnt);  <span class=\"comment\">//设置列数</span></span><br><span class=\"line\">ui-&gt;FilePageHandle-&gt;<span class=\"built_in\">setRowCount</span>(lineCnt);  <span class=\"comment\">//设置行数</span></span><br><span class=\"line\">ui-&gt;FilePageHandle-&gt;<span class=\"built_in\">setHorizontalHeaderLabels</span>(columID);  <span class=\"comment\">//写入列标题</span></span><br><span class=\"line\">ui-&gt;FilePageHandle-&gt;<span class=\"built_in\">verticalHeader</span>()-&gt;<span class=\"built_in\">setVisible</span>(<span class=\"literal\">false</span>); <span class=\"comment\">// 隐藏水平header</span></span><br><span class=\"line\">ui-&gt;FilePageHandle-&gt;<span class=\"built_in\">horizontalHeader</span>()-&gt;<span class=\"built_in\">setVisible</span>(<span class=\"literal\">false</span>); <span class=\"comment\">//隐藏行表头</span></span><br><span class=\"line\">ui-&gt;FilePageHandle-&gt;<span class=\"built_in\">setSelectionMode</span>(QAbstractItemView::SingleSelection); <span class=\"comment\">//设置为选中单个目标</span></span><br><span class=\"line\">ui-&gt;FilePageHandle-&gt;<span class=\"built_in\">setSelectionBehavior</span>(QAbstractItemView::SelectRows); <span class=\"comment\">//整行选中的方式</span></span><br><span class=\"line\">ui-&gt;FilePageHandle-&gt;<span class=\"built_in\">setEditTriggers</span>(QAbstractItemView::DoubleClicked);  <span class=\"comment\">//修改表格数据方式</span></span><br><span class=\"line\"><span class=\"comment\">/* 表格样式定制 */</span></span><br><span class=\"line\">ui-&gt;FilePageHandle-&gt;<span class=\"built_in\">setColumnWidth</span>(<span class=\"number\">0</span>,<span class=\"number\">200</span>); <span class=\"comment\">//列宽</span></span><br><span class=\"line\">ui-&gt;FilePageHandle-&gt;<span class=\"built_in\">setFont</span>(<span class=\"built_in\">QFont</span>(<span class=\"string\">&quot;Helvetica&quot;</span>));  <span class=\"comment\">//设置单元格字体</span></span><br><span class=\"line\">ui-&gt;FilePageHandle-&gt;<span class=\"built_in\">horizontalHeader</span>()-&gt;<span class=\"built_in\">setStretchLastSection</span>(<span class=\"literal\">true</span>);  <span class=\"comment\">//最后一列设置自适应宽度</span></span><br><span class=\"line\">ui-&gt;FilePageHandle-&gt;<span class=\"built_in\">horizontalHeader</span>()-&gt;<span class=\"built_in\">setFixedHeight</span>(<span class=\"number\">30</span>);<span class=\"comment\">//设置表头的高度</span></span><br><span class=\"line\">ui-&gt;FilePageHandle-&gt;<span class=\"built_in\">horizontalHeader</span>()-&gt;<span class=\"built_in\">setStyleSheet</span>(<span class=\"string\">&quot;QHeaderView::section&#123;background:white;color:black;&#125;&quot;</span>);  <span class=\"comment\">//表头颜色</span></span><br><span class=\"line\"><span class=\"comment\">/* 滑块样式 */</span></span><br><span class=\"line\">ui-&gt;FilePageHandle-&gt;<span class=\"built_in\">horizontalScrollBar</span>()-&gt;<span class=\"built_in\">setStyleSheet</span>(</span><br><span class=\"line\">\t <span class=\"string\">&quot;QScrollBar:horizontal&#123;background:#DADADA;height:25px;margin-left:25px;margin-right:25px &#125;&quot;</span></span><br><span class=\"line\">\t <span class=\"string\">&quot;QScrollBar::handle:horizontal&#123;background:lightgray;min-height:80px;height:25px&#125;&quot;</span></span><br><span class=\"line\">\t <span class=\"string\">&quot;QScrollBar::sub-line:horizontal&#123;width:25px;subcontrol-position:left;subcontrol-origin:margin;&#125;&quot;</span></span><br><span class=\"line\">\t <span class=\"string\">&quot;QScrollBar::add-line:horizontal&#123;width:25px;subcontrol-position:right;subcontrol-origin:margin;&#125;&quot;</span></span><br><span class=\"line\">\t );</span><br><span class=\"line\">ui-&gt;FilePageHandle-&gt;<span class=\"built_in\">verticalScrollBar</span>()-&gt;<span class=\"built_in\">setStyleSheet</span>(</span><br><span class=\"line\">\t <span class=\"string\">&quot;QScrollBar&#123;background:#DADADA;width:25px;margin-top:25px;margin-bottom:25px&#125;&quot;</span></span><br><span class=\"line\">\t <span class=\"string\">&quot;QScrollBar::handle:vertical&#123;background:lightgray;min-height:80px;width:25px&#125;&quot;</span></span><br><span class=\"line\">\t <span class=\"string\">&quot;QScrollBar::sub-line:vertical&#123;height:25px;subcontrol-position:top;subcontrol-origin:margin;&#125;&quot;</span></span><br><span class=\"line\">\t <span class=\"string\">&quot;QScrollBar::add-line:vertical&#123;height:25px;subcontrol-position:bottom;subcontrol-origin:margin;&#125;&quot;</span></span><br><span class=\"line\">\t );</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"<p>QTableWidget简单应用</p>","more":"<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">QTableWidget *FilePageHandle = <span class=\"keyword\">new</span> <span class=\"built_in\">QTableWidget</span>();</span><br><span class=\"line\"><span class=\"keyword\">int</span> lineCnt = <span class=\"number\">0</span>;    <span class=\"comment\">//初始化行数,不算标题行</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> columnCnt = <span class=\"number\">6</span>;  <span class=\"comment\">//列数</span></span><br><span class=\"line\">QStringList columID = &#123;<span class=\"string\">&quot;图形名称&quot;</span> , <span class=\"string\">&quot;时序&quot;</span> , <span class=\"string\">&quot;电源&quot;</span> , <span class=\"string\">&quot;锁秒(ms)&quot;</span> , <span class=\"string\">&quot;AutoLock&quot;</span>, <span class=\"string\">&quot;功能&quot;</span>&#125;;  <span class=\"comment\">//列标题</span></span><br><span class=\"line\">ui-&gt;FilePageHandle-&gt;<span class=\"built_in\">setColumnCount</span>(columnCnt);  <span class=\"comment\">//设置列数</span></span><br><span class=\"line\">ui-&gt;FilePageHandle-&gt;<span class=\"built_in\">setRowCount</span>(lineCnt);  <span class=\"comment\">//设置行数</span></span><br><span class=\"line\">ui-&gt;FilePageHandle-&gt;<span class=\"built_in\">setHorizontalHeaderLabels</span>(columID);  <span class=\"comment\">//写入列标题</span></span><br><span class=\"line\">ui-&gt;FilePageHandle-&gt;<span class=\"built_in\">verticalHeader</span>()-&gt;<span class=\"built_in\">setVisible</span>(<span class=\"literal\">false</span>); <span class=\"comment\">// 隐藏水平header</span></span><br><span class=\"line\">ui-&gt;FilePageHandle-&gt;<span class=\"built_in\">horizontalHeader</span>()-&gt;<span class=\"built_in\">setVisible</span>(<span class=\"literal\">false</span>); <span class=\"comment\">//隐藏行表头</span></span><br><span class=\"line\">ui-&gt;FilePageHandle-&gt;<span class=\"built_in\">setSelectionMode</span>(QAbstractItemView::SingleSelection); <span class=\"comment\">//设置为选中单个目标</span></span><br><span class=\"line\">ui-&gt;FilePageHandle-&gt;<span class=\"built_in\">setSelectionBehavior</span>(QAbstractItemView::SelectRows); <span class=\"comment\">//整行选中的方式</span></span><br><span class=\"line\">ui-&gt;FilePageHandle-&gt;<span class=\"built_in\">setEditTriggers</span>(QAbstractItemView::DoubleClicked);  <span class=\"comment\">//修改表格数据方式</span></span><br><span class=\"line\"><span class=\"comment\">/* 表格样式定制 */</span></span><br><span class=\"line\">ui-&gt;FilePageHandle-&gt;<span class=\"built_in\">setColumnWidth</span>(<span class=\"number\">0</span>,<span class=\"number\">200</span>); <span class=\"comment\">//列宽</span></span><br><span class=\"line\">ui-&gt;FilePageHandle-&gt;<span class=\"built_in\">setFont</span>(<span class=\"built_in\">QFont</span>(<span class=\"string\">&quot;Helvetica&quot;</span>));  <span class=\"comment\">//设置单元格字体</span></span><br><span class=\"line\">ui-&gt;FilePageHandle-&gt;<span class=\"built_in\">horizontalHeader</span>()-&gt;<span class=\"built_in\">setStretchLastSection</span>(<span class=\"literal\">true</span>);  <span class=\"comment\">//最后一列设置自适应宽度</span></span><br><span class=\"line\">ui-&gt;FilePageHandle-&gt;<span class=\"built_in\">horizontalHeader</span>()-&gt;<span class=\"built_in\">setFixedHeight</span>(<span class=\"number\">30</span>);<span class=\"comment\">//设置表头的高度</span></span><br><span class=\"line\">ui-&gt;FilePageHandle-&gt;<span class=\"built_in\">horizontalHeader</span>()-&gt;<span class=\"built_in\">setStyleSheet</span>(<span class=\"string\">&quot;QHeaderView::section&#123;background:white;color:black;&#125;&quot;</span>);  <span class=\"comment\">//表头颜色</span></span><br><span class=\"line\"><span class=\"comment\">/* 滑块样式 */</span></span><br><span class=\"line\">ui-&gt;FilePageHandle-&gt;<span class=\"built_in\">horizontalScrollBar</span>()-&gt;<span class=\"built_in\">setStyleSheet</span>(</span><br><span class=\"line\">\t <span class=\"string\">&quot;QScrollBar:horizontal&#123;background:#DADADA;height:25px;margin-left:25px;margin-right:25px &#125;&quot;</span></span><br><span class=\"line\">\t <span class=\"string\">&quot;QScrollBar::handle:horizontal&#123;background:lightgray;min-height:80px;height:25px&#125;&quot;</span></span><br><span class=\"line\">\t <span class=\"string\">&quot;QScrollBar::sub-line:horizontal&#123;width:25px;subcontrol-position:left;subcontrol-origin:margin;&#125;&quot;</span></span><br><span class=\"line\">\t <span class=\"string\">&quot;QScrollBar::add-line:horizontal&#123;width:25px;subcontrol-position:right;subcontrol-origin:margin;&#125;&quot;</span></span><br><span class=\"line\">\t );</span><br><span class=\"line\">ui-&gt;FilePageHandle-&gt;<span class=\"built_in\">verticalScrollBar</span>()-&gt;<span class=\"built_in\">setStyleSheet</span>(</span><br><span class=\"line\">\t <span class=\"string\">&quot;QScrollBar&#123;background:#DADADA;width:25px;margin-top:25px;margin-bottom:25px&#125;&quot;</span></span><br><span class=\"line\">\t <span class=\"string\">&quot;QScrollBar::handle:vertical&#123;background:lightgray;min-height:80px;width:25px&#125;&quot;</span></span><br><span class=\"line\">\t <span class=\"string\">&quot;QScrollBar::sub-line:vertical&#123;height:25px;subcontrol-position:top;subcontrol-origin:margin;&#125;&quot;</span></span><br><span class=\"line\">\t <span class=\"string\">&quot;QScrollBar::add-line:vertical&#123;height:25px;subcontrol-position:bottom;subcontrol-origin:margin;&#125;&quot;</span></span><br><span class=\"line\">\t );</span><br></pre></td></tr></table></figure>"},{"title":"QTableWidget单元格插入控件","date":"2022-04-14T16:00:00.000Z","top":1,"_content":"QTableWidget单元格插入控件\n<!--more-->\n\n以插入QCheckBox为例:\n```c++\nQTableWidget *FilePageHandle = new QTableWidget();\nQCheckBox *lockCheck = new QCheckBox(); \n//加入布局\nQWidget *widget = new QWidget();;\nQHBoxLayout *hLayout = new QHBoxLayout();;\nhLayout->addWidget(lockCheck);\nhLayout->setMargin(0); // 必须添加, 否则CheckBox不能正常显示\nhLayout->setAlignment(lockCheck, Qt::AlignCenter);\nwidget->setLayout(hLayout);  \nui->FilePageHandle->setCellWidget(0,1-1,widget);  //0行1列插入QCheckBox\n```","source":"_posts/QTableWidget单元格插入控件.md","raw":"---\ntitle: QTableWidget单元格插入控件\ndate: 2022-4-15\ntop: 1\ntags:\n\tqt/c++\n---\nQTableWidget单元格插入控件\n<!--more-->\n\n以插入QCheckBox为例:\n```c++\nQTableWidget *FilePageHandle = new QTableWidget();\nQCheckBox *lockCheck = new QCheckBox(); \n//加入布局\nQWidget *widget = new QWidget();;\nQHBoxLayout *hLayout = new QHBoxLayout();;\nhLayout->addWidget(lockCheck);\nhLayout->setMargin(0); // 必须添加, 否则CheckBox不能正常显示\nhLayout->setAlignment(lockCheck, Qt::AlignCenter);\nwidget->setLayout(hLayout);  \nui->FilePageHandle->setCellWidget(0,1-1,widget);  //0行1列插入QCheckBox\n```","slug":"QTableWidget单元格插入控件","published":1,"updated":"2022-04-15T08:36:38.279Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl206jlht0004pkvncyy9a6hv","content":"<p>QTableWidget单元格插入控件</p>\n<span id=\"more\"></span>\n\n<p>以插入QCheckBox为例:</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">QTableWidget *FilePageHandle = <span class=\"keyword\">new</span> <span class=\"built_in\">QTableWidget</span>();</span><br><span class=\"line\">QCheckBox *lockCheck = <span class=\"keyword\">new</span> <span class=\"built_in\">QCheckBox</span>(); </span><br><span class=\"line\"><span class=\"comment\">//加入布局</span></span><br><span class=\"line\">QWidget *widget = <span class=\"keyword\">new</span> <span class=\"built_in\">QWidget</span>();;</span><br><span class=\"line\">QHBoxLayout *hLayout = <span class=\"keyword\">new</span> <span class=\"built_in\">QHBoxLayout</span>();;</span><br><span class=\"line\">hLayout-&gt;<span class=\"built_in\">addWidget</span>(lockCheck);</span><br><span class=\"line\">hLayout-&gt;<span class=\"built_in\">setMargin</span>(<span class=\"number\">0</span>); <span class=\"comment\">// 必须添加, 否则CheckBox不能正常显示</span></span><br><span class=\"line\">hLayout-&gt;<span class=\"built_in\">setAlignment</span>(lockCheck, Qt::AlignCenter);</span><br><span class=\"line\">widget-&gt;<span class=\"built_in\">setLayout</span>(hLayout);  </span><br><span class=\"line\">ui-&gt;FilePageHandle-&gt;<span class=\"built_in\">setCellWidget</span>(<span class=\"number\">0</span>,<span class=\"number\">1</span><span class=\"number\">-1</span>,widget);  <span class=\"comment\">//0行1列插入QCheckBox</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>QTableWidget单元格插入控件</p>","more":"<p>以插入QCheckBox为例:</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">QTableWidget *FilePageHandle = <span class=\"keyword\">new</span> <span class=\"built_in\">QTableWidget</span>();</span><br><span class=\"line\">QCheckBox *lockCheck = <span class=\"keyword\">new</span> <span class=\"built_in\">QCheckBox</span>(); </span><br><span class=\"line\"><span class=\"comment\">//加入布局</span></span><br><span class=\"line\">QWidget *widget = <span class=\"keyword\">new</span> <span class=\"built_in\">QWidget</span>();;</span><br><span class=\"line\">QHBoxLayout *hLayout = <span class=\"keyword\">new</span> <span class=\"built_in\">QHBoxLayout</span>();;</span><br><span class=\"line\">hLayout-&gt;<span class=\"built_in\">addWidget</span>(lockCheck);</span><br><span class=\"line\">hLayout-&gt;<span class=\"built_in\">setMargin</span>(<span class=\"number\">0</span>); <span class=\"comment\">// 必须添加, 否则CheckBox不能正常显示</span></span><br><span class=\"line\">hLayout-&gt;<span class=\"built_in\">setAlignment</span>(lockCheck, Qt::AlignCenter);</span><br><span class=\"line\">widget-&gt;<span class=\"built_in\">setLayout</span>(hLayout);  </span><br><span class=\"line\">ui-&gt;FilePageHandle-&gt;<span class=\"built_in\">setCellWidget</span>(<span class=\"number\">0</span>,<span class=\"number\">1</span><span class=\"number\">-1</span>,widget);  <span class=\"comment\">//0行1列插入QCheckBox</span></span><br></pre></td></tr></table></figure>"},{"title":"Hello","date":"2021-09-01T16:00:00.000Z","_content":"\nWelcome 小桥流水的博客！","source":"_posts/hello-world.md","raw":"---\ntitle: Hello\ndate: 2021-9-2  \n---\n\nWelcome 小桥流水的博客！","slug":"hello-world","published":1,"updated":"2021-09-04T12:52:09.299Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl206jlhu0005pkvn6ogdbqh2","content":"<p>Welcome 小桥流水的博客！</p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome 小桥流水的博客！</p>\n"},{"title":"c/c++面经","date":"2021-09-03T16:00:00.000Z","top":1,"_content":"c/c++面经\n<!--more-->\n\n# 1. **在main执行之前和之后执行的代码可能是什么？**\nmain执行之前：主要是初始化系统相关资源\n+ 设置栈指针；\n+ 初始化静态static变量和global全局变量,即.data段的内容；\n+ 将未初始化部分的全局变量赋初值：数值型short , int , long等为0 , bool为FALSE ,指针为NULL等等，即.bss段的内容；\n+ 全局对象初始化,在main之前调用构造函数，这是可能会执行前的一些代码；\n+ 将main函数的参数argc, argv等传递给main函数,然后才真正运行main函数；\n+ ***ttribute***(constructor)。 \n\nmain函数执行之后\n+ 全局对象的析构函数会在main函数之后执行；\n+ 可以用atexit注册一个函数,它会在main之后执行；\n+ ***attribute***(destructor)。\n\n# 2. 结构体内存对齐问题？\n- 结构体内成员按照声明顺序存储，第一个成员地址和整个结构体地址相同。\n- 未特殊说明时,按结构体中size最大的成员对齐(若有double成员,按8字节对齐)。\n\n# 3. 指针和引用的区别？\n- 指针是一个变量，存储的是一个地址，引用跟原来的变量实质上是同一个东西,是原变量的别名；\n- 指针可以有多级，引用只有一级；\n- 指针可以为空，引用不能为NULL且在定义时必须初始化；\n- 指针在初始化后可以改变指向，而引用在初始化之后不可再改变；\n- sizeof指针得到的是本指针的大小，sizeof引用得到的是引用所指向变量的大小；\n- 当把指针作为参数进行传递时，也是将实参的一个拷贝传递给形参，两者指向的地址相同,但不是同一个变量，在函数中改变这个变量的指向不影响实参，而引用却可以；\n- 引用只是别名，不占用具体存储空间，只有声明没有定义；指针是具体变量,需要占用存储空间(但这也只是一般情况下,具体情况还要具体分析)；\n- 引用在声明时必须初始化为另一变量，一旦出现必须为typename refname &varname形式；指针声明和定义可以分开，可以先只声明指针变量而不初始化，等用到时再指向具体变量；\n- 引用一旦初始化之后就不可以再改变(变量可以被引用为多次，但引用只能作为一个变量引用)指针变量可以重新指向别的变量；\n- 不存在指向空值的引用，必须有具体实体；但是存在指向空值的指针。\n\n# 4. 堆和栈的区别？\n- 申请方式不同\n\t1. 栈由系统自动分配释放；\n\t2. 堆由程序员手动申请释放。\n- 申请大小限制不同\n    1. 栈顶和栈底是之前预设好的，栈是向栈底扩展，大小固定，可以通过ulimit-a查看，由ulimit-s修改；\n    2. 堆向高地址扩展，是不连续的内存区域，大小可以灵活调整。\n- 申请效率不同\n    1. 栈由系统分配，速度快，不会有碎片；\n    2. 堆由程序员手动分配，速度慢，且会有碎片。\n- 栈空间默认是4M；堆区一般是1-4G。\n\n# 5. 指针？\n- int *p[10]; ：数组指针，是一个数组变量，数组大小为10，组内每个元素都是指向int类型的指针变量；\n- int (*)p[10];：数组指针，是一个指针类型变量，指向的是一个int类型的数组，这个数组的大小是10；\n- int *p(int);：函数声明，函数名是p，参数是int类型的，返回值是int *类型的；\n- int (*p)(int);：函数指针，指向的函数具有int类型参数，并且返回值是int类型的。\n\n# 6. 基类的虚函数表存放在内存的什么区，虚表指针vptr的初始化时间？\n首先整理一下虚函数表的特征：\n- 虚函数表是全局共享的元素,即全局仅有一个,在编译时就构造完成；\n- 虚函数表类似一个数组,类对象中存储vptr指针,指向虚函数表,即虚函数表不是函数,不是程序代码,不可能存储在代码段；\n- 虚函数表存储虚函数的地址,即虚函数表的元素是指向类成员函数的指针,而类中虚函数的个数在编译时期可以确定,即虚函数表的大小可以确定,即大小是在编译时期确定的,不必动态分配内存空间存储虚函数表,所以不在堆中。\n- 根据以上特征,虚函数表类似于类中静态成员变量静态成员变量也是全局共享,大小确定,因此最有可能存在全局数据区,测试结果显示：\n1. 虚函数表vtable在Linux/Unix中存放在可执行文件的只读数据段中(rodata),这与微软的编译器将虚函数表存放在常量段存在一些差别；\n2. 由于虚表指针yptr跟虚函数密不可分,对于有虚函数或者继承于拥有虚函数的基类,对该类进行实例化时,在构造函数执行时会对虚表指针进行初始化,并且存在对象内存布局的最前面。\n一般分为五个区域：栈区、堆区、函数区(存放函数体等二进制代码)、全局静态区、常量区。\n- C++中虚函数表位于只读数据段( .rodata)，也就是C++内存模型中的常量区;而虚函数则位于代码段(.text)，也就是C++内存模型中的代码区。\n\n# 7. **new/delete**与**malloc/free？**\n- 相同点：\n\t1.都可用于内存的动态申请和释放。\n- 不同点：\n\t1.new/delete是c++运算符，malloc/free是c/c++语言标准库函数；\n\t2.new自动计算要分配的空间大小，malloc需要手工计算；\n\t3.new是类型安全的，malloc不是；\n    ```c++\n    int *p = new float[2];  //编译错误\n    int *p = (int *)malloc(2 * sizeof(double)); //编译无错误\n    ```\n\t4.new调用名为operator new的标准库函数分配足够空间并调用相关对象的构造函数，delete堆指针所指对象运行适当的析构函数，然后提供调用名为operator delete的标准库函数释放该对象所用内存，malloc/free无相关调用；\n\t5.malloc/free需要库文件支持，new/delete不需要；\n\t6.new是封装了malloc，直接free不会报错，但只是释放内存，而不会析构对象。\n\n# 8. new和delete的实现？\n- new的实现过程是：首先调用名为operator new的标准库函数，分配足多大的原始为类型化的内存，以保存指定类型的一个对象；接下来运行该类型的一个构造函数，用指定初始化构造对象；最后返回指向新分配井构造后的的对象的指针；\n- delete的实现过程：对指针指向的对象运行适当的析构函数；然后通过调用名为operator delete的标准库函数释放该对象所用内存。\n\n# 9. malloc和new的区别?\n- malloc和free是标准库函数，支持覆盖；new和delete是运算符，并且支持重载；\n- malloc仅仅分配内存空间，free仅仅回收空间，不具备调用构造函数和析构函数功能，用malloc分配空间存储类的对象存在风险；new和delete除了分配回收功能外，还会调用构造函数和析构函数；\n- mallac和free返回的是void类型指针(必须进行类型转换)， new和delete返回的是具体类型指针。\n***delete和delete[]的区别？***\n- delete只会调用一次析构函数；\n- delete[]会调用数组中每个元素的析构函数。\n\n# 10. 宏定义和函数？\n- 宏在编译时完成替换，之后被替换的文本参与编译，相当于直接插入了代码，运行时不存在函数调用，执行起来更快；函数调用在运行时需要跳转到具体函数中调用函数；\n- 宏定义属于在结构中插入代码，没有返回值；函数调用具有返回值；\n- 宏定义参数没有类型，不进行类型检查；函数参数具有类型，需要进行类型检查；\n- 宏定义不需要在最后加分号。\n\n# 11. 宏定义和typedef？\n- 宏定义主要用于定义常量及书写复杂的内容；typedef主要用于定义类型别名；\n- 宏替换发生在编译阶段之前，属于文本插入替换；typedef时编译的一部分；\n- 宏不进行类型检查；typedef会检查数据类型；\n- 宏不是语句，不需要在最后加分号；typedef是语句，要加分号标识结束；\n- 对于指针操作时：\n\t```c++\n    #define p_char char *：\n    p_char p1,p2; //p1类型为char *，p2类型为char。\n    typedef char * p_char：\n    p_char p1,p2; //p1,p2类型均为char *。\n\t```\n\n# 12. 变量声明和定义？\n- 声明仅仅是把变量的声明问位置及类型提供给编译器，并不分配内存空间；定义要在定义的地方为其分配存储空间；\n- 相同变量可以在多处声明(外部变量extern)，但定义只能在一处定义。\n\n# 13. 必须用到初始化成员列表的情况？\n- 初始化一个reference成员；\n- 初始化一个const成员；\n- 调用一个基类的构造函数，而该函数有一组参数；\n>通俗的就是，如果基类没有构造函数，派生类的初始化列表必须初始化基类，必须用基类的构造函数构造一个。因为派生类继承基类时，会先构造基类，然后在构造派生类，如果基类不是默认的构造函数，那么就不知道基类到底咋构造，因此……\n- 调用一个数据成员对象的构造函数，而该函数有一组参数。\n>列表初始化的顺序和书写顺序无关，只和变量的声明顺序有关。先声明哪个，就先初始化构造哪个。\n\n# 14. sizeof()和strlen()？\n- sizeof()是运算符，并不是函数，结果在编译时就已经得到，strlen()是字符串处理的库函数；\n- sizeof()参数可以是任何数据的类型或者数据(sizeof参数不退化)；strlen()的参数只能是字符指针且结尾是'\\0'的字符串；\n- sizeof()的值在编译时确定，所以不能用来得到动态分配(运行时分配)存储空间大小。\n\t```c++\n\tconst char *str = \"name\";\n\tsizeof(str); //取的是指针str的长度，结果是4\n\tstrlen(str); //取得是这个字符串的长度，不包含结尾的'\\0',结果是4\n\t```\n\n# 15. 常量指针和指针常量？\n- 常量指针：指向常量的指针，顾名思义，就是指针指向的是常量，即，它不能指向变量，它指向的内容不能被改变，不能通过指针来修改它指向的内容，但是指针自身不是常量，它自身的值可以改变，从而可以指向另一个常量，如int const *p或const int *p；\n- 指针常量：指针本身是常量。它指向的地址是不可改变的，但地址里的内容可以通过指针改变。它指向的地址将伴其一生，直到生命周期结束。有一点需要注意的是，指针常量在定义时必须同时赋初值，如int *const p。\n\n# 16. a和&a？\n```c++\nint a[10];\nint (*p)[10] = &a;\n```\n- a是数组名，是数组首元素的地址，a+1表示地址值加1个int类型的大小，如果a的地址是0x00000001,+1后操作后变为0x00000005，*(a+1) = a[1]；\n- &a是数组的指针，其类型为int(*)10] (就是前面提到的数组指针) ，其加1时,系统会认为是数组首地址加上整个数组的偏移(10个int型变量)，值为数组a尾元素后一个元素的地址。\n- 若(int *)p，此时输出*p时，其值为a[0]的值，因为被转为int *类型，解引用时按照int类型大小来读取。\n\n# 17. 数组名和指针？\n- 二者均可通过增减偏移量来访问数组中的元素；\n- 数组名不是真正意义上的指针，可以理解为常指针，所以数组名没有自增、自减等操作；\n- 当数组名当中形参传给调用函数后，就是去了原有的特性，退化成一般指针，多了自增、自检操作，但sizeof运算符不能再得到原数组的大小了。\n\n# 18. 野指针和悬空指针？\n都是指向无效内存区域(无效指\"不安全不可控\")的指针，访问行为将会导致未定义行为。\n**野指针：**指的是没有被初始化或的指针\n\t```c++\n\tint *p; //未初始化\n\tstd::cout<<*p<<endl; //访问野指针\n\t```\n为了防止出错，对于指针初始化时都是赋值为NULL，这样在访问时编译器会直接报\"非法内存访问\"的错误；\n**悬空指针：**指针最初指向的内存已被释放了的一种指针\n\t```c++\n\tint *p1 = NULL;\n\tint *p2 = new int;\n\tp1 = p2;\n\tdelete p2;\n\t```\n此时p1和p2就是悬空指针，指向的内存已被释放，继续使用这两个指针，行为不可预测，需要设置p1=p2=NULL。\n**产生原因及解决办法：**\n1. 野指针：指针变量未及时初始化⇒定义指针变量及时初始化；\n2. 悬空指针：指针free或者delete之后没有及时置空⇒释放后立即置空。\n3. c和c++？\n    - C++中new和delete是对内存分配的运算符，取代了C中的malloc和free；\n    - 标准C++中的字符串类取代了标准C函数库头文件中的字符数组处理函数(C中没有字符串类型)；\n    - C++中用来做控制态输入输出的iostream类库替代了标准C中的stdio函教库；\n    - C++中的try/catch/throw异常处理机制取代了标准C中的setjmp()和longimp()函数；\n    - 在C++中，允许有相同的函数名，不过它们的参数类型不能完全相同，这样这些函数就可以相互区别开来。而这在C语言中是不允许的。也就是C++可以重载，C语言不允许；\n    - C++语言中，允许变量定义语句在程序中的任何地方，只要在是使用它之前就可以；而C语言中,必须要在函数开头部分。而且C++允许重复定义变量，C语言也是做不到这一点的；\n    - 在C++中，除了值和指针之外，新增了引用，引用型变量是其他变量的一个别名，我们可以认为他们只是名字不相同，其他都是相同的；\n    - C++相对与C增加了一些关键字，如: bool, using, namespace等等。\n\n# 19. c++中struct和class？\n**相同点：**\n- 两者都拥有成员函数、公有和私有部分；\n- 任何可以使用class完成的工作，同样可以用struct完成。\n**不同点：**\n- struct默认是公有的，class默认是私有的；\n- struct默认是public继承，class默认是private继承；\n- class可以作为模板类型，struct不行。\n**c++和c的struct区别：**\n- c语言中，struct是用户自定义数据类型(UDT)；c++中struct是抽象数据类型(ADT)，支持成员函数的定义，c++中的struct能继承，能实现多态；\n- c中struct是没有设置权限的设置的，且struct中只能是一些变量的集合体，可以封装数据却不可以隐藏数据，而且成员不可以是函数；\n- c++中，struct增加了访问权限，且可以和类一样有成员函数，成员默认访问说明符为public(为了与c兼容)；\n- struct作为类的一种特例是用来自定义数据结构的。一个结构标记声明后，在c中必须在结构标记前加上struct才能做结构类型名(除：typedef struct class{};)；c++中结构体标记(结构体名)可以直接作为结构体类型名使用，此外结构体struct在c++中被当作类的一种特例。\n\n# 20. define宏定义和const？\n**编译阶段：**\n- define是在编译阶段的预处理阶段起作用，而const是在编译、运行的时候起作用；\n**安全性：**\n- define只做替换，不做类型检查和计算，也不求解，容易产生错误，一般最好加上大括号包含住全部的内容，不然容易出错；\n- const常量有数据类型，编译器可以对其进行类型安全检查；\n**内存占用：**\n- define只是将宏名称进行替换，在内存中会产生多份相同的备份；const在程序运行中只有一份备份，且可以执行常量折叠，能将复杂的表达式计算出结果放入常量表；\n- 宏替换发生在编译阶段之前，属于文本插入替换；const作用发生于编译过程中；\n- 宏不检查类型；const会检查数据类型；\n- 宏定义的数据没有分配内存空间，只是插入替换掉；从上图定义的变量只是值不能改变，但要分配内存空间。\n\n# 21. c++中static？\n**不考虑类的情况**\n1. 隐藏。所有不加static的全局变量和函数具有全局可见性，可以在其它文件中使用，加了之后只能在该文件所在的编译模块中使用；\n2. 默认初始话为0，包括未初始化的全局静态变量与局部静态变量，都存在全局未初始化区；\n3. 静态变量在函数内定义，始终存在，且只进行一次初始化，具有记忆性，其作用范围与局部变量相同，函数退出后仍然存在，但不能使用；\n**考虑类的情况**\n1. static成员变量：只与类关联，不与类的对象关联。定义时要分配空间，不能在类声明中初始化，必须在类定义体外部初始化，初始化时不需要标识为static；可以被非static成员函数任意访问；\n2. static成员函数：不具有this指针，无法访问类对象的非static成员变量和非static成员函数；不能被声明为const，虚函数和volatile；可以被非static成员函数任意访问。\n\n# 22. c++中const？\n**不考虑类的情况**\n1. const常量在定义时必须初始化，之后无法更改；\n2. const形参可以接收const和非const类型的实参；\n**考虑类的情况**\n1. const成员变量：不能在类定义外部初始化，只能通过构造函数初始化列表进行初始化，并且必须有构造函数；不同类对其const数据成员的值可以不同，所以不能在类中声明时初始化；\n2. const成员函数：const对象不可以调用非const成员函数；非const对象都可以调用；不可以改变非mutable(用该关键字声明的变量可以在const成员函数中被修改)数据的值。\n\n# 23. 模板函数和模板类的特例话\n**引入原因：**\n编写单一的模板，它能适应多种类型的需求，使每种类型都具有相同的功能，但对于某种特定类型，如果要实现其特有的功能，单一模板就无法做到，这时就需要模板特例化。\n**定义：**\n对单一模板提供的一个特殊实例，它将一个或多个模板参数绑定到特定的类型或值上。\n1. 模板函数特例化\n    必须为原函数模板的每个模板参数都提供实参，且使用关键字template后跟一个空尖括号对<>，表明将原模板的所有模板参数提供实参，举例如下：\n    ```c++\n    template<typename T> //模板函数\n    int compare(const T &vl, const T &v2)\n    {\n        if(v1 > v2) return -1;\n        if(v2 > v1) return 1;\n        return 0;\n    }\n    //模板特例化,满足针对字符申特定的比较,要提供所有实参,这里只有一个T\n    template<>\n    int compare(const char* const &v1, const char* const &v2) \n    {\n        return strcmp(p1, p2);\n    }\n    ```\n    **本质：**\n    本质是实例化一个模板，而非重载它。特例化不影响参数匹配。参数匹配都以最佳匹配为原则，例如，此处如果是compare(3,5)，则调用普通的模板，若为compare(hi\",haha\")，则调用特例化版本(因为这个`cosnt char*`相对于T，更匹配实参类型)，注意二者函数体的语句不一样了，实现不同功能。\n    **注意：**\n    模板及其特例化版本应该声明在同一个头文件中，且所有同名模板的声明应该放在前面，后面放特例化版本。\n2. 类模板特例化\n    原理类似函数模板，不过在类中，我们可以对模板进行特例化，也可以对类进行部分特例化。对类进行特例化时，仍然用template表示是一个特例化版本，例如：\n    ```c++\n    template<>\n    class hash<sales_data>\n    {\n        size_t operator()(sales_data& s);\n        //里面所有T都换成特例化类型版本sales_data\n        /* 按照最佳匹配原则,若T != sales_data,就用普通类模板,否则,就使用含有特定功能的\n        特例化版本。 */\n    }\n    ```\n**类模板的部分特例化**\n不必为所有模板参教提供实参，可以指定一部分而非所有模板参数，一个类模板的部分特例化本身仍是一个模板，使用它时还必须为其特例化版本中未指定的模板参数提供实参(特例化时类名一定要和原来的模板相同，只是参数类型不同，按最佳匹配原则，哪个最匹配，就用相应的模板)\n**特例化类中的部分成员**\n可以特例话类中的部分成员函数而不是整个类，举个例子：\n\t```c++\n\ttemplate<typename T> \n\tclass Foo \n\t{\n\t\tvoid BarO();\n\t\tvoid Barst(T a) ();\n\t};\n\ttemplate<>\n\tvoid Foocint::Bar()\n\t{\n\t\t//1进行int类型的特例化处理\n\t\tcout <<\"我是int型特例化\"<<end1;\n\t}\n\tFoo<string> fs;\n\tFoo<int> fi;//使用特例化\n\tfs. BarO);//使用的是普通模板,即Foo<string>::BarO\n\tfi.BarO);//特例化版本,执行Foo(int : :BarO)\n\t//Foo<string>:: Bar()和Foocintx::Bar()功能不同\n\t```\n\n# 24. c和c++的类型安全？\n**什么是类型安全？**\n类型安全很大程度上可以等价于内存安全，类型安全的代码不会试图访问自己没被授权的内存区域。\"类型安全\"常被用来形容编程语言，其根据在于该门编程语言是否提供保障类型安全的机制；有的时候也用\"类型安全\"形容某个程序，判别的标准在于该程序是否隐含类型错误，类型安全的编程语言与类型安全的程序之间没有必然联系。好的程序员可以使用类型不那么安全的语言写出类型相当安全的程序，相反的，差一点儿的程序员可能使用类型相当安全的语言写出类型不太安全的程序，绝对类型安全的编程语言暂时还没有。\n1. c的类型安全\n    c只在局部上下文中表现出类型安全，比如试图从一种结构体的指针转换为另外一种结构体的指针时，编译器将会报错，除非使用显示类型转换。\n    - printf格式输出\n    ```c++\n\tprintf(\"整型数:%d\\n\",10);\n\tprintf(\"浮点型数:%f\\n\",10);\n\t```\n    上述代码中，使用%d控制整型数字的输出，没有问题，但是改成%时，明显输出错误，再改成%s时，运行直接报segmentation fault错误。\n    - malloc函数的返回值\n    malloc是C中进行内存分配的函数，它的返回类型是void *，即空类型指针,常常有这样的用法char *p = (char *)malloc(100 * sizeof(char));这里明显做了显式的类型转换。类型匹配尚且没有问题,但是一旦出现int* p=(int*)malloc(100*sizeof(char));就很可能带来一些问题,而这样的转换C并不会提示错误。。\n2. c++的类型安全\n    如果c++使用得当，它将远比c更有类型安全性。相比于c语言， c++提供了一些新的机制保障类型安全：\n    - 操作符new返回的指针类型严格与对象匹配，而不是void *；\n    - c中很多以*void **为参数的函数可以改写为c++模板函数，而模板是支持类型检查的；\n    - 引入const关键字代替#define constants，它是有类型、有作用域的，而#define constants只是简单的文本替换；\n    - 一些#define宏可被改写为inline函数，结合函数的重载，可在类型安全的前提下支持多种类型，当然改写为模板也能保证类型安全；\n    - c++提供了dynamic_cast关键字，使得转换过程更加安全，因为dynamic_cast比static_cast涉及更多具体的类型检查。\n\n# 25. 大小端存储？\n大端存储：字数据的高字节存储在低地址中；\n小端存储：字数据的低字节存储在低地址中。\n**两种判断大小端存储的方法**\n1. 使用强制类型转换\n    ```c++\n    #include <iostream> \n    using namespace std;\n\n    int main()\n    {\n        int a = 0x1234;\n        //亩于int和char的长度不同,借助int型转换成char型,只会留下低地址的部分\n        char c = (char)a;\n        if (C == 0x12)\n            cout << \"big endian\" << endl;\n        else if(C == 0x34)\n            cout << \"little endian\" << endl;\n\n        return 0;\n    }\n    ```\n2. 巧用union联合体\n    ```c++\n    #include <iostream>\n    using namespace std;\n    //union联合体的重叠式存储, endian联合体占用内存的空间为每个成员字节长度的最大值\n    union endian\n    {\n        int a;\n        char ch;\n    };\n\n    int main()\n    {\n        endian value;\n        value.a =0x1234;\n        //a和ch共用4字节的内存空间\n        if (value.ch ==0x12)\n            cout << \"big endian\" << endl;\n        else if (value.ch == 0x34)\n            cout << \"Tittle endian\" << endl;\n        \n        return 0;\n    }\n    ```\n\n# 26. c++内存分区？\n**堆**\n在执行函数时，函数内局部变量的存储单元都可以在栈上创建，函数执行结束时这些存储单元自动被释放。栈内存分配运算内置于处理器的指令集中，效率很高，但是分配的内存容量有限；\n**栈**\n就是那些由new分配的内存块，他们的释放编译器不去管，由我们的应用程序去控制，一般一个new就要对应一个delete。如果程序员没有释放掉，那么在程序结束后，操作系统会自动回收；\n**自由存储区**\n就是那些由malloc等分配的内存块，它和堆是十分相似的，不过它是用free来结束自己的生命的；\n**全局/静态存储区**\n全局变量和静态变量被分配到同一块内存中，在以前的C语言中，全局变量和静态变量又分为初始化的和未初始化的，在c++里面没有这个区分了，它们共同占用同一块内存区，在该区定义的变量若没有初始化，则会被自动初始化，例如int型变量自动初始为0；\n**常量存储区**\n这是一块比较特殊的存储区,，这里面存放的是常量，不允许修改；\n**代码段**\n存放函数体的二进制代码\n\n# 27. 形参和实参？\n- 形参变量只有在被调用时才分配内存单元，在调用结束时，即刻释放所分配的内存单元。因此，形参只有在函数内部有效。函数调用结束返回主调函数后则不能再使用该形参变量；\n- 实参可以是常量、变量、表达式、函数等，无论实参是何种类型的量，在进行函数调用时，它们都必须具有确定的值，以便把这些值传送给形参。因此应预先用赋值，输入等办法使实参获得确定值，会产生一个临时变量；\n- 实参和形参在数量上、类型上、顺序上应严格一致，否则会发生\"类型不匹配\"的错误；\n- 函数调用中发生的数据传送是单向的。即只能把实参的值传送给形参，而不能把形参的值反向地传送给实参。因此在函数调用过程中，形参的值发生改变，而实参中的值不会变化；\n- 当形参和实参不是指针类型时，在该函数运行时，形参和实参是不同的变量，他们在内存中位于不同的位置，形参将实参的内容复制一份，在该函数运行结束的时候形参被释放，而实参内容不会改变。\n\n# 28. 值传递、指针传递、引用传递的区别和效率？\n- 值传递：有一个形参向函数所属的栈拷贝数据的过程，如果值传递的对象是类对象或是大的结构体对象，将耗费一定的时间和空间(传值)。\n- 指针传递：同样有一个形参向函数所属的栈拷贝数据的过程，但拷贝的数据是一个固定为4字节的地址(传值,传递的是地址值)；\n- 引用传递：同样有上述的数据拷贝过程，但其是针对地址的，相当于为该数据所在的地址起了一个别名(传地址)；\n- 效率上讲，指针传递和引用传递比值传递效率高。一般主张使用引用传递，代码逻辑上更加紧凑、清晰。\n\n# 29. 深拷贝与浅拷贝？\n- 浅复制：只是拷贝了基本类型的数据,，而引用类型数据，复制后也是会发生引用，我们把这种拷贝叫做\" (浅复制)浅拷贝\" ，换句话说，浅复制仅仅是指向被复制的内存地址，如果原地址中对象被改变了，那么浅复制出来的对象也会相应改变；\n    深复制：在计算机中开辟了一块新的内存地址用于存放复制的对象；\n- 在某些状况下，类内成员变量需要动态开辟堆内存，如果实行位拷贝，也就是把对象里的值完全复制给另一个对象，如A-B，这时，如果B中有一个成员变量指针已经申请了内存，那A中的那个成员变量也指向同一块内存。这就出现了问题：当B把内存释放了(如：析构) ，这时A内的指针就是野指针了出现运行错误。\n\n# 30. 智能指针？\n**原理**\n智能指针是一个类，用来存储指向动态分配对象的指针，负责自动释放动态分配的对象，防止堆内存泄露。交给一个类对象区管理，当类对象生命周期结束时，自动调用析构函数释放资源。\n**常用的智能指针**\n1. **shared_ptr**\n    实现原理：**采用引用计数器的方法**，允许多个智能指针指向同一个对象，每当多一个指针指向该对象时，指向该对象的所有智能指针内部的引用计数加1，每当减少一个智能指针指向对象时，引用计数会减1，当计数为0的时候会自动释放动态分配的资源。\n    - 智能指针将一个计数器与类指向的对象相关联，引用计数器跟踪共有多少个类对象共享同一指针；\n    - 每次创建类的新对象时，初始化指针并将引用计数置为1；\n    - 当对象作为另一对象的副本而创建时，拷贝构造函数拷贝指针并增加与之相应的引用计数；\n    - 对一个对象进行赋值时，赋值操作符减少左操作数所指对象的引用计数（如果引用计数为减至0，则删除对象），并增加右操作数所指对象的引用计数；\n    - 调用析构函数时，构造函数减少引用计数（如果引用计数减至0，则删除基础对象）。\n2. **unique_pt**\n    unique_ptr采用的是独享所有权语义，一个非空的unique_ptr总是拥有它所指向的资源。转移一个unique_ptr将会把所有权全部从源指针转移给目标指针，源指针被置空；所以**unique_ptr不支持普通的拷贝和赋值操作**，不能用在STL标准容器中；局部变量的返回值除外（因为编译器知道要返回的对象将要被销毁）；如果你拷贝一个unique_ptr，那么拷贝结束后，这两个unique_ptr都会指向相同的资源，造成在结束时对同一内存指针多次释放而导致程序崩溃。\n3. **weak_ptr**\n    weak_ptr：弱引用。 引用计数有一个问题就是互相引用形成环（环形引用），这样两个指针指向的内存都无法释放。需要使用weak_ptr打破环形引用。**weak_ptr是一个弱引用，它是为了配合shared_ptr而引入的一种智能指针**，它指向一个由shared_ptr管理的对象而不影响所指对象的生命周期，也就是说，它只引用，不计数。如果一块内存被shared_ptr和weak_ptr同时引用，当所有shared_ptr析构了之后，不管还有没有weak_ptr引用该内存，内存也会被释放。所以weak_ptr不保证它指向的内存一定是有效的，在使用之前使用函数lock()检查weak_ptr是否为空指针。\n4. **auto_ptr**\n    **auto_ptr不支持拷贝和赋值操作**，不能用在STL标准容器中。STL容器中的元素经常要支持拷贝、赋值操作，在这过程中auto_ptr会传递所有权，auto_ptr采用的是独享所有权语义，一个非空的unique_ptr总是拥有它所指向的资源。转移一个auto_ptr将会把所有权全部从源指针转移给目标指针，源指针被置空。\n**智能指针代码实现：** 用两个类来实现智能指针的功能，一个是引用计数类，另一个则是指针类。\n**引用计数类**\n\t```c++\n\t//引用计数器类用于存储指向同一对象的指针数\n\ttemplate<typename T>\n\tclass Counter\n\t{\n\tprivate:\n\t\t//数据成员\n\t\tT *ptr;//对象指针\n\t\tint cnt; // 引用计数器1\n\t\t//友元类声明\n\t\ttemplate<typename T>\n\t\tfriend class SmartPtr;\n\t\t//构造函数\n\t\tCounter(T *p)\n\t\t{\n\t\t\tptr =p;\n\t\t\tcnt = 1;\n\t\t}\n\t\t//折构函数\n\t\t~Counter()\n\t\t{\n\t\t\tdelete ptr;\n\t\t}\n\t}\n\t```\n**指针类**\n\t```c++\n\ttemplate<typename T>\n\tclass SmartPtr\n\t{\n\tprivate:\n\t\t//数据成员\n\t\tCounter<T> ptr_cnt;\n\tpublic:\n\t\t//普通构造函数 初始化计数类\n\t\tSmartPtr(T *p)\n\t\t{\n\t\t\tptr_cnt = new Counter<T>(p);\n\t\t}\n\t\t//拷贝构造函数\n\t\tSmartPtr(const SmartPtr &other)\n\t\t{\n\t\t\tptr_cnt = other.ptr_cnt;\n\t\t\tptr_cnt->cnt++;\n\t\t}\n\t\t//赋值运算符重载函数\n\t\tSmartPtr &operator=(const SmartPtr &rhs)\n\t\t{\n\t\t\tptr_cnt = rhs->ptr_cnt;\n\t\t\trhs.ptr cnt->cnt++;\n\t\t\tptr_cnt->cnt--;\n\t\t\tif (ptr_cnt->cnt == 0)\n\t\t\t\tdelete ptr_cnt;\n\t\t\treturn *this;\n\t\t}\n\t\t//解引用运算符重载函数\n\t\tT &operator*()\n\t\t{\n\t\t\treturn *(ptr_cnt->cnt);\n\t\t}\n\t\t//析构函数\n\t\t~SmartPtr()\n\t\t{\n\t\t\tptr_cnt->cnt--;\n\t\t\tif(ptr_cnt->cnt == 0){\n\t\t\t\tdelete ptr_cnt;\n\t\t\t}else{\n\t\t\t\tcout << \"还有\" << ptr_cnt->cnt << \"个指针指向基础对象\" << endl;\n\t\t\t}\n\t\t}\n\t}\n\t```\n\n# 31. 函数指针？\n**定义：**函数指针是指向函数的指针变量。 因此“函数指针”本身首先应是指针变量，只不过该指针变量指向函数。这正如用指针变量可指向整型变量、字符型、数组一样，这里是指向函数。\n**有两个用途：**调用函数和做函数的参数。\n**声明方法：**\n返回值类型 (* 指针变量名) (形参列表);\ntypedef int (*fun)(int, int);  // 声明一个指向同样参数、返回值的函数指针类型\ntypedef int(fun)(int, int);  //声明一种函数类型\n**注1：**“返回值类型”说明函数的返回类型，“(指针变量名 )”中的括号不能省，括号改变了运算符的优先级。若省略整体则成为一个函数说明，说明了一个返回的数据类型是指针的函数，后面的“形参列表”表示指针变量指向的函数所带的参数列表。                         **注2：**函数括号中的形参可有可无，视情况而定。\n**指向函数的指针变量没有++和--运算。**\n\n# 32. c/c++语言编译四步骤？\n**预编译**\n主要处理源代码文件中的以“#”开头的预编译指令。处理规则见下：\n1. 删除所有的#define，展开所有的宏定义；\n2. 处理所有的条件预编译指令，如“#if”、“#endif”、“#ifdef”、“#elif”和“#else”；\n3. 处理“#include”预编译指令，将文件内容替换到它的位置，这个过程是递归进行的，文件中包含其他文件；\n4. 删除所有的注释，“//”和“/**/”；\n5. 保留所有的#pragma 编译器指令，编译器需要用到他们，如：#pragma once 是为了防止有文件被重复引用；\n6. 添加行号和文件标识，便于编译时编译器产生调试用的行号信息，和编译时产生编译错误或警告是能够显示行号。\n**编译**\n把预编译之后生成的.i或.ii文件，进行一系列词法分析、语法分析、语义分析及优化后，生成相应的汇编代码文件。\n1. 词法分析：利用类似于“有限状态机”的算法，将源代码程序输入到扫描机中，将其中的字符序列分割成一系列的记号；\n2. 语法分析：语法分析器对由扫描器产生的记号，进行语法分析，产生语法树。由语法分析器输出的语法树是一种以表达式为节点的树；\n3. 语义分析：语法分析器只是完成了对表达式语法层面的分析，语义分析器则对表达式是否有意义进行判断，其分析的语义是静态语义——在编译期能分期的语义，相对应的动态语义是在运行期才能确定的语义；\n4. 优化：源代码级别的一个优化过程；\n5. 目标代码生成：由代码生成器将中间代码转换成目标机器代码，生成一系列的代码序列——汇编语言表示；\n6. 目标代码优化：目标代码优化器对上述的目标机器代码进行优化：寻找合适的寻址方式、使用位移来替代乘法运算、删除多余的指令等。\n**汇编**\n将汇编代码转变成机器可以执行的指令(机器码文件)。 汇编器的汇编过程相对于编译器来说更简单，没有复杂的语法，也没有语义，更不需要做指令优化，只是根据汇编指令和机器指令的对照表一一翻译过来，汇编过程由汇编器as完成。经汇编之后，产生目标文件(与可执行文件格式几乎一样).o(Windows下)、.obj(Linux下)。\n**链接**\n将不同的源文件产生的目标文件进行链接，从而形成一个可以执行的程序。链接分为静态链接和动态链接。\n1. 静态链接\n    函数和数据被编译进一个二进制文件。在使用静态库的情况下，在编译链接可执行文件时，链接器从库中复制这些函数和数据并把它们和应用程序的其它模块组合起来创建最终的可执行文件。\n    空间浪费：因为每个可执行程序中对所有需要的目标文件都要有一份副本，所以如果多个程序对同一个目标文件都有依赖，会出现同一个目标文件都在内存存在多个副本；\n    更新困难：每当库函数的代码修改了，这个时候就需要重新进行编译链接形成可执行程序。\n    运行速度快：但是静态链接的优点就是，在可执行程序中已经具备了所有执行程序所需要的任何东西，在执行的时候运行速度快。\n2. 动态链接\n    动态链接的基本思想是把程序按照模块拆分成各个相对独立部分，在程序运行时才将它们链接在一起形成一个完整的程序，而不是像静态链接一样把所有程序模块都链接成一个单独的可执行文件。\n    共享库：就是即使需要每个程序都依赖同一个库，但是该库不会像静态链接那样在内存中存在多分，副本，而是这多个程序在执行时共享同一份副本；\n    更新方便：更新时只需要替换原来的目标文件，而无需将所有的程序再重新链接一遍。当程序下一次运行时，新版本的目标文件会被自动加载到内存并且链接起来，程序就完成了升级的目标。\n    性能损耗：因为把链接推迟到了程序运行时，所以每次执行程序都需要进行链接，所以性能会有一定损失。","source":"_posts/c++面经.md","raw":"---\ntitle: c/c++面经\ndate: 2021-9-4\ntop: 1\ntags:\n\t面试\n\tc/c++\n---\nc/c++面经\n<!--more-->\n\n# 1. **在main执行之前和之后执行的代码可能是什么？**\nmain执行之前：主要是初始化系统相关资源\n+ 设置栈指针；\n+ 初始化静态static变量和global全局变量,即.data段的内容；\n+ 将未初始化部分的全局变量赋初值：数值型short , int , long等为0 , bool为FALSE ,指针为NULL等等，即.bss段的内容；\n+ 全局对象初始化,在main之前调用构造函数，这是可能会执行前的一些代码；\n+ 将main函数的参数argc, argv等传递给main函数,然后才真正运行main函数；\n+ ***ttribute***(constructor)。 \n\nmain函数执行之后\n+ 全局对象的析构函数会在main函数之后执行；\n+ 可以用atexit注册一个函数,它会在main之后执行；\n+ ***attribute***(destructor)。\n\n# 2. 结构体内存对齐问题？\n- 结构体内成员按照声明顺序存储，第一个成员地址和整个结构体地址相同。\n- 未特殊说明时,按结构体中size最大的成员对齐(若有double成员,按8字节对齐)。\n\n# 3. 指针和引用的区别？\n- 指针是一个变量，存储的是一个地址，引用跟原来的变量实质上是同一个东西,是原变量的别名；\n- 指针可以有多级，引用只有一级；\n- 指针可以为空，引用不能为NULL且在定义时必须初始化；\n- 指针在初始化后可以改变指向，而引用在初始化之后不可再改变；\n- sizeof指针得到的是本指针的大小，sizeof引用得到的是引用所指向变量的大小；\n- 当把指针作为参数进行传递时，也是将实参的一个拷贝传递给形参，两者指向的地址相同,但不是同一个变量，在函数中改变这个变量的指向不影响实参，而引用却可以；\n- 引用只是别名，不占用具体存储空间，只有声明没有定义；指针是具体变量,需要占用存储空间(但这也只是一般情况下,具体情况还要具体分析)；\n- 引用在声明时必须初始化为另一变量，一旦出现必须为typename refname &varname形式；指针声明和定义可以分开，可以先只声明指针变量而不初始化，等用到时再指向具体变量；\n- 引用一旦初始化之后就不可以再改变(变量可以被引用为多次，但引用只能作为一个变量引用)指针变量可以重新指向别的变量；\n- 不存在指向空值的引用，必须有具体实体；但是存在指向空值的指针。\n\n# 4. 堆和栈的区别？\n- 申请方式不同\n\t1. 栈由系统自动分配释放；\n\t2. 堆由程序员手动申请释放。\n- 申请大小限制不同\n    1. 栈顶和栈底是之前预设好的，栈是向栈底扩展，大小固定，可以通过ulimit-a查看，由ulimit-s修改；\n    2. 堆向高地址扩展，是不连续的内存区域，大小可以灵活调整。\n- 申请效率不同\n    1. 栈由系统分配，速度快，不会有碎片；\n    2. 堆由程序员手动分配，速度慢，且会有碎片。\n- 栈空间默认是4M；堆区一般是1-4G。\n\n# 5. 指针？\n- int *p[10]; ：数组指针，是一个数组变量，数组大小为10，组内每个元素都是指向int类型的指针变量；\n- int (*)p[10];：数组指针，是一个指针类型变量，指向的是一个int类型的数组，这个数组的大小是10；\n- int *p(int);：函数声明，函数名是p，参数是int类型的，返回值是int *类型的；\n- int (*p)(int);：函数指针，指向的函数具有int类型参数，并且返回值是int类型的。\n\n# 6. 基类的虚函数表存放在内存的什么区，虚表指针vptr的初始化时间？\n首先整理一下虚函数表的特征：\n- 虚函数表是全局共享的元素,即全局仅有一个,在编译时就构造完成；\n- 虚函数表类似一个数组,类对象中存储vptr指针,指向虚函数表,即虚函数表不是函数,不是程序代码,不可能存储在代码段；\n- 虚函数表存储虚函数的地址,即虚函数表的元素是指向类成员函数的指针,而类中虚函数的个数在编译时期可以确定,即虚函数表的大小可以确定,即大小是在编译时期确定的,不必动态分配内存空间存储虚函数表,所以不在堆中。\n- 根据以上特征,虚函数表类似于类中静态成员变量静态成员变量也是全局共享,大小确定,因此最有可能存在全局数据区,测试结果显示：\n1. 虚函数表vtable在Linux/Unix中存放在可执行文件的只读数据段中(rodata),这与微软的编译器将虚函数表存放在常量段存在一些差别；\n2. 由于虚表指针yptr跟虚函数密不可分,对于有虚函数或者继承于拥有虚函数的基类,对该类进行实例化时,在构造函数执行时会对虚表指针进行初始化,并且存在对象内存布局的最前面。\n一般分为五个区域：栈区、堆区、函数区(存放函数体等二进制代码)、全局静态区、常量区。\n- C++中虚函数表位于只读数据段( .rodata)，也就是C++内存模型中的常量区;而虚函数则位于代码段(.text)，也就是C++内存模型中的代码区。\n\n# 7. **new/delete**与**malloc/free？**\n- 相同点：\n\t1.都可用于内存的动态申请和释放。\n- 不同点：\n\t1.new/delete是c++运算符，malloc/free是c/c++语言标准库函数；\n\t2.new自动计算要分配的空间大小，malloc需要手工计算；\n\t3.new是类型安全的，malloc不是；\n    ```c++\n    int *p = new float[2];  //编译错误\n    int *p = (int *)malloc(2 * sizeof(double)); //编译无错误\n    ```\n\t4.new调用名为operator new的标准库函数分配足够空间并调用相关对象的构造函数，delete堆指针所指对象运行适当的析构函数，然后提供调用名为operator delete的标准库函数释放该对象所用内存，malloc/free无相关调用；\n\t5.malloc/free需要库文件支持，new/delete不需要；\n\t6.new是封装了malloc，直接free不会报错，但只是释放内存，而不会析构对象。\n\n# 8. new和delete的实现？\n- new的实现过程是：首先调用名为operator new的标准库函数，分配足多大的原始为类型化的内存，以保存指定类型的一个对象；接下来运行该类型的一个构造函数，用指定初始化构造对象；最后返回指向新分配井构造后的的对象的指针；\n- delete的实现过程：对指针指向的对象运行适当的析构函数；然后通过调用名为operator delete的标准库函数释放该对象所用内存。\n\n# 9. malloc和new的区别?\n- malloc和free是标准库函数，支持覆盖；new和delete是运算符，并且支持重载；\n- malloc仅仅分配内存空间，free仅仅回收空间，不具备调用构造函数和析构函数功能，用malloc分配空间存储类的对象存在风险；new和delete除了分配回收功能外，还会调用构造函数和析构函数；\n- mallac和free返回的是void类型指针(必须进行类型转换)， new和delete返回的是具体类型指针。\n***delete和delete[]的区别？***\n- delete只会调用一次析构函数；\n- delete[]会调用数组中每个元素的析构函数。\n\n# 10. 宏定义和函数？\n- 宏在编译时完成替换，之后被替换的文本参与编译，相当于直接插入了代码，运行时不存在函数调用，执行起来更快；函数调用在运行时需要跳转到具体函数中调用函数；\n- 宏定义属于在结构中插入代码，没有返回值；函数调用具有返回值；\n- 宏定义参数没有类型，不进行类型检查；函数参数具有类型，需要进行类型检查；\n- 宏定义不需要在最后加分号。\n\n# 11. 宏定义和typedef？\n- 宏定义主要用于定义常量及书写复杂的内容；typedef主要用于定义类型别名；\n- 宏替换发生在编译阶段之前，属于文本插入替换；typedef时编译的一部分；\n- 宏不进行类型检查；typedef会检查数据类型；\n- 宏不是语句，不需要在最后加分号；typedef是语句，要加分号标识结束；\n- 对于指针操作时：\n\t```c++\n    #define p_char char *：\n    p_char p1,p2; //p1类型为char *，p2类型为char。\n    typedef char * p_char：\n    p_char p1,p2; //p1,p2类型均为char *。\n\t```\n\n# 12. 变量声明和定义？\n- 声明仅仅是把变量的声明问位置及类型提供给编译器，并不分配内存空间；定义要在定义的地方为其分配存储空间；\n- 相同变量可以在多处声明(外部变量extern)，但定义只能在一处定义。\n\n# 13. 必须用到初始化成员列表的情况？\n- 初始化一个reference成员；\n- 初始化一个const成员；\n- 调用一个基类的构造函数，而该函数有一组参数；\n>通俗的就是，如果基类没有构造函数，派生类的初始化列表必须初始化基类，必须用基类的构造函数构造一个。因为派生类继承基类时，会先构造基类，然后在构造派生类，如果基类不是默认的构造函数，那么就不知道基类到底咋构造，因此……\n- 调用一个数据成员对象的构造函数，而该函数有一组参数。\n>列表初始化的顺序和书写顺序无关，只和变量的声明顺序有关。先声明哪个，就先初始化构造哪个。\n\n# 14. sizeof()和strlen()？\n- sizeof()是运算符，并不是函数，结果在编译时就已经得到，strlen()是字符串处理的库函数；\n- sizeof()参数可以是任何数据的类型或者数据(sizeof参数不退化)；strlen()的参数只能是字符指针且结尾是'\\0'的字符串；\n- sizeof()的值在编译时确定，所以不能用来得到动态分配(运行时分配)存储空间大小。\n\t```c++\n\tconst char *str = \"name\";\n\tsizeof(str); //取的是指针str的长度，结果是4\n\tstrlen(str); //取得是这个字符串的长度，不包含结尾的'\\0',结果是4\n\t```\n\n# 15. 常量指针和指针常量？\n- 常量指针：指向常量的指针，顾名思义，就是指针指向的是常量，即，它不能指向变量，它指向的内容不能被改变，不能通过指针来修改它指向的内容，但是指针自身不是常量，它自身的值可以改变，从而可以指向另一个常量，如int const *p或const int *p；\n- 指针常量：指针本身是常量。它指向的地址是不可改变的，但地址里的内容可以通过指针改变。它指向的地址将伴其一生，直到生命周期结束。有一点需要注意的是，指针常量在定义时必须同时赋初值，如int *const p。\n\n# 16. a和&a？\n```c++\nint a[10];\nint (*p)[10] = &a;\n```\n- a是数组名，是数组首元素的地址，a+1表示地址值加1个int类型的大小，如果a的地址是0x00000001,+1后操作后变为0x00000005，*(a+1) = a[1]；\n- &a是数组的指针，其类型为int(*)10] (就是前面提到的数组指针) ，其加1时,系统会认为是数组首地址加上整个数组的偏移(10个int型变量)，值为数组a尾元素后一个元素的地址。\n- 若(int *)p，此时输出*p时，其值为a[0]的值，因为被转为int *类型，解引用时按照int类型大小来读取。\n\n# 17. 数组名和指针？\n- 二者均可通过增减偏移量来访问数组中的元素；\n- 数组名不是真正意义上的指针，可以理解为常指针，所以数组名没有自增、自减等操作；\n- 当数组名当中形参传给调用函数后，就是去了原有的特性，退化成一般指针，多了自增、自检操作，但sizeof运算符不能再得到原数组的大小了。\n\n# 18. 野指针和悬空指针？\n都是指向无效内存区域(无效指\"不安全不可控\")的指针，访问行为将会导致未定义行为。\n**野指针：**指的是没有被初始化或的指针\n\t```c++\n\tint *p; //未初始化\n\tstd::cout<<*p<<endl; //访问野指针\n\t```\n为了防止出错，对于指针初始化时都是赋值为NULL，这样在访问时编译器会直接报\"非法内存访问\"的错误；\n**悬空指针：**指针最初指向的内存已被释放了的一种指针\n\t```c++\n\tint *p1 = NULL;\n\tint *p2 = new int;\n\tp1 = p2;\n\tdelete p2;\n\t```\n此时p1和p2就是悬空指针，指向的内存已被释放，继续使用这两个指针，行为不可预测，需要设置p1=p2=NULL。\n**产生原因及解决办法：**\n1. 野指针：指针变量未及时初始化⇒定义指针变量及时初始化；\n2. 悬空指针：指针free或者delete之后没有及时置空⇒释放后立即置空。\n3. c和c++？\n    - C++中new和delete是对内存分配的运算符，取代了C中的malloc和free；\n    - 标准C++中的字符串类取代了标准C函数库头文件中的字符数组处理函数(C中没有字符串类型)；\n    - C++中用来做控制态输入输出的iostream类库替代了标准C中的stdio函教库；\n    - C++中的try/catch/throw异常处理机制取代了标准C中的setjmp()和longimp()函数；\n    - 在C++中，允许有相同的函数名，不过它们的参数类型不能完全相同，这样这些函数就可以相互区别开来。而这在C语言中是不允许的。也就是C++可以重载，C语言不允许；\n    - C++语言中，允许变量定义语句在程序中的任何地方，只要在是使用它之前就可以；而C语言中,必须要在函数开头部分。而且C++允许重复定义变量，C语言也是做不到这一点的；\n    - 在C++中，除了值和指针之外，新增了引用，引用型变量是其他变量的一个别名，我们可以认为他们只是名字不相同，其他都是相同的；\n    - C++相对与C增加了一些关键字，如: bool, using, namespace等等。\n\n# 19. c++中struct和class？\n**相同点：**\n- 两者都拥有成员函数、公有和私有部分；\n- 任何可以使用class完成的工作，同样可以用struct完成。\n**不同点：**\n- struct默认是公有的，class默认是私有的；\n- struct默认是public继承，class默认是private继承；\n- class可以作为模板类型，struct不行。\n**c++和c的struct区别：**\n- c语言中，struct是用户自定义数据类型(UDT)；c++中struct是抽象数据类型(ADT)，支持成员函数的定义，c++中的struct能继承，能实现多态；\n- c中struct是没有设置权限的设置的，且struct中只能是一些变量的集合体，可以封装数据却不可以隐藏数据，而且成员不可以是函数；\n- c++中，struct增加了访问权限，且可以和类一样有成员函数，成员默认访问说明符为public(为了与c兼容)；\n- struct作为类的一种特例是用来自定义数据结构的。一个结构标记声明后，在c中必须在结构标记前加上struct才能做结构类型名(除：typedef struct class{};)；c++中结构体标记(结构体名)可以直接作为结构体类型名使用，此外结构体struct在c++中被当作类的一种特例。\n\n# 20. define宏定义和const？\n**编译阶段：**\n- define是在编译阶段的预处理阶段起作用，而const是在编译、运行的时候起作用；\n**安全性：**\n- define只做替换，不做类型检查和计算，也不求解，容易产生错误，一般最好加上大括号包含住全部的内容，不然容易出错；\n- const常量有数据类型，编译器可以对其进行类型安全检查；\n**内存占用：**\n- define只是将宏名称进行替换，在内存中会产生多份相同的备份；const在程序运行中只有一份备份，且可以执行常量折叠，能将复杂的表达式计算出结果放入常量表；\n- 宏替换发生在编译阶段之前，属于文本插入替换；const作用发生于编译过程中；\n- 宏不检查类型；const会检查数据类型；\n- 宏定义的数据没有分配内存空间，只是插入替换掉；从上图定义的变量只是值不能改变，但要分配内存空间。\n\n# 21. c++中static？\n**不考虑类的情况**\n1. 隐藏。所有不加static的全局变量和函数具有全局可见性，可以在其它文件中使用，加了之后只能在该文件所在的编译模块中使用；\n2. 默认初始话为0，包括未初始化的全局静态变量与局部静态变量，都存在全局未初始化区；\n3. 静态变量在函数内定义，始终存在，且只进行一次初始化，具有记忆性，其作用范围与局部变量相同，函数退出后仍然存在，但不能使用；\n**考虑类的情况**\n1. static成员变量：只与类关联，不与类的对象关联。定义时要分配空间，不能在类声明中初始化，必须在类定义体外部初始化，初始化时不需要标识为static；可以被非static成员函数任意访问；\n2. static成员函数：不具有this指针，无法访问类对象的非static成员变量和非static成员函数；不能被声明为const，虚函数和volatile；可以被非static成员函数任意访问。\n\n# 22. c++中const？\n**不考虑类的情况**\n1. const常量在定义时必须初始化，之后无法更改；\n2. const形参可以接收const和非const类型的实参；\n**考虑类的情况**\n1. const成员变量：不能在类定义外部初始化，只能通过构造函数初始化列表进行初始化，并且必须有构造函数；不同类对其const数据成员的值可以不同，所以不能在类中声明时初始化；\n2. const成员函数：const对象不可以调用非const成员函数；非const对象都可以调用；不可以改变非mutable(用该关键字声明的变量可以在const成员函数中被修改)数据的值。\n\n# 23. 模板函数和模板类的特例话\n**引入原因：**\n编写单一的模板，它能适应多种类型的需求，使每种类型都具有相同的功能，但对于某种特定类型，如果要实现其特有的功能，单一模板就无法做到，这时就需要模板特例化。\n**定义：**\n对单一模板提供的一个特殊实例，它将一个或多个模板参数绑定到特定的类型或值上。\n1. 模板函数特例化\n    必须为原函数模板的每个模板参数都提供实参，且使用关键字template后跟一个空尖括号对<>，表明将原模板的所有模板参数提供实参，举例如下：\n    ```c++\n    template<typename T> //模板函数\n    int compare(const T &vl, const T &v2)\n    {\n        if(v1 > v2) return -1;\n        if(v2 > v1) return 1;\n        return 0;\n    }\n    //模板特例化,满足针对字符申特定的比较,要提供所有实参,这里只有一个T\n    template<>\n    int compare(const char* const &v1, const char* const &v2) \n    {\n        return strcmp(p1, p2);\n    }\n    ```\n    **本质：**\n    本质是实例化一个模板，而非重载它。特例化不影响参数匹配。参数匹配都以最佳匹配为原则，例如，此处如果是compare(3,5)，则调用普通的模板，若为compare(hi\",haha\")，则调用特例化版本(因为这个`cosnt char*`相对于T，更匹配实参类型)，注意二者函数体的语句不一样了，实现不同功能。\n    **注意：**\n    模板及其特例化版本应该声明在同一个头文件中，且所有同名模板的声明应该放在前面，后面放特例化版本。\n2. 类模板特例化\n    原理类似函数模板，不过在类中，我们可以对模板进行特例化，也可以对类进行部分特例化。对类进行特例化时，仍然用template表示是一个特例化版本，例如：\n    ```c++\n    template<>\n    class hash<sales_data>\n    {\n        size_t operator()(sales_data& s);\n        //里面所有T都换成特例化类型版本sales_data\n        /* 按照最佳匹配原则,若T != sales_data,就用普通类模板,否则,就使用含有特定功能的\n        特例化版本。 */\n    }\n    ```\n**类模板的部分特例化**\n不必为所有模板参教提供实参，可以指定一部分而非所有模板参数，一个类模板的部分特例化本身仍是一个模板，使用它时还必须为其特例化版本中未指定的模板参数提供实参(特例化时类名一定要和原来的模板相同，只是参数类型不同，按最佳匹配原则，哪个最匹配，就用相应的模板)\n**特例化类中的部分成员**\n可以特例话类中的部分成员函数而不是整个类，举个例子：\n\t```c++\n\ttemplate<typename T> \n\tclass Foo \n\t{\n\t\tvoid BarO();\n\t\tvoid Barst(T a) ();\n\t};\n\ttemplate<>\n\tvoid Foocint::Bar()\n\t{\n\t\t//1进行int类型的特例化处理\n\t\tcout <<\"我是int型特例化\"<<end1;\n\t}\n\tFoo<string> fs;\n\tFoo<int> fi;//使用特例化\n\tfs. BarO);//使用的是普通模板,即Foo<string>::BarO\n\tfi.BarO);//特例化版本,执行Foo(int : :BarO)\n\t//Foo<string>:: Bar()和Foocintx::Bar()功能不同\n\t```\n\n# 24. c和c++的类型安全？\n**什么是类型安全？**\n类型安全很大程度上可以等价于内存安全，类型安全的代码不会试图访问自己没被授权的内存区域。\"类型安全\"常被用来形容编程语言，其根据在于该门编程语言是否提供保障类型安全的机制；有的时候也用\"类型安全\"形容某个程序，判别的标准在于该程序是否隐含类型错误，类型安全的编程语言与类型安全的程序之间没有必然联系。好的程序员可以使用类型不那么安全的语言写出类型相当安全的程序，相反的，差一点儿的程序员可能使用类型相当安全的语言写出类型不太安全的程序，绝对类型安全的编程语言暂时还没有。\n1. c的类型安全\n    c只在局部上下文中表现出类型安全，比如试图从一种结构体的指针转换为另外一种结构体的指针时，编译器将会报错，除非使用显示类型转换。\n    - printf格式输出\n    ```c++\n\tprintf(\"整型数:%d\\n\",10);\n\tprintf(\"浮点型数:%f\\n\",10);\n\t```\n    上述代码中，使用%d控制整型数字的输出，没有问题，但是改成%时，明显输出错误，再改成%s时，运行直接报segmentation fault错误。\n    - malloc函数的返回值\n    malloc是C中进行内存分配的函数，它的返回类型是void *，即空类型指针,常常有这样的用法char *p = (char *)malloc(100 * sizeof(char));这里明显做了显式的类型转换。类型匹配尚且没有问题,但是一旦出现int* p=(int*)malloc(100*sizeof(char));就很可能带来一些问题,而这样的转换C并不会提示错误。。\n2. c++的类型安全\n    如果c++使用得当，它将远比c更有类型安全性。相比于c语言， c++提供了一些新的机制保障类型安全：\n    - 操作符new返回的指针类型严格与对象匹配，而不是void *；\n    - c中很多以*void **为参数的函数可以改写为c++模板函数，而模板是支持类型检查的；\n    - 引入const关键字代替#define constants，它是有类型、有作用域的，而#define constants只是简单的文本替换；\n    - 一些#define宏可被改写为inline函数，结合函数的重载，可在类型安全的前提下支持多种类型，当然改写为模板也能保证类型安全；\n    - c++提供了dynamic_cast关键字，使得转换过程更加安全，因为dynamic_cast比static_cast涉及更多具体的类型检查。\n\n# 25. 大小端存储？\n大端存储：字数据的高字节存储在低地址中；\n小端存储：字数据的低字节存储在低地址中。\n**两种判断大小端存储的方法**\n1. 使用强制类型转换\n    ```c++\n    #include <iostream> \n    using namespace std;\n\n    int main()\n    {\n        int a = 0x1234;\n        //亩于int和char的长度不同,借助int型转换成char型,只会留下低地址的部分\n        char c = (char)a;\n        if (C == 0x12)\n            cout << \"big endian\" << endl;\n        else if(C == 0x34)\n            cout << \"little endian\" << endl;\n\n        return 0;\n    }\n    ```\n2. 巧用union联合体\n    ```c++\n    #include <iostream>\n    using namespace std;\n    //union联合体的重叠式存储, endian联合体占用内存的空间为每个成员字节长度的最大值\n    union endian\n    {\n        int a;\n        char ch;\n    };\n\n    int main()\n    {\n        endian value;\n        value.a =0x1234;\n        //a和ch共用4字节的内存空间\n        if (value.ch ==0x12)\n            cout << \"big endian\" << endl;\n        else if (value.ch == 0x34)\n            cout << \"Tittle endian\" << endl;\n        \n        return 0;\n    }\n    ```\n\n# 26. c++内存分区？\n**堆**\n在执行函数时，函数内局部变量的存储单元都可以在栈上创建，函数执行结束时这些存储单元自动被释放。栈内存分配运算内置于处理器的指令集中，效率很高，但是分配的内存容量有限；\n**栈**\n就是那些由new分配的内存块，他们的释放编译器不去管，由我们的应用程序去控制，一般一个new就要对应一个delete。如果程序员没有释放掉，那么在程序结束后，操作系统会自动回收；\n**自由存储区**\n就是那些由malloc等分配的内存块，它和堆是十分相似的，不过它是用free来结束自己的生命的；\n**全局/静态存储区**\n全局变量和静态变量被分配到同一块内存中，在以前的C语言中，全局变量和静态变量又分为初始化的和未初始化的，在c++里面没有这个区分了，它们共同占用同一块内存区，在该区定义的变量若没有初始化，则会被自动初始化，例如int型变量自动初始为0；\n**常量存储区**\n这是一块比较特殊的存储区,，这里面存放的是常量，不允许修改；\n**代码段**\n存放函数体的二进制代码\n\n# 27. 形参和实参？\n- 形参变量只有在被调用时才分配内存单元，在调用结束时，即刻释放所分配的内存单元。因此，形参只有在函数内部有效。函数调用结束返回主调函数后则不能再使用该形参变量；\n- 实参可以是常量、变量、表达式、函数等，无论实参是何种类型的量，在进行函数调用时，它们都必须具有确定的值，以便把这些值传送给形参。因此应预先用赋值，输入等办法使实参获得确定值，会产生一个临时变量；\n- 实参和形参在数量上、类型上、顺序上应严格一致，否则会发生\"类型不匹配\"的错误；\n- 函数调用中发生的数据传送是单向的。即只能把实参的值传送给形参，而不能把形参的值反向地传送给实参。因此在函数调用过程中，形参的值发生改变，而实参中的值不会变化；\n- 当形参和实参不是指针类型时，在该函数运行时，形参和实参是不同的变量，他们在内存中位于不同的位置，形参将实参的内容复制一份，在该函数运行结束的时候形参被释放，而实参内容不会改变。\n\n# 28. 值传递、指针传递、引用传递的区别和效率？\n- 值传递：有一个形参向函数所属的栈拷贝数据的过程，如果值传递的对象是类对象或是大的结构体对象，将耗费一定的时间和空间(传值)。\n- 指针传递：同样有一个形参向函数所属的栈拷贝数据的过程，但拷贝的数据是一个固定为4字节的地址(传值,传递的是地址值)；\n- 引用传递：同样有上述的数据拷贝过程，但其是针对地址的，相当于为该数据所在的地址起了一个别名(传地址)；\n- 效率上讲，指针传递和引用传递比值传递效率高。一般主张使用引用传递，代码逻辑上更加紧凑、清晰。\n\n# 29. 深拷贝与浅拷贝？\n- 浅复制：只是拷贝了基本类型的数据,，而引用类型数据，复制后也是会发生引用，我们把这种拷贝叫做\" (浅复制)浅拷贝\" ，换句话说，浅复制仅仅是指向被复制的内存地址，如果原地址中对象被改变了，那么浅复制出来的对象也会相应改变；\n    深复制：在计算机中开辟了一块新的内存地址用于存放复制的对象；\n- 在某些状况下，类内成员变量需要动态开辟堆内存，如果实行位拷贝，也就是把对象里的值完全复制给另一个对象，如A-B，这时，如果B中有一个成员变量指针已经申请了内存，那A中的那个成员变量也指向同一块内存。这就出现了问题：当B把内存释放了(如：析构) ，这时A内的指针就是野指针了出现运行错误。\n\n# 30. 智能指针？\n**原理**\n智能指针是一个类，用来存储指向动态分配对象的指针，负责自动释放动态分配的对象，防止堆内存泄露。交给一个类对象区管理，当类对象生命周期结束时，自动调用析构函数释放资源。\n**常用的智能指针**\n1. **shared_ptr**\n    实现原理：**采用引用计数器的方法**，允许多个智能指针指向同一个对象，每当多一个指针指向该对象时，指向该对象的所有智能指针内部的引用计数加1，每当减少一个智能指针指向对象时，引用计数会减1，当计数为0的时候会自动释放动态分配的资源。\n    - 智能指针将一个计数器与类指向的对象相关联，引用计数器跟踪共有多少个类对象共享同一指针；\n    - 每次创建类的新对象时，初始化指针并将引用计数置为1；\n    - 当对象作为另一对象的副本而创建时，拷贝构造函数拷贝指针并增加与之相应的引用计数；\n    - 对一个对象进行赋值时，赋值操作符减少左操作数所指对象的引用计数（如果引用计数为减至0，则删除对象），并增加右操作数所指对象的引用计数；\n    - 调用析构函数时，构造函数减少引用计数（如果引用计数减至0，则删除基础对象）。\n2. **unique_pt**\n    unique_ptr采用的是独享所有权语义，一个非空的unique_ptr总是拥有它所指向的资源。转移一个unique_ptr将会把所有权全部从源指针转移给目标指针，源指针被置空；所以**unique_ptr不支持普通的拷贝和赋值操作**，不能用在STL标准容器中；局部变量的返回值除外（因为编译器知道要返回的对象将要被销毁）；如果你拷贝一个unique_ptr，那么拷贝结束后，这两个unique_ptr都会指向相同的资源，造成在结束时对同一内存指针多次释放而导致程序崩溃。\n3. **weak_ptr**\n    weak_ptr：弱引用。 引用计数有一个问题就是互相引用形成环（环形引用），这样两个指针指向的内存都无法释放。需要使用weak_ptr打破环形引用。**weak_ptr是一个弱引用，它是为了配合shared_ptr而引入的一种智能指针**，它指向一个由shared_ptr管理的对象而不影响所指对象的生命周期，也就是说，它只引用，不计数。如果一块内存被shared_ptr和weak_ptr同时引用，当所有shared_ptr析构了之后，不管还有没有weak_ptr引用该内存，内存也会被释放。所以weak_ptr不保证它指向的内存一定是有效的，在使用之前使用函数lock()检查weak_ptr是否为空指针。\n4. **auto_ptr**\n    **auto_ptr不支持拷贝和赋值操作**，不能用在STL标准容器中。STL容器中的元素经常要支持拷贝、赋值操作，在这过程中auto_ptr会传递所有权，auto_ptr采用的是独享所有权语义，一个非空的unique_ptr总是拥有它所指向的资源。转移一个auto_ptr将会把所有权全部从源指针转移给目标指针，源指针被置空。\n**智能指针代码实现：** 用两个类来实现智能指针的功能，一个是引用计数类，另一个则是指针类。\n**引用计数类**\n\t```c++\n\t//引用计数器类用于存储指向同一对象的指针数\n\ttemplate<typename T>\n\tclass Counter\n\t{\n\tprivate:\n\t\t//数据成员\n\t\tT *ptr;//对象指针\n\t\tint cnt; // 引用计数器1\n\t\t//友元类声明\n\t\ttemplate<typename T>\n\t\tfriend class SmartPtr;\n\t\t//构造函数\n\t\tCounter(T *p)\n\t\t{\n\t\t\tptr =p;\n\t\t\tcnt = 1;\n\t\t}\n\t\t//折构函数\n\t\t~Counter()\n\t\t{\n\t\t\tdelete ptr;\n\t\t}\n\t}\n\t```\n**指针类**\n\t```c++\n\ttemplate<typename T>\n\tclass SmartPtr\n\t{\n\tprivate:\n\t\t//数据成员\n\t\tCounter<T> ptr_cnt;\n\tpublic:\n\t\t//普通构造函数 初始化计数类\n\t\tSmartPtr(T *p)\n\t\t{\n\t\t\tptr_cnt = new Counter<T>(p);\n\t\t}\n\t\t//拷贝构造函数\n\t\tSmartPtr(const SmartPtr &other)\n\t\t{\n\t\t\tptr_cnt = other.ptr_cnt;\n\t\t\tptr_cnt->cnt++;\n\t\t}\n\t\t//赋值运算符重载函数\n\t\tSmartPtr &operator=(const SmartPtr &rhs)\n\t\t{\n\t\t\tptr_cnt = rhs->ptr_cnt;\n\t\t\trhs.ptr cnt->cnt++;\n\t\t\tptr_cnt->cnt--;\n\t\t\tif (ptr_cnt->cnt == 0)\n\t\t\t\tdelete ptr_cnt;\n\t\t\treturn *this;\n\t\t}\n\t\t//解引用运算符重载函数\n\t\tT &operator*()\n\t\t{\n\t\t\treturn *(ptr_cnt->cnt);\n\t\t}\n\t\t//析构函数\n\t\t~SmartPtr()\n\t\t{\n\t\t\tptr_cnt->cnt--;\n\t\t\tif(ptr_cnt->cnt == 0){\n\t\t\t\tdelete ptr_cnt;\n\t\t\t}else{\n\t\t\t\tcout << \"还有\" << ptr_cnt->cnt << \"个指针指向基础对象\" << endl;\n\t\t\t}\n\t\t}\n\t}\n\t```\n\n# 31. 函数指针？\n**定义：**函数指针是指向函数的指针变量。 因此“函数指针”本身首先应是指针变量，只不过该指针变量指向函数。这正如用指针变量可指向整型变量、字符型、数组一样，这里是指向函数。\n**有两个用途：**调用函数和做函数的参数。\n**声明方法：**\n返回值类型 (* 指针变量名) (形参列表);\ntypedef int (*fun)(int, int);  // 声明一个指向同样参数、返回值的函数指针类型\ntypedef int(fun)(int, int);  //声明一种函数类型\n**注1：**“返回值类型”说明函数的返回类型，“(指针变量名 )”中的括号不能省，括号改变了运算符的优先级。若省略整体则成为一个函数说明，说明了一个返回的数据类型是指针的函数，后面的“形参列表”表示指针变量指向的函数所带的参数列表。                         **注2：**函数括号中的形参可有可无，视情况而定。\n**指向函数的指针变量没有++和--运算。**\n\n# 32. c/c++语言编译四步骤？\n**预编译**\n主要处理源代码文件中的以“#”开头的预编译指令。处理规则见下：\n1. 删除所有的#define，展开所有的宏定义；\n2. 处理所有的条件预编译指令，如“#if”、“#endif”、“#ifdef”、“#elif”和“#else”；\n3. 处理“#include”预编译指令，将文件内容替换到它的位置，这个过程是递归进行的，文件中包含其他文件；\n4. 删除所有的注释，“//”和“/**/”；\n5. 保留所有的#pragma 编译器指令，编译器需要用到他们，如：#pragma once 是为了防止有文件被重复引用；\n6. 添加行号和文件标识，便于编译时编译器产生调试用的行号信息，和编译时产生编译错误或警告是能够显示行号。\n**编译**\n把预编译之后生成的.i或.ii文件，进行一系列词法分析、语法分析、语义分析及优化后，生成相应的汇编代码文件。\n1. 词法分析：利用类似于“有限状态机”的算法，将源代码程序输入到扫描机中，将其中的字符序列分割成一系列的记号；\n2. 语法分析：语法分析器对由扫描器产生的记号，进行语法分析，产生语法树。由语法分析器输出的语法树是一种以表达式为节点的树；\n3. 语义分析：语法分析器只是完成了对表达式语法层面的分析，语义分析器则对表达式是否有意义进行判断，其分析的语义是静态语义——在编译期能分期的语义，相对应的动态语义是在运行期才能确定的语义；\n4. 优化：源代码级别的一个优化过程；\n5. 目标代码生成：由代码生成器将中间代码转换成目标机器代码，生成一系列的代码序列——汇编语言表示；\n6. 目标代码优化：目标代码优化器对上述的目标机器代码进行优化：寻找合适的寻址方式、使用位移来替代乘法运算、删除多余的指令等。\n**汇编**\n将汇编代码转变成机器可以执行的指令(机器码文件)。 汇编器的汇编过程相对于编译器来说更简单，没有复杂的语法，也没有语义，更不需要做指令优化，只是根据汇编指令和机器指令的对照表一一翻译过来，汇编过程由汇编器as完成。经汇编之后，产生目标文件(与可执行文件格式几乎一样).o(Windows下)、.obj(Linux下)。\n**链接**\n将不同的源文件产生的目标文件进行链接，从而形成一个可以执行的程序。链接分为静态链接和动态链接。\n1. 静态链接\n    函数和数据被编译进一个二进制文件。在使用静态库的情况下，在编译链接可执行文件时，链接器从库中复制这些函数和数据并把它们和应用程序的其它模块组合起来创建最终的可执行文件。\n    空间浪费：因为每个可执行程序中对所有需要的目标文件都要有一份副本，所以如果多个程序对同一个目标文件都有依赖，会出现同一个目标文件都在内存存在多个副本；\n    更新困难：每当库函数的代码修改了，这个时候就需要重新进行编译链接形成可执行程序。\n    运行速度快：但是静态链接的优点就是，在可执行程序中已经具备了所有执行程序所需要的任何东西，在执行的时候运行速度快。\n2. 动态链接\n    动态链接的基本思想是把程序按照模块拆分成各个相对独立部分，在程序运行时才将它们链接在一起形成一个完整的程序，而不是像静态链接一样把所有程序模块都链接成一个单独的可执行文件。\n    共享库：就是即使需要每个程序都依赖同一个库，但是该库不会像静态链接那样在内存中存在多分，副本，而是这多个程序在执行时共享同一份副本；\n    更新方便：更新时只需要替换原来的目标文件，而无需将所有的程序再重新链接一遍。当程序下一次运行时，新版本的目标文件会被自动加载到内存并且链接起来，程序就完成了升级的目标。\n    性能损耗：因为把链接推迟到了程序运行时，所以每次执行程序都需要进行链接，所以性能会有一定损失。","slug":"c++面经","published":1,"updated":"2022-04-15T08:13:39.250Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl206jlhv0006pkvn387v5lar","content":"<p>c/c++面经</p>\n<span id=\"more\"></span>\n\n<h1 id=\"1-在main执行之前和之后执行的代码可能是什么？\"><a href=\"#1-在main执行之前和之后执行的代码可能是什么？\" class=\"headerlink\" title=\"1. 在main执行之前和之后执行的代码可能是什么？\"></a>1. <strong>在main执行之前和之后执行的代码可能是什么？</strong></h1><p>main执行之前：主要是初始化系统相关资源</p>\n<ul>\n<li>设置栈指针；</li>\n<li>初始化静态static变量和global全局变量,即.data段的内容；</li>\n<li>将未初始化部分的全局变量赋初值：数值型short , int , long等为0 , bool为FALSE ,指针为NULL等等，即.bss段的内容；</li>\n<li>全局对象初始化,在main之前调用构造函数，这是可能会执行前的一些代码；</li>\n<li>将main函数的参数argc, argv等传递给main函数,然后才真正运行main函数；</li>\n<li><em><strong>ttribute</strong></em>(constructor)。 </li>\n</ul>\n<p>main函数执行之后</p>\n<ul>\n<li>全局对象的析构函数会在main函数之后执行；</li>\n<li>可以用atexit注册一个函数,它会在main之后执行；</li>\n<li><em><strong>attribute</strong></em>(destructor)。</li>\n</ul>\n<h1 id=\"2-结构体内存对齐问题？\"><a href=\"#2-结构体内存对齐问题？\" class=\"headerlink\" title=\"2. 结构体内存对齐问题？\"></a>2. 结构体内存对齐问题？</h1><ul>\n<li>结构体内成员按照声明顺序存储，第一个成员地址和整个结构体地址相同。</li>\n<li>未特殊说明时,按结构体中size最大的成员对齐(若有double成员,按8字节对齐)。</li>\n</ul>\n<h1 id=\"3-指针和引用的区别？\"><a href=\"#3-指针和引用的区别？\" class=\"headerlink\" title=\"3. 指针和引用的区别？\"></a>3. 指针和引用的区别？</h1><ul>\n<li>指针是一个变量，存储的是一个地址，引用跟原来的变量实质上是同一个东西,是原变量的别名；</li>\n<li>指针可以有多级，引用只有一级；</li>\n<li>指针可以为空，引用不能为NULL且在定义时必须初始化；</li>\n<li>指针在初始化后可以改变指向，而引用在初始化之后不可再改变；</li>\n<li>sizeof指针得到的是本指针的大小，sizeof引用得到的是引用所指向变量的大小；</li>\n<li>当把指针作为参数进行传递时，也是将实参的一个拷贝传递给形参，两者指向的地址相同,但不是同一个变量，在函数中改变这个变量的指向不影响实参，而引用却可以；</li>\n<li>引用只是别名，不占用具体存储空间，只有声明没有定义；指针是具体变量,需要占用存储空间(但这也只是一般情况下,具体情况还要具体分析)；</li>\n<li>引用在声明时必须初始化为另一变量，一旦出现必须为typename refname &amp;varname形式；指针声明和定义可以分开，可以先只声明指针变量而不初始化，等用到时再指向具体变量；</li>\n<li>引用一旦初始化之后就不可以再改变(变量可以被引用为多次，但引用只能作为一个变量引用)指针变量可以重新指向别的变量；</li>\n<li>不存在指向空值的引用，必须有具体实体；但是存在指向空值的指针。</li>\n</ul>\n<h1 id=\"4-堆和栈的区别？\"><a href=\"#4-堆和栈的区别？\" class=\"headerlink\" title=\"4. 堆和栈的区别？\"></a>4. 堆和栈的区别？</h1><ul>\n<li>申请方式不同<ol>\n<li>栈由系统自动分配释放；</li>\n<li>堆由程序员手动申请释放。</li>\n</ol>\n</li>\n<li>申请大小限制不同<ol>\n<li>栈顶和栈底是之前预设好的，栈是向栈底扩展，大小固定，可以通过ulimit-a查看，由ulimit-s修改；</li>\n<li>堆向高地址扩展，是不连续的内存区域，大小可以灵活调整。</li>\n</ol>\n</li>\n<li>申请效率不同<ol>\n<li>栈由系统分配，速度快，不会有碎片；</li>\n<li>堆由程序员手动分配，速度慢，且会有碎片。</li>\n</ol>\n</li>\n<li>栈空间默认是4M；堆区一般是1-4G。</li>\n</ul>\n<h1 id=\"5-指针？\"><a href=\"#5-指针？\" class=\"headerlink\" title=\"5. 指针？\"></a>5. 指针？</h1><ul>\n<li>int *p[10]; ：数组指针，是一个数组变量，数组大小为10，组内每个元素都是指向int类型的指针变量；</li>\n<li>int (*)p[10];：数组指针，是一个指针类型变量，指向的是一个int类型的数组，这个数组的大小是10；</li>\n<li>int *p(int);：函数声明，函数名是p，参数是int类型的，返回值是int *类型的；</li>\n<li>int (*p)(int);：函数指针，指向的函数具有int类型参数，并且返回值是int类型的。</li>\n</ul>\n<h1 id=\"6-基类的虚函数表存放在内存的什么区，虚表指针vptr的初始化时间？\"><a href=\"#6-基类的虚函数表存放在内存的什么区，虚表指针vptr的初始化时间？\" class=\"headerlink\" title=\"6. 基类的虚函数表存放在内存的什么区，虚表指针vptr的初始化时间？\"></a>6. 基类的虚函数表存放在内存的什么区，虚表指针vptr的初始化时间？</h1><p>首先整理一下虚函数表的特征：</p>\n<ul>\n<li>虚函数表是全局共享的元素,即全局仅有一个,在编译时就构造完成；</li>\n<li>虚函数表类似一个数组,类对象中存储vptr指针,指向虚函数表,即虚函数表不是函数,不是程序代码,不可能存储在代码段；</li>\n<li>虚函数表存储虚函数的地址,即虚函数表的元素是指向类成员函数的指针,而类中虚函数的个数在编译时期可以确定,即虚函数表的大小可以确定,即大小是在编译时期确定的,不必动态分配内存空间存储虚函数表,所以不在堆中。</li>\n<li>根据以上特征,虚函数表类似于类中静态成员变量静态成员变量也是全局共享,大小确定,因此最有可能存在全局数据区,测试结果显示：</li>\n</ul>\n<ol>\n<li>虚函数表vtable在Linux/Unix中存放在可执行文件的只读数据段中(rodata),这与微软的编译器将虚函数表存放在常量段存在一些差别；</li>\n<li>由于虚表指针yptr跟虚函数密不可分,对于有虚函数或者继承于拥有虚函数的基类,对该类进行实例化时,在构造函数执行时会对虚表指针进行初始化,并且存在对象内存布局的最前面。<br>一般分为五个区域：栈区、堆区、函数区(存放函数体等二进制代码)、全局静态区、常量区。</li>\n</ol>\n<ul>\n<li>C++中虚函数表位于只读数据段( .rodata)，也就是C++内存模型中的常量区;而虚函数则位于代码段(.text)，也就是C++内存模型中的代码区。</li>\n</ul>\n<h1 id=\"7-new-delete与malloc-free？\"><a href=\"#7-new-delete与malloc-free？\" class=\"headerlink\" title=\"7. new/delete与malloc/free？\"></a>7. <strong>new/delete</strong>与<strong>malloc/free？</strong></h1><ul>\n<li>相同点：<br>  1.都可用于内存的动态申请和释放。</li>\n<li>不同点：<br>  1.new/delete是c++运算符，malloc/free是c/c++语言标准库函数；<br>  2.new自动计算要分配的空间大小，malloc需要手工计算；<br>  3.new是类型安全的，malloc不是；  <figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> *p = <span class=\"keyword\">new</span> <span class=\"keyword\">float</span>[<span class=\"number\">2</span>];  <span class=\"comment\">//编译错误</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> *p = (<span class=\"keyword\">int</span> *)<span class=\"built_in\">malloc</span>(<span class=\"number\">2</span> * <span class=\"built_in\"><span class=\"keyword\">sizeof</span></span>(<span class=\"keyword\">double</span>)); <span class=\"comment\">//编译无错误</span></span><br></pre></td></tr></table></figure>\n  4.new调用名为operator new的标准库函数分配足够空间并调用相关对象的构造函数，delete堆指针所指对象运行适当的析构函数，然后提供调用名为operator delete的标准库函数释放该对象所用内存，malloc/free无相关调用；<br>  5.malloc/free需要库文件支持，new/delete不需要；<br>  6.new是封装了malloc，直接free不会报错，但只是释放内存，而不会析构对象。</li>\n</ul>\n<h1 id=\"8-new和delete的实现？\"><a href=\"#8-new和delete的实现？\" class=\"headerlink\" title=\"8. new和delete的实现？\"></a>8. new和delete的实现？</h1><ul>\n<li>new的实现过程是：首先调用名为operator new的标准库函数，分配足多大的原始为类型化的内存，以保存指定类型的一个对象；接下来运行该类型的一个构造函数，用指定初始化构造对象；最后返回指向新分配井构造后的的对象的指针；</li>\n<li>delete的实现过程：对指针指向的对象运行适当的析构函数；然后通过调用名为operator delete的标准库函数释放该对象所用内存。</li>\n</ul>\n<h1 id=\"9-malloc和new的区别\"><a href=\"#9-malloc和new的区别\" class=\"headerlink\" title=\"9. malloc和new的区别?\"></a>9. malloc和new的区别?</h1><ul>\n<li>malloc和free是标准库函数，支持覆盖；new和delete是运算符，并且支持重载；</li>\n<li>malloc仅仅分配内存空间，free仅仅回收空间，不具备调用构造函数和析构函数功能，用malloc分配空间存储类的对象存在风险；new和delete除了分配回收功能外，还会调用构造函数和析构函数；</li>\n<li>mallac和free返回的是void类型指针(必须进行类型转换)， new和delete返回的是具体类型指针。</li>\n</ul>\n<p><em><strong>delete和delete[]的区别？</strong></em></p>\n<ul>\n<li>delete只会调用一次析构函数；</li>\n<li>delete[]会调用数组中每个元素的析构函数。</li>\n</ul>\n<h1 id=\"10-宏定义和函数？\"><a href=\"#10-宏定义和函数？\" class=\"headerlink\" title=\"10. 宏定义和函数？\"></a>10. 宏定义和函数？</h1><ul>\n<li>宏在编译时完成替换，之后被替换的文本参与编译，相当于直接插入了代码，运行时不存在函数调用，执行起来更快；函数调用在运行时需要跳转到具体函数中调用函数；</li>\n<li>宏定义属于在结构中插入代码，没有返回值；函数调用具有返回值；</li>\n<li>宏定义参数没有类型，不进行类型检查；函数参数具有类型，需要进行类型检查；</li>\n<li>宏定义不需要在最后加分号。</li>\n</ul>\n<h1 id=\"11-宏定义和typedef？\"><a href=\"#11-宏定义和typedef？\" class=\"headerlink\" title=\"11. 宏定义和typedef？\"></a>11. 宏定义和typedef？</h1><ul>\n<li>宏定义主要用于定义常量及书写复杂的内容；typedef主要用于定义类型别名；</li>\n<li>宏替换发生在编译阶段之前，属于文本插入替换；typedef时编译的一部分；</li>\n<li>宏不进行类型检查；typedef会检查数据类型；</li>\n<li>宏不是语句，不需要在最后加分号；typedef是语句，要加分号标识结束；</li>\n<li>对于指针操作时：  <figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> p_char char *：</span></span><br><span class=\"line\">p_char p1,p2; <span class=\"comment\">//p1类型为char *，p2类型为char。</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">char</span> * p_char：</span><br><span class=\"line\">p_char p1,p2; <span class=\"comment\">//p1,p2类型均为char *。</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h1 id=\"12-变量声明和定义？\"><a href=\"#12-变量声明和定义？\" class=\"headerlink\" title=\"12. 变量声明和定义？\"></a>12. 变量声明和定义？</h1><ul>\n<li>声明仅仅是把变量的声明问位置及类型提供给编译器，并不分配内存空间；定义要在定义的地方为其分配存储空间；</li>\n<li>相同变量可以在多处声明(外部变量extern)，但定义只能在一处定义。</li>\n</ul>\n<h1 id=\"13-必须用到初始化成员列表的情况？\"><a href=\"#13-必须用到初始化成员列表的情况？\" class=\"headerlink\" title=\"13. 必须用到初始化成员列表的情况？\"></a>13. 必须用到初始化成员列表的情况？</h1><ul>\n<li>初始化一个reference成员；</li>\n<li>初始化一个const成员；</li>\n<li>调用一个基类的构造函数，而该函数有一组参数；<blockquote>\n<p>通俗的就是，如果基类没有构造函数，派生类的初始化列表必须初始化基类，必须用基类的构造函数构造一个。因为派生类继承基类时，会先构造基类，然后在构造派生类，如果基类不是默认的构造函数，那么就不知道基类到底咋构造，因此……</p>\n</blockquote>\n</li>\n<li>调用一个数据成员对象的构造函数，而该函数有一组参数。<blockquote>\n<p>列表初始化的顺序和书写顺序无关，只和变量的声明顺序有关。先声明哪个，就先初始化构造哪个。</p>\n</blockquote>\n</li>\n</ul>\n<h1 id=\"14-sizeof-和strlen-？\"><a href=\"#14-sizeof-和strlen-？\" class=\"headerlink\" title=\"14. sizeof()和strlen()？\"></a>14. sizeof()和strlen()？</h1><ul>\n<li>sizeof()是运算符，并不是函数，结果在编译时就已经得到，strlen()是字符串处理的库函数；</li>\n<li>sizeof()参数可以是任何数据的类型或者数据(sizeof参数不退化)；strlen()的参数只能是字符指针且结尾是’\\0’的字符串；</li>\n<li>sizeof()的值在编译时确定，所以不能用来得到动态分配(运行时分配)存储空间大小。  <figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *str = <span class=\"string\">&quot;name&quot;</span>;</span><br><span class=\"line\"><span class=\"built_in\"><span class=\"keyword\">sizeof</span></span>(str); <span class=\"comment\">//取的是指针str的长度，结果是4</span></span><br><span class=\"line\"><span class=\"built_in\">strlen</span>(str); <span class=\"comment\">//取得是这个字符串的长度，不包含结尾的&#x27;\\0&#x27;,结果是4</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h1 id=\"15-常量指针和指针常量？\"><a href=\"#15-常量指针和指针常量？\" class=\"headerlink\" title=\"15. 常量指针和指针常量？\"></a>15. 常量指针和指针常量？</h1><ul>\n<li>常量指针：指向常量的指针，顾名思义，就是指针指向的是常量，即，它不能指向变量，它指向的内容不能被改变，不能通过指针来修改它指向的内容，但是指针自身不是常量，它自身的值可以改变，从而可以指向另一个常量，如int const *p或const int *p；</li>\n<li>指针常量：指针本身是常量。它指向的地址是不可改变的，但地址里的内容可以通过指针改变。它指向的地址将伴其一生，直到生命周期结束。有一点需要注意的是，指针常量在定义时必须同时赋初值，如int *const p。</li>\n</ul>\n<h1 id=\"16-a和-amp-a？\"><a href=\"#16-a和-amp-a？\" class=\"headerlink\" title=\"16. a和&amp;a？\"></a>16. a和&amp;a？</h1><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> a[<span class=\"number\">10</span>];</span><br><span class=\"line\"><span class=\"built_in\"><span class=\"keyword\">int</span></span> (*p)[<span class=\"number\">10</span>] = &amp;a;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>a是数组名，是数组首元素的地址，a+1表示地址值加1个int类型的大小，如果a的地址是0x00000001,+1后操作后变为0x00000005，*(a+1) = a[1]；</li>\n<li>&amp;a是数组的指针，其类型为int(*)10] (就是前面提到的数组指针) ，其加1时,系统会认为是数组首地址加上整个数组的偏移(10个int型变量)，值为数组a尾元素后一个元素的地址。</li>\n<li>若(int <em>)p，此时输出</em>p时，其值为a[0]的值，因为被转为int *类型，解引用时按照int类型大小来读取。</li>\n</ul>\n<h1 id=\"17-数组名和指针？\"><a href=\"#17-数组名和指针？\" class=\"headerlink\" title=\"17. 数组名和指针？\"></a>17. 数组名和指针？</h1><ul>\n<li>二者均可通过增减偏移量来访问数组中的元素；</li>\n<li>数组名不是真正意义上的指针，可以理解为常指针，所以数组名没有自增、自减等操作；</li>\n<li>当数组名当中形参传给调用函数后，就是去了原有的特性，退化成一般指针，多了自增、自检操作，但sizeof运算符不能再得到原数组的大小了。</li>\n</ul>\n<h1 id=\"18-野指针和悬空指针？\"><a href=\"#18-野指针和悬空指针？\" class=\"headerlink\" title=\"18. 野指针和悬空指针？\"></a>18. 野指针和悬空指针？</h1><p>都是指向无效内存区域(无效指”不安全不可控”)的指针，访问行为将会导致未定义行为。<br><strong>野指针：</strong>指的是没有被初始化或的指针<br>    <figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> *p; <span class=\"comment\">//未初始化</span></span><br><span class=\"line\">std::cout&lt;&lt;*p&lt;&lt;endl; <span class=\"comment\">//访问野指针</span></span><br></pre></td></tr></table></figure><br>为了防止出错，对于指针初始化时都是赋值为NULL，这样在访问时编译器会直接报”非法内存访问”的错误；<br><strong>悬空指针：</strong>指针最初指向的内存已被释放了的一种指针<br>    <figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> *p1 = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> *p2 = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>;</span><br><span class=\"line\">p1 = p2;</span><br><span class=\"line\"><span class=\"keyword\">delete</span> p2;</span><br></pre></td></tr></table></figure><br>此时p1和p2就是悬空指针，指向的内存已被释放，继续使用这两个指针，行为不可预测，需要设置p1=p2=NULL。<br><strong>产生原因及解决办法：</strong></p>\n<ol>\n<li>野指针：指针变量未及时初始化⇒定义指针变量及时初始化；</li>\n<li>悬空指针：指针free或者delete之后没有及时置空⇒释放后立即置空。</li>\n<li>c和c++？<ul>\n<li>C++中new和delete是对内存分配的运算符，取代了C中的malloc和free；</li>\n<li>标准C++中的字符串类取代了标准C函数库头文件中的字符数组处理函数(C中没有字符串类型)；</li>\n<li>C++中用来做控制态输入输出的iostream类库替代了标准C中的stdio函教库；</li>\n<li>C++中的try/catch/throw异常处理机制取代了标准C中的setjmp()和longimp()函数；</li>\n<li>在C++中，允许有相同的函数名，不过它们的参数类型不能完全相同，这样这些函数就可以相互区别开来。而这在C语言中是不允许的。也就是C++可以重载，C语言不允许；</li>\n<li>C++语言中，允许变量定义语句在程序中的任何地方，只要在是使用它之前就可以；而C语言中,必须要在函数开头部分。而且C++允许重复定义变量，C语言也是做不到这一点的；</li>\n<li>在C++中，除了值和指针之外，新增了引用，引用型变量是其他变量的一个别名，我们可以认为他们只是名字不相同，其他都是相同的；</li>\n<li>C++相对与C增加了一些关键字，如: bool, using, namespace等等。</li>\n</ul>\n</li>\n</ol>\n<h1 id=\"19-c-中struct和class？\"><a href=\"#19-c-中struct和class？\" class=\"headerlink\" title=\"19. c++中struct和class？\"></a>19. c++中struct和class？</h1><p><strong>相同点：</strong></p>\n<ul>\n<li>两者都拥有成员函数、公有和私有部分；</li>\n<li>任何可以使用class完成的工作，同样可以用struct完成。</li>\n</ul>\n<p><strong>不同点：</strong></p>\n<ul>\n<li>struct默认是公有的，class默认是私有的；</li>\n<li>struct默认是public继承，class默认是private继承；</li>\n<li>class可以作为模板类型，struct不行。</li>\n</ul>\n<p><strong>c++和c的struct区别：</strong></p>\n<ul>\n<li>c语言中，struct是用户自定义数据类型(UDT)；c++中struct是抽象数据类型(ADT)，支持成员函数的定义，c++中的struct能继承，能实现多态；</li>\n<li>c中struct是没有设置权限的设置的，且struct中只能是一些变量的集合体，可以封装数据却不可以隐藏数据，而且成员不可以是函数；</li>\n<li>c++中，struct增加了访问权限，且可以和类一样有成员函数，成员默认访问说明符为public(为了与c兼容)；</li>\n<li>struct作为类的一种特例是用来自定义数据结构的。一个结构标记声明后，在c中必须在结构标记前加上struct才能做结构类型名(除：typedef struct class{};)；c++中结构体标记(结构体名)可以直接作为结构体类型名使用，此外结构体struct在c++中被当作类的一种特例。</li>\n</ul>\n<h1 id=\"20-define宏定义和const？\"><a href=\"#20-define宏定义和const？\" class=\"headerlink\" title=\"20. define宏定义和const？\"></a>20. define宏定义和const？</h1><p><strong>编译阶段：</strong></p>\n<ul>\n<li>define是在编译阶段的预处理阶段起作用，而const是在编译、运行的时候起作用；</li>\n</ul>\n<p><strong>安全性：</strong></p>\n<ul>\n<li>define只做替换，不做类型检查和计算，也不求解，容易产生错误，一般最好加上大括号包含住全部的内容，不然容易出错；</li>\n<li>const常量有数据类型，编译器可以对其进行类型安全检查；</li>\n</ul>\n<p><strong>内存占用：</strong></p>\n<ul>\n<li>define只是将宏名称进行替换，在内存中会产生多份相同的备份；const在程序运行中只有一份备份，且可以执行常量折叠，能将复杂的表达式计算出结果放入常量表；</li>\n<li>宏替换发生在编译阶段之前，属于文本插入替换；const作用发生于编译过程中；</li>\n<li>宏不检查类型；const会检查数据类型；</li>\n<li>宏定义的数据没有分配内存空间，只是插入替换掉；从上图定义的变量只是值不能改变，但要分配内存空间。</li>\n</ul>\n<h1 id=\"21-c-中static？\"><a href=\"#21-c-中static？\" class=\"headerlink\" title=\"21. c++中static？\"></a>21. c++中static？</h1><p><strong>不考虑类的情况</strong></p>\n<ol>\n<li>隐藏。所有不加static的全局变量和函数具有全局可见性，可以在其它文件中使用，加了之后只能在该文件所在的编译模块中使用；</li>\n<li>默认初始话为0，包括未初始化的全局静态变量与局部静态变量，都存在全局未初始化区；</li>\n<li>静态变量在函数内定义，始终存在，且只进行一次初始化，具有记忆性，其作用范围与局部变量相同，函数退出后仍然存在，但不能使用；</li>\n</ol>\n<p><strong>考虑类的情况</strong></p>\n<ol>\n<li>static成员变量：只与类关联，不与类的对象关联。定义时要分配空间，不能在类声明中初始化，必须在类定义体外部初始化，初始化时不需要标识为static；可以被非static成员函数任意访问；</li>\n<li>static成员函数：不具有this指针，无法访问类对象的非static成员变量和非static成员函数；不能被声明为const，虚函数和volatile；可以被非static成员函数任意访问。</li>\n</ol>\n<h1 id=\"22-c-中const？\"><a href=\"#22-c-中const？\" class=\"headerlink\" title=\"22. c++中const？\"></a>22. c++中const？</h1><p><strong>不考虑类的情况</strong></p>\n<ol>\n<li>const常量在定义时必须初始化，之后无法更改；</li>\n<li>const形参可以接收const和非const类型的实参；</li>\n</ol>\n<p><strong>考虑类的情况</strong></p>\n<ol>\n<li>const成员变量：不能在类定义外部初始化，只能通过构造函数初始化列表进行初始化，并且必须有构造函数；不同类对其const数据成员的值可以不同，所以不能在类中声明时初始化；</li>\n<li>const成员函数：const对象不可以调用非const成员函数；非const对象都可以调用；不可以改变非mutable(用该关键字声明的变量可以在const成员函数中被修改)数据的值。</li>\n</ol>\n<h1 id=\"23-模板函数和模板类的特例话\"><a href=\"#23-模板函数和模板类的特例话\" class=\"headerlink\" title=\"23. 模板函数和模板类的特例话\"></a>23. 模板函数和模板类的特例话</h1><p><strong>引入原因：</strong><br>编写单一的模板，它能适应多种类型的需求，使每种类型都具有相同的功能，但对于某种特定类型，如果要实现其特有的功能，单一模板就无法做到，这时就需要模板特例化。<br><strong>定义：</strong><br>对单一模板提供的一个特殊实例，它将一个或多个模板参数绑定到特定的类型或值上。</p>\n<ol>\n<li>模板函数特例化<br> 必须为原函数模板的每个模板参数都提供实参，且使用关键字template后跟一个空尖括号对&lt;&gt;，表明将原模板的所有模板参数提供实参，举例如下： <figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">template</span>&lt;<span class=\"keyword\">typename</span> T&gt; <span class=\"comment\">//模板函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">compare</span><span class=\"params\">(<span class=\"keyword\">const</span> T &amp;vl, <span class=\"keyword\">const</span> T &amp;v2)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(v1 &gt; v2) <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(v2 &gt; v1) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//模板特例化,满足针对字符申特定的比较,要提供所有实参,这里只有一个T</span></span><br><span class=\"line\"><span class=\"keyword\">template</span>&lt;&gt;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">compare</span><span class=\"params\">(<span class=\"keyword\">const</span> <span class=\"keyword\">char</span>* <span class=\"keyword\">const</span> &amp;v1, <span class=\"keyword\">const</span> <span class=\"keyword\">char</span>* <span class=\"keyword\">const</span> &amp;v2)</span> </span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">strcmp</span>(p1, p2);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n <strong>本质：</strong><br> 本质是实例化一个模板，而非重载它。特例化不影响参数匹配。参数匹配都以最佳匹配为原则，例如，此处如果是compare(3,5)，则调用普通的模板，若为compare(hi”,haha”)，则调用特例化版本(因为这个<code>cosnt char*</code>相对于T，更匹配实参类型)，注意二者函数体的语句不一样了，实现不同功能。<br> <strong>注意：</strong><br> 模板及其特例化版本应该声明在同一个头文件中，且所有同名模板的声明应该放在前面，后面放特例化版本。</li>\n<li>类模板特例化<br> 原理类似函数模板，不过在类中，我们可以对模板进行特例化，也可以对类进行部分特例化。对类进行特例化时，仍然用template表示是一个特例化版本，例如： <figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">template</span>&lt;&gt;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">hash</span>&lt;</span>sales_data&gt;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">size_t</span> <span class=\"title\">operator</span><span class=\"params\">()</span><span class=\"params\">(sales_data&amp; s)</span></span>;</span><br><span class=\"line\">    <span class=\"comment\">//里面所有T都换成特例化类型版本sales_data</span></span><br><span class=\"line\">    <span class=\"comment\">/* 按照最佳匹配原则,若T != sales_data,就用普通类模板,否则,就使用含有特定功能的</span></span><br><span class=\"line\"><span class=\"comment\">    特例化版本。 */</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n<p><strong>类模板的部分特例化</strong><br>不必为所有模板参教提供实参，可以指定一部分而非所有模板参数，一个类模板的部分特例化本身仍是一个模板，使用它时还必须为其特例化版本中未指定的模板参数提供实参(特例化时类名一定要和原来的模板相同，只是参数类型不同，按最佳匹配原则，哪个最匹配，就用相应的模板)<br><strong>特例化类中的部分成员</strong><br>可以特例话类中的部分成员函数而不是整个类，举个例子：<br>    <figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">template</span>&lt;<span class=\"keyword\">typename</span> T&gt; </span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> </span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">BarO</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Barst</span><span class=\"params\">(T a)</span> <span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">template</span>&lt;&gt;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Foocint::Bar</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//1进行int类型的特例化处理</span></span><br><span class=\"line\">\tcout &lt;&lt;<span class=\"string\">&quot;我是int型特例化&quot;</span>&lt;&lt;end1;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">Foo&lt;string&gt; fs;</span><br><span class=\"line\">Foo&lt;<span class=\"keyword\">int</span>&gt; fi;<span class=\"comment\">//使用特例化</span></span><br><span class=\"line\">fs. BarO);<span class=\"comment\">//使用的是普通模板,即Foo&lt;string&gt;::BarO</span></span><br><span class=\"line\">fi.BarO);<span class=\"comment\">//特例化版本,执行Foo(int : :BarO)</span></span><br><span class=\"line\"><span class=\"comment\">//Foo&lt;string&gt;:: Bar()和Foocintx::Bar()功能不同</span></span><br></pre></td></tr></table></figure></p>\n<h1 id=\"24-c和c-的类型安全？\"><a href=\"#24-c和c-的类型安全？\" class=\"headerlink\" title=\"24. c和c++的类型安全？\"></a>24. c和c++的类型安全？</h1><p><strong>什么是类型安全？</strong><br>类型安全很大程度上可以等价于内存安全，类型安全的代码不会试图访问自己没被授权的内存区域。”类型安全”常被用来形容编程语言，其根据在于该门编程语言是否提供保障类型安全的机制；有的时候也用”类型安全”形容某个程序，判别的标准在于该程序是否隐含类型错误，类型安全的编程语言与类型安全的程序之间没有必然联系。好的程序员可以使用类型不那么安全的语言写出类型相当安全的程序，相反的，差一点儿的程序员可能使用类型相当安全的语言写出类型不太安全的程序，绝对类型安全的编程语言暂时还没有。</p>\n<ol>\n<li>c的类型安全<br> c只在局部上下文中表现出类型安全，比如试图从一种结构体的指针转换为另外一种结构体的指针时，编译器将会报错，除非使用显示类型转换。<ul>\n<li>printf格式输出<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;整型数:%d\\n&quot;</span>,<span class=\"number\">10</span>);</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;浮点型数:%f\\n&quot;</span>,<span class=\"number\">10</span>);</span><br></pre></td></tr></table></figure>\n上述代码中，使用%d控制整型数字的输出，没有问题，但是改成%时，明显输出错误，再改成%s时，运行直接报segmentation fault错误。</li>\n<li>malloc函数的返回值<br>malloc是C中进行内存分配的函数，它的返回类型是void <em>，即空类型指针,常常有这样的用法char <em>p = (char <em>)malloc(100 * sizeof(char));这里明显做了显式的类型转换。类型匹配尚且没有问题,但是一旦出现int</em> p=(int</em>)malloc(100</em>sizeof(char));就很可能带来一些问题,而这样的转换C并不会提示错误。。</li>\n</ul>\n</li>\n<li>c++的类型安全<br> 如果c++使用得当，它将远比c更有类型安全性。相比于c语言， c++提供了一些新的机制保障类型安全：<ul>\n<li>操作符new返回的指针类型严格与对象匹配，而不是void *；</li>\n<li>c中很多以*void **为参数的函数可以改写为c++模板函数，而模板是支持类型检查的；</li>\n<li>引入const关键字代替#define constants，它是有类型、有作用域的，而#define constants只是简单的文本替换；</li>\n<li>一些#define宏可被改写为inline函数，结合函数的重载，可在类型安全的前提下支持多种类型，当然改写为模板也能保证类型安全；</li>\n<li>c++提供了dynamic_cast关键字，使得转换过程更加安全，因为dynamic_cast比static_cast涉及更多具体的类型检查。</li>\n</ul>\n</li>\n</ol>\n<h1 id=\"25-大小端存储？\"><a href=\"#25-大小端存储？\" class=\"headerlink\" title=\"25. 大小端存储？\"></a>25. 大小端存储？</h1><p>大端存储：字数据的高字节存储在低地址中；<br>小端存储：字数据的低字节存储在低地址中。<br><strong>两种判断大小端存储的方法</strong></p>\n<ol>\n<li>使用强制类型转换 <figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span> </span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> a = <span class=\"number\">0x1234</span>;</span><br><span class=\"line\">    <span class=\"comment\">//亩于int和char的长度不同,借助int型转换成char型,只会留下低地址的部分</span></span><br><span class=\"line\">    <span class=\"keyword\">char</span> c = (<span class=\"keyword\">char</span>)a;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (C == <span class=\"number\">0x12</span>)</span><br><span class=\"line\">        cout &lt;&lt; <span class=\"string\">&quot;big endian&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(C == <span class=\"number\">0x34</span>)</span><br><span class=\"line\">        cout &lt;&lt; <span class=\"string\">&quot;little endian&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>巧用union联合体 <figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"comment\">//union联合体的重叠式存储, endian联合体占用内存的空间为每个成员字节长度的最大值</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">union</span> <span class=\"title\">endian</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> a;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> ch;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    endian value;</span><br><span class=\"line\">    value.a =<span class=\"number\">0x1234</span>;</span><br><span class=\"line\">    <span class=\"comment\">//a和ch共用4字节的内存空间</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (value.ch ==<span class=\"number\">0x12</span>)</span><br><span class=\"line\">        cout &lt;&lt; <span class=\"string\">&quot;big endian&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (value.ch == <span class=\"number\">0x34</span>)</span><br><span class=\"line\">        cout &lt;&lt; <span class=\"string\">&quot;Tittle endian&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h1 id=\"26-c-内存分区？\"><a href=\"#26-c-内存分区？\" class=\"headerlink\" title=\"26. c++内存分区？\"></a>26. c++内存分区？</h1><p><strong>堆</strong><br>在执行函数时，函数内局部变量的存储单元都可以在栈上创建，函数执行结束时这些存储单元自动被释放。栈内存分配运算内置于处理器的指令集中，效率很高，但是分配的内存容量有限；<br><strong>栈</strong><br>就是那些由new分配的内存块，他们的释放编译器不去管，由我们的应用程序去控制，一般一个new就要对应一个delete。如果程序员没有释放掉，那么在程序结束后，操作系统会自动回收；<br><strong>自由存储区</strong><br>就是那些由malloc等分配的内存块，它和堆是十分相似的，不过它是用free来结束自己的生命的；<br><strong>全局/静态存储区</strong><br>全局变量和静态变量被分配到同一块内存中，在以前的C语言中，全局变量和静态变量又分为初始化的和未初始化的，在c++里面没有这个区分了，它们共同占用同一块内存区，在该区定义的变量若没有初始化，则会被自动初始化，例如int型变量自动初始为0；<br><strong>常量存储区</strong><br>这是一块比较特殊的存储区,，这里面存放的是常量，不允许修改；<br><strong>代码段</strong><br>存放函数体的二进制代码</p>\n<h1 id=\"27-形参和实参？\"><a href=\"#27-形参和实参？\" class=\"headerlink\" title=\"27. 形参和实参？\"></a>27. 形参和实参？</h1><ul>\n<li>形参变量只有在被调用时才分配内存单元，在调用结束时，即刻释放所分配的内存单元。因此，形参只有在函数内部有效。函数调用结束返回主调函数后则不能再使用该形参变量；</li>\n<li>实参可以是常量、变量、表达式、函数等，无论实参是何种类型的量，在进行函数调用时，它们都必须具有确定的值，以便把这些值传送给形参。因此应预先用赋值，输入等办法使实参获得确定值，会产生一个临时变量；</li>\n<li>实参和形参在数量上、类型上、顺序上应严格一致，否则会发生”类型不匹配”的错误；</li>\n<li>函数调用中发生的数据传送是单向的。即只能把实参的值传送给形参，而不能把形参的值反向地传送给实参。因此在函数调用过程中，形参的值发生改变，而实参中的值不会变化；</li>\n<li>当形参和实参不是指针类型时，在该函数运行时，形参和实参是不同的变量，他们在内存中位于不同的位置，形参将实参的内容复制一份，在该函数运行结束的时候形参被释放，而实参内容不会改变。</li>\n</ul>\n<h1 id=\"28-值传递、指针传递、引用传递的区别和效率？\"><a href=\"#28-值传递、指针传递、引用传递的区别和效率？\" class=\"headerlink\" title=\"28. 值传递、指针传递、引用传递的区别和效率？\"></a>28. 值传递、指针传递、引用传递的区别和效率？</h1><ul>\n<li>值传递：有一个形参向函数所属的栈拷贝数据的过程，如果值传递的对象是类对象或是大的结构体对象，将耗费一定的时间和空间(传值)。</li>\n<li>指针传递：同样有一个形参向函数所属的栈拷贝数据的过程，但拷贝的数据是一个固定为4字节的地址(传值,传递的是地址值)；</li>\n<li>引用传递：同样有上述的数据拷贝过程，但其是针对地址的，相当于为该数据所在的地址起了一个别名(传地址)；</li>\n<li>效率上讲，指针传递和引用传递比值传递效率高。一般主张使用引用传递，代码逻辑上更加紧凑、清晰。</li>\n</ul>\n<h1 id=\"29-深拷贝与浅拷贝？\"><a href=\"#29-深拷贝与浅拷贝？\" class=\"headerlink\" title=\"29. 深拷贝与浅拷贝？\"></a>29. 深拷贝与浅拷贝？</h1><ul>\n<li>浅复制：只是拷贝了基本类型的数据,，而引用类型数据，复制后也是会发生引用，我们把这种拷贝叫做” (浅复制)浅拷贝” ，换句话说，浅复制仅仅是指向被复制的内存地址，如果原地址中对象被改变了，那么浅复制出来的对象也会相应改变；<br>  深复制：在计算机中开辟了一块新的内存地址用于存放复制的对象；</li>\n<li>在某些状况下，类内成员变量需要动态开辟堆内存，如果实行位拷贝，也就是把对象里的值完全复制给另一个对象，如A-B，这时，如果B中有一个成员变量指针已经申请了内存，那A中的那个成员变量也指向同一块内存。这就出现了问题：当B把内存释放了(如：析构) ，这时A内的指针就是野指针了出现运行错误。</li>\n</ul>\n<h1 id=\"30-智能指针？\"><a href=\"#30-智能指针？\" class=\"headerlink\" title=\"30. 智能指针？\"></a>30. 智能指针？</h1><p><strong>原理</strong><br>智能指针是一个类，用来存储指向动态分配对象的指针，负责自动释放动态分配的对象，防止堆内存泄露。交给一个类对象区管理，当类对象生命周期结束时，自动调用析构函数释放资源。<br><strong>常用的智能指针</strong></p>\n<ol>\n<li><strong>shared_ptr</strong><br> 实现原理：<strong>采用引用计数器的方法</strong>，允许多个智能指针指向同一个对象，每当多一个指针指向该对象时，指向该对象的所有智能指针内部的引用计数加1，每当减少一个智能指针指向对象时，引用计数会减1，当计数为0的时候会自动释放动态分配的资源。<ul>\n<li>智能指针将一个计数器与类指向的对象相关联，引用计数器跟踪共有多少个类对象共享同一指针；</li>\n<li>每次创建类的新对象时，初始化指针并将引用计数置为1；</li>\n<li>当对象作为另一对象的副本而创建时，拷贝构造函数拷贝指针并增加与之相应的引用计数；</li>\n<li>对一个对象进行赋值时，赋值操作符减少左操作数所指对象的引用计数（如果引用计数为减至0，则删除对象），并增加右操作数所指对象的引用计数；</li>\n<li>调用析构函数时，构造函数减少引用计数（如果引用计数减至0，则删除基础对象）。</li>\n</ul>\n</li>\n<li><strong>unique_pt</strong><br> unique_ptr采用的是独享所有权语义，一个非空的unique_ptr总是拥有它所指向的资源。转移一个unique_ptr将会把所有权全部从源指针转移给目标指针，源指针被置空；所以<strong>unique_ptr不支持普通的拷贝和赋值操作</strong>，不能用在STL标准容器中；局部变量的返回值除外（因为编译器知道要返回的对象将要被销毁）；如果你拷贝一个unique_ptr，那么拷贝结束后，这两个unique_ptr都会指向相同的资源，造成在结束时对同一内存指针多次释放而导致程序崩溃。</li>\n<li><strong>weak_ptr</strong><br> weak_ptr：弱引用。 引用计数有一个问题就是互相引用形成环（环形引用），这样两个指针指向的内存都无法释放。需要使用weak_ptr打破环形引用。<strong>weak_ptr是一个弱引用，它是为了配合shared_ptr而引入的一种智能指针</strong>，它指向一个由shared_ptr管理的对象而不影响所指对象的生命周期，也就是说，它只引用，不计数。如果一块内存被shared_ptr和weak_ptr同时引用，当所有shared_ptr析构了之后，不管还有没有weak_ptr引用该内存，内存也会被释放。所以weak_ptr不保证它指向的内存一定是有效的，在使用之前使用函数lock()检查weak_ptr是否为空指针。</li>\n<li><strong>auto_ptr</strong><br> <strong>auto_ptr不支持拷贝和赋值操作</strong>，不能用在STL标准容器中。STL容器中的元素经常要支持拷贝、赋值操作，在这过程中auto_ptr会传递所有权，auto_ptr采用的是独享所有权语义，一个非空的unique_ptr总是拥有它所指向的资源。转移一个auto_ptr将会把所有权全部从源指针转移给目标指针，源指针被置空。</li>\n</ol>\n<p><strong>智能指针代码实现：</strong> 用两个类来实现智能指针的功能，一个是引用计数类，另一个则是指针类。<br><strong>引用计数类</strong><br>    <figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//引用计数器类用于存储指向同一对象的指针数</span></span><br><span class=\"line\"><span class=\"keyword\">template</span>&lt;<span class=\"keyword\">typename</span> T&gt;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Counter</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">\t<span class=\"comment\">//数据成员</span></span><br><span class=\"line\">\tT *ptr;<span class=\"comment\">//对象指针</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> cnt; <span class=\"comment\">// 引用计数器1</span></span><br><span class=\"line\">\t<span class=\"comment\">//友元类声明</span></span><br><span class=\"line\">\t<span class=\"keyword\">template</span>&lt;<span class=\"keyword\">typename</span> T&gt;</span><br><span class=\"line\">\t<span class=\"keyword\">friend</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SmartPtr</span>;</span></span><br><span class=\"line\">\t<span class=\"comment\">//构造函数</span></span><br><span class=\"line\">\t<span class=\"built_in\">Counter</span>(T *p)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tptr =p;</span><br><span class=\"line\">\t\tcnt = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//折构函数</span></span><br><span class=\"line\">\t~<span class=\"built_in\">Counter</span>()</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">delete</span> ptr;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br><strong>指针类</strong><br>    <figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">template</span>&lt;<span class=\"keyword\">typename</span> T&gt;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SmartPtr</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">\t<span class=\"comment\">//数据成员</span></span><br><span class=\"line\">\tCounter&lt;T&gt; ptr_cnt;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"comment\">//普通构造函数 初始化计数类</span></span><br><span class=\"line\">\t<span class=\"built_in\">SmartPtr</span>(T *p)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tptr_cnt = <span class=\"keyword\">new</span> Counter&lt;T&gt;(p);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//拷贝构造函数</span></span><br><span class=\"line\">\t<span class=\"built_in\">SmartPtr</span>(<span class=\"keyword\">const</span> SmartPtr &amp;other)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tptr_cnt = other.ptr_cnt;</span><br><span class=\"line\">\t\tptr_cnt-&gt;cnt++;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//赋值运算符重载函数</span></span><br><span class=\"line\">\tSmartPtr &amp;<span class=\"keyword\">operator</span>=(<span class=\"keyword\">const</span> SmartPtr &amp;rhs)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tptr_cnt = rhs-&gt;ptr_cnt;</span><br><span class=\"line\">\t\trhs.ptr cnt-&gt;cnt++;</span><br><span class=\"line\">\t\tptr_cnt-&gt;cnt--;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (ptr_cnt-&gt;cnt == <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">delete</span> ptr_cnt;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> *<span class=\"keyword\">this</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//解引用运算符重载函数</span></span><br><span class=\"line\">\tT &amp;<span class=\"keyword\">operator</span>*()</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> *(ptr_cnt-&gt;cnt);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//析构函数</span></span><br><span class=\"line\">\t~<span class=\"built_in\">SmartPtr</span>()</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tptr_cnt-&gt;cnt--;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(ptr_cnt-&gt;cnt == <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">delete</span> ptr_cnt;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\t\tcout &lt;&lt; <span class=\"string\">&quot;还有&quot;</span> &lt;&lt; ptr_cnt-&gt;cnt &lt;&lt; <span class=\"string\">&quot;个指针指向基础对象&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"31-函数指针？\"><a href=\"#31-函数指针？\" class=\"headerlink\" title=\"31. 函数指针？\"></a>31. 函数指针？</h1><p><strong>定义：</strong>函数指针是指向函数的指针变量。 因此“函数指针”本身首先应是指针变量，只不过该指针变量指向函数。这正如用指针变量可指向整型变量、字符型、数组一样，这里是指向函数。<br><strong>有两个用途：</strong>调用函数和做函数的参数。<br><strong>声明方法：</strong><br>返回值类型 (* 指针变量名) (形参列表);<br>typedef int (*fun)(int, int);  // 声明一个指向同样参数、返回值的函数指针类型<br>typedef int(fun)(int, int);  //声明一种函数类型<br><strong>注1：</strong>“返回值类型”说明函数的返回类型，“(指针变量名 )”中的括号不能省，括号改变了运算符的优先级。若省略整体则成为一个函数说明，说明了一个返回的数据类型是指针的函数，后面的“形参列表”表示指针变量指向的函数所带的参数列表。                         <strong>注2：</strong>函数括号中的形参可有可无，视情况而定。<br><strong>指向函数的指针变量没有++和–运算。</strong></p>\n<h1 id=\"32-c-c-语言编译四步骤？\"><a href=\"#32-c-c-语言编译四步骤？\" class=\"headerlink\" title=\"32. c/c++语言编译四步骤？\"></a>32. c/c++语言编译四步骤？</h1><p><strong>预编译</strong><br>主要处理源代码文件中的以“#”开头的预编译指令。处理规则见下：</p>\n<ol>\n<li>删除所有的#define，展开所有的宏定义；</li>\n<li>处理所有的条件预编译指令，如“#if”、“#endif”、“#ifdef”、“#elif”和“#else”；</li>\n<li>处理“#include”预编译指令，将文件内容替换到它的位置，这个过程是递归进行的，文件中包含其他文件；</li>\n<li>删除所有的注释，“//”和“/**/”；</li>\n<li>保留所有的#pragma 编译器指令，编译器需要用到他们，如：#pragma once 是为了防止有文件被重复引用；</li>\n<li>添加行号和文件标识，便于编译时编译器产生调试用的行号信息，和编译时产生编译错误或警告是能够显示行号。</li>\n</ol>\n<p><strong>编译</strong><br>把预编译之后生成的.i或.ii文件，进行一系列词法分析、语法分析、语义分析及优化后，生成相应的汇编代码文件。</p>\n<ol>\n<li>词法分析：利用类似于“有限状态机”的算法，将源代码程序输入到扫描机中，将其中的字符序列分割成一系列的记号；</li>\n<li>语法分析：语法分析器对由扫描器产生的记号，进行语法分析，产生语法树。由语法分析器输出的语法树是一种以表达式为节点的树；</li>\n<li>语义分析：语法分析器只是完成了对表达式语法层面的分析，语义分析器则对表达式是否有意义进行判断，其分析的语义是静态语义——在编译期能分期的语义，相对应的动态语义是在运行期才能确定的语义；</li>\n<li>优化：源代码级别的一个优化过程；</li>\n<li>目标代码生成：由代码生成器将中间代码转换成目标机器代码，生成一系列的代码序列——汇编语言表示；</li>\n<li>目标代码优化：目标代码优化器对上述的目标机器代码进行优化：寻找合适的寻址方式、使用位移来替代乘法运算、删除多余的指令等。</li>\n</ol>\n<p><strong>汇编</strong><br>将汇编代码转变成机器可以执行的指令(机器码文件)。 汇编器的汇编过程相对于编译器来说更简单，没有复杂的语法，也没有语义，更不需要做指令优化，只是根据汇编指令和机器指令的对照表一一翻译过来，汇编过程由汇编器as完成。经汇编之后，产生目标文件(与可执行文件格式几乎一样).o(Windows下)、.obj(Linux下)。<br><strong>链接</strong><br>将不同的源文件产生的目标文件进行链接，从而形成一个可以执行的程序。链接分为静态链接和动态链接。</p>\n<ol>\n<li>静态链接<br> 函数和数据被编译进一个二进制文件。在使用静态库的情况下，在编译链接可执行文件时，链接器从库中复制这些函数和数据并把它们和应用程序的其它模块组合起来创建最终的可执行文件。<br> 空间浪费：因为每个可执行程序中对所有需要的目标文件都要有一份副本，所以如果多个程序对同一个目标文件都有依赖，会出现同一个目标文件都在内存存在多个副本；<br> 更新困难：每当库函数的代码修改了，这个时候就需要重新进行编译链接形成可执行程序。<br> 运行速度快：但是静态链接的优点就是，在可执行程序中已经具备了所有执行程序所需要的任何东西，在执行的时候运行速度快。</li>\n<li>动态链接<br> 动态链接的基本思想是把程序按照模块拆分成各个相对独立部分，在程序运行时才将它们链接在一起形成一个完整的程序，而不是像静态链接一样把所有程序模块都链接成一个单独的可执行文件。<br> 共享库：就是即使需要每个程序都依赖同一个库，但是该库不会像静态链接那样在内存中存在多分，副本，而是这多个程序在执行时共享同一份副本；<br> 更新方便：更新时只需要替换原来的目标文件，而无需将所有的程序再重新链接一遍。当程序下一次运行时，新版本的目标文件会被自动加载到内存并且链接起来，程序就完成了升级的目标。<br> 性能损耗：因为把链接推迟到了程序运行时，所以每次执行程序都需要进行链接，所以性能会有一定损失。</li>\n</ol>\n","site":{"data":{}},"excerpt":"<p>c/c++面经</p>","more":"<h1 id=\"1-在main执行之前和之后执行的代码可能是什么？\"><a href=\"#1-在main执行之前和之后执行的代码可能是什么？\" class=\"headerlink\" title=\"1. 在main执行之前和之后执行的代码可能是什么？\"></a>1. <strong>在main执行之前和之后执行的代码可能是什么？</strong></h1><p>main执行之前：主要是初始化系统相关资源</p>\n<ul>\n<li>设置栈指针；</li>\n<li>初始化静态static变量和global全局变量,即.data段的内容；</li>\n<li>将未初始化部分的全局变量赋初值：数值型short , int , long等为0 , bool为FALSE ,指针为NULL等等，即.bss段的内容；</li>\n<li>全局对象初始化,在main之前调用构造函数，这是可能会执行前的一些代码；</li>\n<li>将main函数的参数argc, argv等传递给main函数,然后才真正运行main函数；</li>\n<li><em><strong>ttribute</strong></em>(constructor)。 </li>\n</ul>\n<p>main函数执行之后</p>\n<ul>\n<li>全局对象的析构函数会在main函数之后执行；</li>\n<li>可以用atexit注册一个函数,它会在main之后执行；</li>\n<li><em><strong>attribute</strong></em>(destructor)。</li>\n</ul>\n<h1 id=\"2-结构体内存对齐问题？\"><a href=\"#2-结构体内存对齐问题？\" class=\"headerlink\" title=\"2. 结构体内存对齐问题？\"></a>2. 结构体内存对齐问题？</h1><ul>\n<li>结构体内成员按照声明顺序存储，第一个成员地址和整个结构体地址相同。</li>\n<li>未特殊说明时,按结构体中size最大的成员对齐(若有double成员,按8字节对齐)。</li>\n</ul>\n<h1 id=\"3-指针和引用的区别？\"><a href=\"#3-指针和引用的区别？\" class=\"headerlink\" title=\"3. 指针和引用的区别？\"></a>3. 指针和引用的区别？</h1><ul>\n<li>指针是一个变量，存储的是一个地址，引用跟原来的变量实质上是同一个东西,是原变量的别名；</li>\n<li>指针可以有多级，引用只有一级；</li>\n<li>指针可以为空，引用不能为NULL且在定义时必须初始化；</li>\n<li>指针在初始化后可以改变指向，而引用在初始化之后不可再改变；</li>\n<li>sizeof指针得到的是本指针的大小，sizeof引用得到的是引用所指向变量的大小；</li>\n<li>当把指针作为参数进行传递时，也是将实参的一个拷贝传递给形参，两者指向的地址相同,但不是同一个变量，在函数中改变这个变量的指向不影响实参，而引用却可以；</li>\n<li>引用只是别名，不占用具体存储空间，只有声明没有定义；指针是具体变量,需要占用存储空间(但这也只是一般情况下,具体情况还要具体分析)；</li>\n<li>引用在声明时必须初始化为另一变量，一旦出现必须为typename refname &amp;varname形式；指针声明和定义可以分开，可以先只声明指针变量而不初始化，等用到时再指向具体变量；</li>\n<li>引用一旦初始化之后就不可以再改变(变量可以被引用为多次，但引用只能作为一个变量引用)指针变量可以重新指向别的变量；</li>\n<li>不存在指向空值的引用，必须有具体实体；但是存在指向空值的指针。</li>\n</ul>\n<h1 id=\"4-堆和栈的区别？\"><a href=\"#4-堆和栈的区别？\" class=\"headerlink\" title=\"4. 堆和栈的区别？\"></a>4. 堆和栈的区别？</h1><ul>\n<li>申请方式不同<ol>\n<li>栈由系统自动分配释放；</li>\n<li>堆由程序员手动申请释放。</li>\n</ol>\n</li>\n<li>申请大小限制不同<ol>\n<li>栈顶和栈底是之前预设好的，栈是向栈底扩展，大小固定，可以通过ulimit-a查看，由ulimit-s修改；</li>\n<li>堆向高地址扩展，是不连续的内存区域，大小可以灵活调整。</li>\n</ol>\n</li>\n<li>申请效率不同<ol>\n<li>栈由系统分配，速度快，不会有碎片；</li>\n<li>堆由程序员手动分配，速度慢，且会有碎片。</li>\n</ol>\n</li>\n<li>栈空间默认是4M；堆区一般是1-4G。</li>\n</ul>\n<h1 id=\"5-指针？\"><a href=\"#5-指针？\" class=\"headerlink\" title=\"5. 指针？\"></a>5. 指针？</h1><ul>\n<li>int *p[10]; ：数组指针，是一个数组变量，数组大小为10，组内每个元素都是指向int类型的指针变量；</li>\n<li>int (*)p[10];：数组指针，是一个指针类型变量，指向的是一个int类型的数组，这个数组的大小是10；</li>\n<li>int *p(int);：函数声明，函数名是p，参数是int类型的，返回值是int *类型的；</li>\n<li>int (*p)(int);：函数指针，指向的函数具有int类型参数，并且返回值是int类型的。</li>\n</ul>\n<h1 id=\"6-基类的虚函数表存放在内存的什么区，虚表指针vptr的初始化时间？\"><a href=\"#6-基类的虚函数表存放在内存的什么区，虚表指针vptr的初始化时间？\" class=\"headerlink\" title=\"6. 基类的虚函数表存放在内存的什么区，虚表指针vptr的初始化时间？\"></a>6. 基类的虚函数表存放在内存的什么区，虚表指针vptr的初始化时间？</h1><p>首先整理一下虚函数表的特征：</p>\n<ul>\n<li>虚函数表是全局共享的元素,即全局仅有一个,在编译时就构造完成；</li>\n<li>虚函数表类似一个数组,类对象中存储vptr指针,指向虚函数表,即虚函数表不是函数,不是程序代码,不可能存储在代码段；</li>\n<li>虚函数表存储虚函数的地址,即虚函数表的元素是指向类成员函数的指针,而类中虚函数的个数在编译时期可以确定,即虚函数表的大小可以确定,即大小是在编译时期确定的,不必动态分配内存空间存储虚函数表,所以不在堆中。</li>\n<li>根据以上特征,虚函数表类似于类中静态成员变量静态成员变量也是全局共享,大小确定,因此最有可能存在全局数据区,测试结果显示：</li>\n</ul>\n<ol>\n<li>虚函数表vtable在Linux/Unix中存放在可执行文件的只读数据段中(rodata),这与微软的编译器将虚函数表存放在常量段存在一些差别；</li>\n<li>由于虚表指针yptr跟虚函数密不可分,对于有虚函数或者继承于拥有虚函数的基类,对该类进行实例化时,在构造函数执行时会对虚表指针进行初始化,并且存在对象内存布局的最前面。<br>一般分为五个区域：栈区、堆区、函数区(存放函数体等二进制代码)、全局静态区、常量区。</li>\n</ol>\n<ul>\n<li>C++中虚函数表位于只读数据段( .rodata)，也就是C++内存模型中的常量区;而虚函数则位于代码段(.text)，也就是C++内存模型中的代码区。</li>\n</ul>\n<h1 id=\"7-new-delete与malloc-free？\"><a href=\"#7-new-delete与malloc-free？\" class=\"headerlink\" title=\"7. new/delete与malloc/free？\"></a>7. <strong>new/delete</strong>与<strong>malloc/free？</strong></h1><ul>\n<li>相同点：<br>  1.都可用于内存的动态申请和释放。</li>\n<li>不同点：<br>  1.new/delete是c++运算符，malloc/free是c/c++语言标准库函数；<br>  2.new自动计算要分配的空间大小，malloc需要手工计算；<br>  3.new是类型安全的，malloc不是；  <figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> *p = <span class=\"keyword\">new</span> <span class=\"keyword\">float</span>[<span class=\"number\">2</span>];  <span class=\"comment\">//编译错误</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> *p = (<span class=\"keyword\">int</span> *)<span class=\"built_in\">malloc</span>(<span class=\"number\">2</span> * <span class=\"built_in\"><span class=\"keyword\">sizeof</span></span>(<span class=\"keyword\">double</span>)); <span class=\"comment\">//编译无错误</span></span><br></pre></td></tr></table></figure>\n  4.new调用名为operator new的标准库函数分配足够空间并调用相关对象的构造函数，delete堆指针所指对象运行适当的析构函数，然后提供调用名为operator delete的标准库函数释放该对象所用内存，malloc/free无相关调用；<br>  5.malloc/free需要库文件支持，new/delete不需要；<br>  6.new是封装了malloc，直接free不会报错，但只是释放内存，而不会析构对象。</li>\n</ul>\n<h1 id=\"8-new和delete的实现？\"><a href=\"#8-new和delete的实现？\" class=\"headerlink\" title=\"8. new和delete的实现？\"></a>8. new和delete的实现？</h1><ul>\n<li>new的实现过程是：首先调用名为operator new的标准库函数，分配足多大的原始为类型化的内存，以保存指定类型的一个对象；接下来运行该类型的一个构造函数，用指定初始化构造对象；最后返回指向新分配井构造后的的对象的指针；</li>\n<li>delete的实现过程：对指针指向的对象运行适当的析构函数；然后通过调用名为operator delete的标准库函数释放该对象所用内存。</li>\n</ul>\n<h1 id=\"9-malloc和new的区别\"><a href=\"#9-malloc和new的区别\" class=\"headerlink\" title=\"9. malloc和new的区别?\"></a>9. malloc和new的区别?</h1><ul>\n<li>malloc和free是标准库函数，支持覆盖；new和delete是运算符，并且支持重载；</li>\n<li>malloc仅仅分配内存空间，free仅仅回收空间，不具备调用构造函数和析构函数功能，用malloc分配空间存储类的对象存在风险；new和delete除了分配回收功能外，还会调用构造函数和析构函数；</li>\n<li>mallac和free返回的是void类型指针(必须进行类型转换)， new和delete返回的是具体类型指针。</li>\n</ul>\n<p><em><strong>delete和delete[]的区别？</strong></em></p>\n<ul>\n<li>delete只会调用一次析构函数；</li>\n<li>delete[]会调用数组中每个元素的析构函数。</li>\n</ul>\n<h1 id=\"10-宏定义和函数？\"><a href=\"#10-宏定义和函数？\" class=\"headerlink\" title=\"10. 宏定义和函数？\"></a>10. 宏定义和函数？</h1><ul>\n<li>宏在编译时完成替换，之后被替换的文本参与编译，相当于直接插入了代码，运行时不存在函数调用，执行起来更快；函数调用在运行时需要跳转到具体函数中调用函数；</li>\n<li>宏定义属于在结构中插入代码，没有返回值；函数调用具有返回值；</li>\n<li>宏定义参数没有类型，不进行类型检查；函数参数具有类型，需要进行类型检查；</li>\n<li>宏定义不需要在最后加分号。</li>\n</ul>\n<h1 id=\"11-宏定义和typedef？\"><a href=\"#11-宏定义和typedef？\" class=\"headerlink\" title=\"11. 宏定义和typedef？\"></a>11. 宏定义和typedef？</h1><ul>\n<li>宏定义主要用于定义常量及书写复杂的内容；typedef主要用于定义类型别名；</li>\n<li>宏替换发生在编译阶段之前，属于文本插入替换；typedef时编译的一部分；</li>\n<li>宏不进行类型检查；typedef会检查数据类型；</li>\n<li>宏不是语句，不需要在最后加分号；typedef是语句，要加分号标识结束；</li>\n<li>对于指针操作时：  <figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> p_char char *：</span></span><br><span class=\"line\">p_char p1,p2; <span class=\"comment\">//p1类型为char *，p2类型为char。</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">char</span> * p_char：</span><br><span class=\"line\">p_char p1,p2; <span class=\"comment\">//p1,p2类型均为char *。</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h1 id=\"12-变量声明和定义？\"><a href=\"#12-变量声明和定义？\" class=\"headerlink\" title=\"12. 变量声明和定义？\"></a>12. 变量声明和定义？</h1><ul>\n<li>声明仅仅是把变量的声明问位置及类型提供给编译器，并不分配内存空间；定义要在定义的地方为其分配存储空间；</li>\n<li>相同变量可以在多处声明(外部变量extern)，但定义只能在一处定义。</li>\n</ul>\n<h1 id=\"13-必须用到初始化成员列表的情况？\"><a href=\"#13-必须用到初始化成员列表的情况？\" class=\"headerlink\" title=\"13. 必须用到初始化成员列表的情况？\"></a>13. 必须用到初始化成员列表的情况？</h1><ul>\n<li>初始化一个reference成员；</li>\n<li>初始化一个const成员；</li>\n<li>调用一个基类的构造函数，而该函数有一组参数；<blockquote>\n<p>通俗的就是，如果基类没有构造函数，派生类的初始化列表必须初始化基类，必须用基类的构造函数构造一个。因为派生类继承基类时，会先构造基类，然后在构造派生类，如果基类不是默认的构造函数，那么就不知道基类到底咋构造，因此……</p>\n</blockquote>\n</li>\n<li>调用一个数据成员对象的构造函数，而该函数有一组参数。<blockquote>\n<p>列表初始化的顺序和书写顺序无关，只和变量的声明顺序有关。先声明哪个，就先初始化构造哪个。</p>\n</blockquote>\n</li>\n</ul>\n<h1 id=\"14-sizeof-和strlen-？\"><a href=\"#14-sizeof-和strlen-？\" class=\"headerlink\" title=\"14. sizeof()和strlen()？\"></a>14. sizeof()和strlen()？</h1><ul>\n<li>sizeof()是运算符，并不是函数，结果在编译时就已经得到，strlen()是字符串处理的库函数；</li>\n<li>sizeof()参数可以是任何数据的类型或者数据(sizeof参数不退化)；strlen()的参数只能是字符指针且结尾是’\\0’的字符串；</li>\n<li>sizeof()的值在编译时确定，所以不能用来得到动态分配(运行时分配)存储空间大小。  <figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *str = <span class=\"string\">&quot;name&quot;</span>;</span><br><span class=\"line\"><span class=\"built_in\"><span class=\"keyword\">sizeof</span></span>(str); <span class=\"comment\">//取的是指针str的长度，结果是4</span></span><br><span class=\"line\"><span class=\"built_in\">strlen</span>(str); <span class=\"comment\">//取得是这个字符串的长度，不包含结尾的&#x27;\\0&#x27;,结果是4</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h1 id=\"15-常量指针和指针常量？\"><a href=\"#15-常量指针和指针常量？\" class=\"headerlink\" title=\"15. 常量指针和指针常量？\"></a>15. 常量指针和指针常量？</h1><ul>\n<li>常量指针：指向常量的指针，顾名思义，就是指针指向的是常量，即，它不能指向变量，它指向的内容不能被改变，不能通过指针来修改它指向的内容，但是指针自身不是常量，它自身的值可以改变，从而可以指向另一个常量，如int const *p或const int *p；</li>\n<li>指针常量：指针本身是常量。它指向的地址是不可改变的，但地址里的内容可以通过指针改变。它指向的地址将伴其一生，直到生命周期结束。有一点需要注意的是，指针常量在定义时必须同时赋初值，如int *const p。</li>\n</ul>\n<h1 id=\"16-a和-amp-a？\"><a href=\"#16-a和-amp-a？\" class=\"headerlink\" title=\"16. a和&amp;a？\"></a>16. a和&amp;a？</h1><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> a[<span class=\"number\">10</span>];</span><br><span class=\"line\"><span class=\"built_in\"><span class=\"keyword\">int</span></span> (*p)[<span class=\"number\">10</span>] = &amp;a;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>a是数组名，是数组首元素的地址，a+1表示地址值加1个int类型的大小，如果a的地址是0x00000001,+1后操作后变为0x00000005，*(a+1) = a[1]；</li>\n<li>&amp;a是数组的指针，其类型为int(*)10] (就是前面提到的数组指针) ，其加1时,系统会认为是数组首地址加上整个数组的偏移(10个int型变量)，值为数组a尾元素后一个元素的地址。</li>\n<li>若(int <em>)p，此时输出</em>p时，其值为a[0]的值，因为被转为int *类型，解引用时按照int类型大小来读取。</li>\n</ul>\n<h1 id=\"17-数组名和指针？\"><a href=\"#17-数组名和指针？\" class=\"headerlink\" title=\"17. 数组名和指针？\"></a>17. 数组名和指针？</h1><ul>\n<li>二者均可通过增减偏移量来访问数组中的元素；</li>\n<li>数组名不是真正意义上的指针，可以理解为常指针，所以数组名没有自增、自减等操作；</li>\n<li>当数组名当中形参传给调用函数后，就是去了原有的特性，退化成一般指针，多了自增、自检操作，但sizeof运算符不能再得到原数组的大小了。</li>\n</ul>\n<h1 id=\"18-野指针和悬空指针？\"><a href=\"#18-野指针和悬空指针？\" class=\"headerlink\" title=\"18. 野指针和悬空指针？\"></a>18. 野指针和悬空指针？</h1><p>都是指向无效内存区域(无效指”不安全不可控”)的指针，访问行为将会导致未定义行为。<br><strong>野指针：</strong>指的是没有被初始化或的指针<br>    <figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> *p; <span class=\"comment\">//未初始化</span></span><br><span class=\"line\">std::cout&lt;&lt;*p&lt;&lt;endl; <span class=\"comment\">//访问野指针</span></span><br></pre></td></tr></table></figure><br>为了防止出错，对于指针初始化时都是赋值为NULL，这样在访问时编译器会直接报”非法内存访问”的错误；<br><strong>悬空指针：</strong>指针最初指向的内存已被释放了的一种指针<br>    <figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> *p1 = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> *p2 = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>;</span><br><span class=\"line\">p1 = p2;</span><br><span class=\"line\"><span class=\"keyword\">delete</span> p2;</span><br></pre></td></tr></table></figure><br>此时p1和p2就是悬空指针，指向的内存已被释放，继续使用这两个指针，行为不可预测，需要设置p1=p2=NULL。<br><strong>产生原因及解决办法：</strong></p>\n<ol>\n<li>野指针：指针变量未及时初始化⇒定义指针变量及时初始化；</li>\n<li>悬空指针：指针free或者delete之后没有及时置空⇒释放后立即置空。</li>\n<li>c和c++？<ul>\n<li>C++中new和delete是对内存分配的运算符，取代了C中的malloc和free；</li>\n<li>标准C++中的字符串类取代了标准C函数库头文件中的字符数组处理函数(C中没有字符串类型)；</li>\n<li>C++中用来做控制态输入输出的iostream类库替代了标准C中的stdio函教库；</li>\n<li>C++中的try/catch/throw异常处理机制取代了标准C中的setjmp()和longimp()函数；</li>\n<li>在C++中，允许有相同的函数名，不过它们的参数类型不能完全相同，这样这些函数就可以相互区别开来。而这在C语言中是不允许的。也就是C++可以重载，C语言不允许；</li>\n<li>C++语言中，允许变量定义语句在程序中的任何地方，只要在是使用它之前就可以；而C语言中,必须要在函数开头部分。而且C++允许重复定义变量，C语言也是做不到这一点的；</li>\n<li>在C++中，除了值和指针之外，新增了引用，引用型变量是其他变量的一个别名，我们可以认为他们只是名字不相同，其他都是相同的；</li>\n<li>C++相对与C增加了一些关键字，如: bool, using, namespace等等。</li>\n</ul>\n</li>\n</ol>\n<h1 id=\"19-c-中struct和class？\"><a href=\"#19-c-中struct和class？\" class=\"headerlink\" title=\"19. c++中struct和class？\"></a>19. c++中struct和class？</h1><p><strong>相同点：</strong></p>\n<ul>\n<li>两者都拥有成员函数、公有和私有部分；</li>\n<li>任何可以使用class完成的工作，同样可以用struct完成。</li>\n</ul>\n<p><strong>不同点：</strong></p>\n<ul>\n<li>struct默认是公有的，class默认是私有的；</li>\n<li>struct默认是public继承，class默认是private继承；</li>\n<li>class可以作为模板类型，struct不行。</li>\n</ul>\n<p><strong>c++和c的struct区别：</strong></p>\n<ul>\n<li>c语言中，struct是用户自定义数据类型(UDT)；c++中struct是抽象数据类型(ADT)，支持成员函数的定义，c++中的struct能继承，能实现多态；</li>\n<li>c中struct是没有设置权限的设置的，且struct中只能是一些变量的集合体，可以封装数据却不可以隐藏数据，而且成员不可以是函数；</li>\n<li>c++中，struct增加了访问权限，且可以和类一样有成员函数，成员默认访问说明符为public(为了与c兼容)；</li>\n<li>struct作为类的一种特例是用来自定义数据结构的。一个结构标记声明后，在c中必须在结构标记前加上struct才能做结构类型名(除：typedef struct class{};)；c++中结构体标记(结构体名)可以直接作为结构体类型名使用，此外结构体struct在c++中被当作类的一种特例。</li>\n</ul>\n<h1 id=\"20-define宏定义和const？\"><a href=\"#20-define宏定义和const？\" class=\"headerlink\" title=\"20. define宏定义和const？\"></a>20. define宏定义和const？</h1><p><strong>编译阶段：</strong></p>\n<ul>\n<li>define是在编译阶段的预处理阶段起作用，而const是在编译、运行的时候起作用；</li>\n</ul>\n<p><strong>安全性：</strong></p>\n<ul>\n<li>define只做替换，不做类型检查和计算，也不求解，容易产生错误，一般最好加上大括号包含住全部的内容，不然容易出错；</li>\n<li>const常量有数据类型，编译器可以对其进行类型安全检查；</li>\n</ul>\n<p><strong>内存占用：</strong></p>\n<ul>\n<li>define只是将宏名称进行替换，在内存中会产生多份相同的备份；const在程序运行中只有一份备份，且可以执行常量折叠，能将复杂的表达式计算出结果放入常量表；</li>\n<li>宏替换发生在编译阶段之前，属于文本插入替换；const作用发生于编译过程中；</li>\n<li>宏不检查类型；const会检查数据类型；</li>\n<li>宏定义的数据没有分配内存空间，只是插入替换掉；从上图定义的变量只是值不能改变，但要分配内存空间。</li>\n</ul>\n<h1 id=\"21-c-中static？\"><a href=\"#21-c-中static？\" class=\"headerlink\" title=\"21. c++中static？\"></a>21. c++中static？</h1><p><strong>不考虑类的情况</strong></p>\n<ol>\n<li>隐藏。所有不加static的全局变量和函数具有全局可见性，可以在其它文件中使用，加了之后只能在该文件所在的编译模块中使用；</li>\n<li>默认初始话为0，包括未初始化的全局静态变量与局部静态变量，都存在全局未初始化区；</li>\n<li>静态变量在函数内定义，始终存在，且只进行一次初始化，具有记忆性，其作用范围与局部变量相同，函数退出后仍然存在，但不能使用；</li>\n</ol>\n<p><strong>考虑类的情况</strong></p>\n<ol>\n<li>static成员变量：只与类关联，不与类的对象关联。定义时要分配空间，不能在类声明中初始化，必须在类定义体外部初始化，初始化时不需要标识为static；可以被非static成员函数任意访问；</li>\n<li>static成员函数：不具有this指针，无法访问类对象的非static成员变量和非static成员函数；不能被声明为const，虚函数和volatile；可以被非static成员函数任意访问。</li>\n</ol>\n<h1 id=\"22-c-中const？\"><a href=\"#22-c-中const？\" class=\"headerlink\" title=\"22. c++中const？\"></a>22. c++中const？</h1><p><strong>不考虑类的情况</strong></p>\n<ol>\n<li>const常量在定义时必须初始化，之后无法更改；</li>\n<li>const形参可以接收const和非const类型的实参；</li>\n</ol>\n<p><strong>考虑类的情况</strong></p>\n<ol>\n<li>const成员变量：不能在类定义外部初始化，只能通过构造函数初始化列表进行初始化，并且必须有构造函数；不同类对其const数据成员的值可以不同，所以不能在类中声明时初始化；</li>\n<li>const成员函数：const对象不可以调用非const成员函数；非const对象都可以调用；不可以改变非mutable(用该关键字声明的变量可以在const成员函数中被修改)数据的值。</li>\n</ol>\n<h1 id=\"23-模板函数和模板类的特例话\"><a href=\"#23-模板函数和模板类的特例话\" class=\"headerlink\" title=\"23. 模板函数和模板类的特例话\"></a>23. 模板函数和模板类的特例话</h1><p><strong>引入原因：</strong><br>编写单一的模板，它能适应多种类型的需求，使每种类型都具有相同的功能，但对于某种特定类型，如果要实现其特有的功能，单一模板就无法做到，这时就需要模板特例化。<br><strong>定义：</strong><br>对单一模板提供的一个特殊实例，它将一个或多个模板参数绑定到特定的类型或值上。</p>\n<ol>\n<li>模板函数特例化<br> 必须为原函数模板的每个模板参数都提供实参，且使用关键字template后跟一个空尖括号对&lt;&gt;，表明将原模板的所有模板参数提供实参，举例如下： <figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">template</span>&lt;<span class=\"keyword\">typename</span> T&gt; <span class=\"comment\">//模板函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">compare</span><span class=\"params\">(<span class=\"keyword\">const</span> T &amp;vl, <span class=\"keyword\">const</span> T &amp;v2)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(v1 &gt; v2) <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(v2 &gt; v1) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//模板特例化,满足针对字符申特定的比较,要提供所有实参,这里只有一个T</span></span><br><span class=\"line\"><span class=\"keyword\">template</span>&lt;&gt;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">compare</span><span class=\"params\">(<span class=\"keyword\">const</span> <span class=\"keyword\">char</span>* <span class=\"keyword\">const</span> &amp;v1, <span class=\"keyword\">const</span> <span class=\"keyword\">char</span>* <span class=\"keyword\">const</span> &amp;v2)</span> </span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">strcmp</span>(p1, p2);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n <strong>本质：</strong><br> 本质是实例化一个模板，而非重载它。特例化不影响参数匹配。参数匹配都以最佳匹配为原则，例如，此处如果是compare(3,5)，则调用普通的模板，若为compare(hi”,haha”)，则调用特例化版本(因为这个<code>cosnt char*</code>相对于T，更匹配实参类型)，注意二者函数体的语句不一样了，实现不同功能。<br> <strong>注意：</strong><br> 模板及其特例化版本应该声明在同一个头文件中，且所有同名模板的声明应该放在前面，后面放特例化版本。</li>\n<li>类模板特例化<br> 原理类似函数模板，不过在类中，我们可以对模板进行特例化，也可以对类进行部分特例化。对类进行特例化时，仍然用template表示是一个特例化版本，例如： <figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">template</span>&lt;&gt;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">hash</span>&lt;</span>sales_data&gt;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">size_t</span> <span class=\"title\">operator</span><span class=\"params\">()</span><span class=\"params\">(sales_data&amp; s)</span></span>;</span><br><span class=\"line\">    <span class=\"comment\">//里面所有T都换成特例化类型版本sales_data</span></span><br><span class=\"line\">    <span class=\"comment\">/* 按照最佳匹配原则,若T != sales_data,就用普通类模板,否则,就使用含有特定功能的</span></span><br><span class=\"line\"><span class=\"comment\">    特例化版本。 */</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n<p><strong>类模板的部分特例化</strong><br>不必为所有模板参教提供实参，可以指定一部分而非所有模板参数，一个类模板的部分特例化本身仍是一个模板，使用它时还必须为其特例化版本中未指定的模板参数提供实参(特例化时类名一定要和原来的模板相同，只是参数类型不同，按最佳匹配原则，哪个最匹配，就用相应的模板)<br><strong>特例化类中的部分成员</strong><br>可以特例话类中的部分成员函数而不是整个类，举个例子：<br>    <figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">template</span>&lt;<span class=\"keyword\">typename</span> T&gt; </span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> </span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">BarO</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Barst</span><span class=\"params\">(T a)</span> <span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">template</span>&lt;&gt;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Foocint::Bar</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//1进行int类型的特例化处理</span></span><br><span class=\"line\">\tcout &lt;&lt;<span class=\"string\">&quot;我是int型特例化&quot;</span>&lt;&lt;end1;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">Foo&lt;string&gt; fs;</span><br><span class=\"line\">Foo&lt;<span class=\"keyword\">int</span>&gt; fi;<span class=\"comment\">//使用特例化</span></span><br><span class=\"line\">fs. BarO);<span class=\"comment\">//使用的是普通模板,即Foo&lt;string&gt;::BarO</span></span><br><span class=\"line\">fi.BarO);<span class=\"comment\">//特例化版本,执行Foo(int : :BarO)</span></span><br><span class=\"line\"><span class=\"comment\">//Foo&lt;string&gt;:: Bar()和Foocintx::Bar()功能不同</span></span><br></pre></td></tr></table></figure></p>\n<h1 id=\"24-c和c-的类型安全？\"><a href=\"#24-c和c-的类型安全？\" class=\"headerlink\" title=\"24. c和c++的类型安全？\"></a>24. c和c++的类型安全？</h1><p><strong>什么是类型安全？</strong><br>类型安全很大程度上可以等价于内存安全，类型安全的代码不会试图访问自己没被授权的内存区域。”类型安全”常被用来形容编程语言，其根据在于该门编程语言是否提供保障类型安全的机制；有的时候也用”类型安全”形容某个程序，判别的标准在于该程序是否隐含类型错误，类型安全的编程语言与类型安全的程序之间没有必然联系。好的程序员可以使用类型不那么安全的语言写出类型相当安全的程序，相反的，差一点儿的程序员可能使用类型相当安全的语言写出类型不太安全的程序，绝对类型安全的编程语言暂时还没有。</p>\n<ol>\n<li>c的类型安全<br> c只在局部上下文中表现出类型安全，比如试图从一种结构体的指针转换为另外一种结构体的指针时，编译器将会报错，除非使用显示类型转换。<ul>\n<li>printf格式输出<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;整型数:%d\\n&quot;</span>,<span class=\"number\">10</span>);</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;浮点型数:%f\\n&quot;</span>,<span class=\"number\">10</span>);</span><br></pre></td></tr></table></figure>\n上述代码中，使用%d控制整型数字的输出，没有问题，但是改成%时，明显输出错误，再改成%s时，运行直接报segmentation fault错误。</li>\n<li>malloc函数的返回值<br>malloc是C中进行内存分配的函数，它的返回类型是void <em>，即空类型指针,常常有这样的用法char <em>p = (char <em>)malloc(100 * sizeof(char));这里明显做了显式的类型转换。类型匹配尚且没有问题,但是一旦出现int</em> p=(int</em>)malloc(100</em>sizeof(char));就很可能带来一些问题,而这样的转换C并不会提示错误。。</li>\n</ul>\n</li>\n<li>c++的类型安全<br> 如果c++使用得当，它将远比c更有类型安全性。相比于c语言， c++提供了一些新的机制保障类型安全：<ul>\n<li>操作符new返回的指针类型严格与对象匹配，而不是void *；</li>\n<li>c中很多以*void **为参数的函数可以改写为c++模板函数，而模板是支持类型检查的；</li>\n<li>引入const关键字代替#define constants，它是有类型、有作用域的，而#define constants只是简单的文本替换；</li>\n<li>一些#define宏可被改写为inline函数，结合函数的重载，可在类型安全的前提下支持多种类型，当然改写为模板也能保证类型安全；</li>\n<li>c++提供了dynamic_cast关键字，使得转换过程更加安全，因为dynamic_cast比static_cast涉及更多具体的类型检查。</li>\n</ul>\n</li>\n</ol>\n<h1 id=\"25-大小端存储？\"><a href=\"#25-大小端存储？\" class=\"headerlink\" title=\"25. 大小端存储？\"></a>25. 大小端存储？</h1><p>大端存储：字数据的高字节存储在低地址中；<br>小端存储：字数据的低字节存储在低地址中。<br><strong>两种判断大小端存储的方法</strong></p>\n<ol>\n<li>使用强制类型转换 <figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span> </span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> a = <span class=\"number\">0x1234</span>;</span><br><span class=\"line\">    <span class=\"comment\">//亩于int和char的长度不同,借助int型转换成char型,只会留下低地址的部分</span></span><br><span class=\"line\">    <span class=\"keyword\">char</span> c = (<span class=\"keyword\">char</span>)a;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (C == <span class=\"number\">0x12</span>)</span><br><span class=\"line\">        cout &lt;&lt; <span class=\"string\">&quot;big endian&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(C == <span class=\"number\">0x34</span>)</span><br><span class=\"line\">        cout &lt;&lt; <span class=\"string\">&quot;little endian&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>巧用union联合体 <figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"comment\">//union联合体的重叠式存储, endian联合体占用内存的空间为每个成员字节长度的最大值</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">union</span> <span class=\"title\">endian</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> a;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> ch;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    endian value;</span><br><span class=\"line\">    value.a =<span class=\"number\">0x1234</span>;</span><br><span class=\"line\">    <span class=\"comment\">//a和ch共用4字节的内存空间</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (value.ch ==<span class=\"number\">0x12</span>)</span><br><span class=\"line\">        cout &lt;&lt; <span class=\"string\">&quot;big endian&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (value.ch == <span class=\"number\">0x34</span>)</span><br><span class=\"line\">        cout &lt;&lt; <span class=\"string\">&quot;Tittle endian&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h1 id=\"26-c-内存分区？\"><a href=\"#26-c-内存分区？\" class=\"headerlink\" title=\"26. c++内存分区？\"></a>26. c++内存分区？</h1><p><strong>堆</strong><br>在执行函数时，函数内局部变量的存储单元都可以在栈上创建，函数执行结束时这些存储单元自动被释放。栈内存分配运算内置于处理器的指令集中，效率很高，但是分配的内存容量有限；<br><strong>栈</strong><br>就是那些由new分配的内存块，他们的释放编译器不去管，由我们的应用程序去控制，一般一个new就要对应一个delete。如果程序员没有释放掉，那么在程序结束后，操作系统会自动回收；<br><strong>自由存储区</strong><br>就是那些由malloc等分配的内存块，它和堆是十分相似的，不过它是用free来结束自己的生命的；<br><strong>全局/静态存储区</strong><br>全局变量和静态变量被分配到同一块内存中，在以前的C语言中，全局变量和静态变量又分为初始化的和未初始化的，在c++里面没有这个区分了，它们共同占用同一块内存区，在该区定义的变量若没有初始化，则会被自动初始化，例如int型变量自动初始为0；<br><strong>常量存储区</strong><br>这是一块比较特殊的存储区,，这里面存放的是常量，不允许修改；<br><strong>代码段</strong><br>存放函数体的二进制代码</p>\n<h1 id=\"27-形参和实参？\"><a href=\"#27-形参和实参？\" class=\"headerlink\" title=\"27. 形参和实参？\"></a>27. 形参和实参？</h1><ul>\n<li>形参变量只有在被调用时才分配内存单元，在调用结束时，即刻释放所分配的内存单元。因此，形参只有在函数内部有效。函数调用结束返回主调函数后则不能再使用该形参变量；</li>\n<li>实参可以是常量、变量、表达式、函数等，无论实参是何种类型的量，在进行函数调用时，它们都必须具有确定的值，以便把这些值传送给形参。因此应预先用赋值，输入等办法使实参获得确定值，会产生一个临时变量；</li>\n<li>实参和形参在数量上、类型上、顺序上应严格一致，否则会发生”类型不匹配”的错误；</li>\n<li>函数调用中发生的数据传送是单向的。即只能把实参的值传送给形参，而不能把形参的值反向地传送给实参。因此在函数调用过程中，形参的值发生改变，而实参中的值不会变化；</li>\n<li>当形参和实参不是指针类型时，在该函数运行时，形参和实参是不同的变量，他们在内存中位于不同的位置，形参将实参的内容复制一份，在该函数运行结束的时候形参被释放，而实参内容不会改变。</li>\n</ul>\n<h1 id=\"28-值传递、指针传递、引用传递的区别和效率？\"><a href=\"#28-值传递、指针传递、引用传递的区别和效率？\" class=\"headerlink\" title=\"28. 值传递、指针传递、引用传递的区别和效率？\"></a>28. 值传递、指针传递、引用传递的区别和效率？</h1><ul>\n<li>值传递：有一个形参向函数所属的栈拷贝数据的过程，如果值传递的对象是类对象或是大的结构体对象，将耗费一定的时间和空间(传值)。</li>\n<li>指针传递：同样有一个形参向函数所属的栈拷贝数据的过程，但拷贝的数据是一个固定为4字节的地址(传值,传递的是地址值)；</li>\n<li>引用传递：同样有上述的数据拷贝过程，但其是针对地址的，相当于为该数据所在的地址起了一个别名(传地址)；</li>\n<li>效率上讲，指针传递和引用传递比值传递效率高。一般主张使用引用传递，代码逻辑上更加紧凑、清晰。</li>\n</ul>\n<h1 id=\"29-深拷贝与浅拷贝？\"><a href=\"#29-深拷贝与浅拷贝？\" class=\"headerlink\" title=\"29. 深拷贝与浅拷贝？\"></a>29. 深拷贝与浅拷贝？</h1><ul>\n<li>浅复制：只是拷贝了基本类型的数据,，而引用类型数据，复制后也是会发生引用，我们把这种拷贝叫做” (浅复制)浅拷贝” ，换句话说，浅复制仅仅是指向被复制的内存地址，如果原地址中对象被改变了，那么浅复制出来的对象也会相应改变；<br>  深复制：在计算机中开辟了一块新的内存地址用于存放复制的对象；</li>\n<li>在某些状况下，类内成员变量需要动态开辟堆内存，如果实行位拷贝，也就是把对象里的值完全复制给另一个对象，如A-B，这时，如果B中有一个成员变量指针已经申请了内存，那A中的那个成员变量也指向同一块内存。这就出现了问题：当B把内存释放了(如：析构) ，这时A内的指针就是野指针了出现运行错误。</li>\n</ul>\n<h1 id=\"30-智能指针？\"><a href=\"#30-智能指针？\" class=\"headerlink\" title=\"30. 智能指针？\"></a>30. 智能指针？</h1><p><strong>原理</strong><br>智能指针是一个类，用来存储指向动态分配对象的指针，负责自动释放动态分配的对象，防止堆内存泄露。交给一个类对象区管理，当类对象生命周期结束时，自动调用析构函数释放资源。<br><strong>常用的智能指针</strong></p>\n<ol>\n<li><strong>shared_ptr</strong><br> 实现原理：<strong>采用引用计数器的方法</strong>，允许多个智能指针指向同一个对象，每当多一个指针指向该对象时，指向该对象的所有智能指针内部的引用计数加1，每当减少一个智能指针指向对象时，引用计数会减1，当计数为0的时候会自动释放动态分配的资源。<ul>\n<li>智能指针将一个计数器与类指向的对象相关联，引用计数器跟踪共有多少个类对象共享同一指针；</li>\n<li>每次创建类的新对象时，初始化指针并将引用计数置为1；</li>\n<li>当对象作为另一对象的副本而创建时，拷贝构造函数拷贝指针并增加与之相应的引用计数；</li>\n<li>对一个对象进行赋值时，赋值操作符减少左操作数所指对象的引用计数（如果引用计数为减至0，则删除对象），并增加右操作数所指对象的引用计数；</li>\n<li>调用析构函数时，构造函数减少引用计数（如果引用计数减至0，则删除基础对象）。</li>\n</ul>\n</li>\n<li><strong>unique_pt</strong><br> unique_ptr采用的是独享所有权语义，一个非空的unique_ptr总是拥有它所指向的资源。转移一个unique_ptr将会把所有权全部从源指针转移给目标指针，源指针被置空；所以<strong>unique_ptr不支持普通的拷贝和赋值操作</strong>，不能用在STL标准容器中；局部变量的返回值除外（因为编译器知道要返回的对象将要被销毁）；如果你拷贝一个unique_ptr，那么拷贝结束后，这两个unique_ptr都会指向相同的资源，造成在结束时对同一内存指针多次释放而导致程序崩溃。</li>\n<li><strong>weak_ptr</strong><br> weak_ptr：弱引用。 引用计数有一个问题就是互相引用形成环（环形引用），这样两个指针指向的内存都无法释放。需要使用weak_ptr打破环形引用。<strong>weak_ptr是一个弱引用，它是为了配合shared_ptr而引入的一种智能指针</strong>，它指向一个由shared_ptr管理的对象而不影响所指对象的生命周期，也就是说，它只引用，不计数。如果一块内存被shared_ptr和weak_ptr同时引用，当所有shared_ptr析构了之后，不管还有没有weak_ptr引用该内存，内存也会被释放。所以weak_ptr不保证它指向的内存一定是有效的，在使用之前使用函数lock()检查weak_ptr是否为空指针。</li>\n<li><strong>auto_ptr</strong><br> <strong>auto_ptr不支持拷贝和赋值操作</strong>，不能用在STL标准容器中。STL容器中的元素经常要支持拷贝、赋值操作，在这过程中auto_ptr会传递所有权，auto_ptr采用的是独享所有权语义，一个非空的unique_ptr总是拥有它所指向的资源。转移一个auto_ptr将会把所有权全部从源指针转移给目标指针，源指针被置空。</li>\n</ol>\n<p><strong>智能指针代码实现：</strong> 用两个类来实现智能指针的功能，一个是引用计数类，另一个则是指针类。<br><strong>引用计数类</strong><br>    <figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//引用计数器类用于存储指向同一对象的指针数</span></span><br><span class=\"line\"><span class=\"keyword\">template</span>&lt;<span class=\"keyword\">typename</span> T&gt;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Counter</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">\t<span class=\"comment\">//数据成员</span></span><br><span class=\"line\">\tT *ptr;<span class=\"comment\">//对象指针</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> cnt; <span class=\"comment\">// 引用计数器1</span></span><br><span class=\"line\">\t<span class=\"comment\">//友元类声明</span></span><br><span class=\"line\">\t<span class=\"keyword\">template</span>&lt;<span class=\"keyword\">typename</span> T&gt;</span><br><span class=\"line\">\t<span class=\"keyword\">friend</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SmartPtr</span>;</span></span><br><span class=\"line\">\t<span class=\"comment\">//构造函数</span></span><br><span class=\"line\">\t<span class=\"built_in\">Counter</span>(T *p)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tptr =p;</span><br><span class=\"line\">\t\tcnt = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//折构函数</span></span><br><span class=\"line\">\t~<span class=\"built_in\">Counter</span>()</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">delete</span> ptr;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br><strong>指针类</strong><br>    <figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">template</span>&lt;<span class=\"keyword\">typename</span> T&gt;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SmartPtr</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">\t<span class=\"comment\">//数据成员</span></span><br><span class=\"line\">\tCounter&lt;T&gt; ptr_cnt;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"comment\">//普通构造函数 初始化计数类</span></span><br><span class=\"line\">\t<span class=\"built_in\">SmartPtr</span>(T *p)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tptr_cnt = <span class=\"keyword\">new</span> Counter&lt;T&gt;(p);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//拷贝构造函数</span></span><br><span class=\"line\">\t<span class=\"built_in\">SmartPtr</span>(<span class=\"keyword\">const</span> SmartPtr &amp;other)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tptr_cnt = other.ptr_cnt;</span><br><span class=\"line\">\t\tptr_cnt-&gt;cnt++;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//赋值运算符重载函数</span></span><br><span class=\"line\">\tSmartPtr &amp;<span class=\"keyword\">operator</span>=(<span class=\"keyword\">const</span> SmartPtr &amp;rhs)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tptr_cnt = rhs-&gt;ptr_cnt;</span><br><span class=\"line\">\t\trhs.ptr cnt-&gt;cnt++;</span><br><span class=\"line\">\t\tptr_cnt-&gt;cnt--;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (ptr_cnt-&gt;cnt == <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">delete</span> ptr_cnt;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> *<span class=\"keyword\">this</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//解引用运算符重载函数</span></span><br><span class=\"line\">\tT &amp;<span class=\"keyword\">operator</span>*()</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> *(ptr_cnt-&gt;cnt);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//析构函数</span></span><br><span class=\"line\">\t~<span class=\"built_in\">SmartPtr</span>()</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tptr_cnt-&gt;cnt--;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(ptr_cnt-&gt;cnt == <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">delete</span> ptr_cnt;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\t\tcout &lt;&lt; <span class=\"string\">&quot;还有&quot;</span> &lt;&lt; ptr_cnt-&gt;cnt &lt;&lt; <span class=\"string\">&quot;个指针指向基础对象&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"31-函数指针？\"><a href=\"#31-函数指针？\" class=\"headerlink\" title=\"31. 函数指针？\"></a>31. 函数指针？</h1><p><strong>定义：</strong>函数指针是指向函数的指针变量。 因此“函数指针”本身首先应是指针变量，只不过该指针变量指向函数。这正如用指针变量可指向整型变量、字符型、数组一样，这里是指向函数。<br><strong>有两个用途：</strong>调用函数和做函数的参数。<br><strong>声明方法：</strong><br>返回值类型 (* 指针变量名) (形参列表);<br>typedef int (*fun)(int, int);  // 声明一个指向同样参数、返回值的函数指针类型<br>typedef int(fun)(int, int);  //声明一种函数类型<br><strong>注1：</strong>“返回值类型”说明函数的返回类型，“(指针变量名 )”中的括号不能省，括号改变了运算符的优先级。若省略整体则成为一个函数说明，说明了一个返回的数据类型是指针的函数，后面的“形参列表”表示指针变量指向的函数所带的参数列表。                         <strong>注2：</strong>函数括号中的形参可有可无，视情况而定。<br><strong>指向函数的指针变量没有++和–运算。</strong></p>\n<h1 id=\"32-c-c-语言编译四步骤？\"><a href=\"#32-c-c-语言编译四步骤？\" class=\"headerlink\" title=\"32. c/c++语言编译四步骤？\"></a>32. c/c++语言编译四步骤？</h1><p><strong>预编译</strong><br>主要处理源代码文件中的以“#”开头的预编译指令。处理规则见下：</p>\n<ol>\n<li>删除所有的#define，展开所有的宏定义；</li>\n<li>处理所有的条件预编译指令，如“#if”、“#endif”、“#ifdef”、“#elif”和“#else”；</li>\n<li>处理“#include”预编译指令，将文件内容替换到它的位置，这个过程是递归进行的，文件中包含其他文件；</li>\n<li>删除所有的注释，“//”和“/**/”；</li>\n<li>保留所有的#pragma 编译器指令，编译器需要用到他们，如：#pragma once 是为了防止有文件被重复引用；</li>\n<li>添加行号和文件标识，便于编译时编译器产生调试用的行号信息，和编译时产生编译错误或警告是能够显示行号。</li>\n</ol>\n<p><strong>编译</strong><br>把预编译之后生成的.i或.ii文件，进行一系列词法分析、语法分析、语义分析及优化后，生成相应的汇编代码文件。</p>\n<ol>\n<li>词法分析：利用类似于“有限状态机”的算法，将源代码程序输入到扫描机中，将其中的字符序列分割成一系列的记号；</li>\n<li>语法分析：语法分析器对由扫描器产生的记号，进行语法分析，产生语法树。由语法分析器输出的语法树是一种以表达式为节点的树；</li>\n<li>语义分析：语法分析器只是完成了对表达式语法层面的分析，语义分析器则对表达式是否有意义进行判断，其分析的语义是静态语义——在编译期能分期的语义，相对应的动态语义是在运行期才能确定的语义；</li>\n<li>优化：源代码级别的一个优化过程；</li>\n<li>目标代码生成：由代码生成器将中间代码转换成目标机器代码，生成一系列的代码序列——汇编语言表示；</li>\n<li>目标代码优化：目标代码优化器对上述的目标机器代码进行优化：寻找合适的寻址方式、使用位移来替代乘法运算、删除多余的指令等。</li>\n</ol>\n<p><strong>汇编</strong><br>将汇编代码转变成机器可以执行的指令(机器码文件)。 汇编器的汇编过程相对于编译器来说更简单，没有复杂的语法，也没有语义，更不需要做指令优化，只是根据汇编指令和机器指令的对照表一一翻译过来，汇编过程由汇编器as完成。经汇编之后，产生目标文件(与可执行文件格式几乎一样).o(Windows下)、.obj(Linux下)。<br><strong>链接</strong><br>将不同的源文件产生的目标文件进行链接，从而形成一个可以执行的程序。链接分为静态链接和动态链接。</p>\n<ol>\n<li>静态链接<br> 函数和数据被编译进一个二进制文件。在使用静态库的情况下，在编译链接可执行文件时，链接器从库中复制这些函数和数据并把它们和应用程序的其它模块组合起来创建最终的可执行文件。<br> 空间浪费：因为每个可执行程序中对所有需要的目标文件都要有一份副本，所以如果多个程序对同一个目标文件都有依赖，会出现同一个目标文件都在内存存在多个副本；<br> 更新困难：每当库函数的代码修改了，这个时候就需要重新进行编译链接形成可执行程序。<br> 运行速度快：但是静态链接的优点就是，在可执行程序中已经具备了所有执行程序所需要的任何东西，在执行的时候运行速度快。</li>\n<li>动态链接<br> 动态链接的基本思想是把程序按照模块拆分成各个相对独立部分，在程序运行时才将它们链接在一起形成一个完整的程序，而不是像静态链接一样把所有程序模块都链接成一个单独的可执行文件。<br> 共享库：就是即使需要每个程序都依赖同一个库，但是该库不会像静态链接那样在内存中存在多分，副本，而是这多个程序在执行时共享同一份副本；<br> 更新方便：更新时只需要替换原来的目标文件，而无需将所有的程序再重新链接一遍。当程序下一次运行时，新版本的目标文件会被自动加载到内存并且链接起来，程序就完成了升级的目标。<br> 性能损耗：因为把链接推迟到了程序运行时，所以每次执行程序都需要进行链接，所以性能会有一定损失。</li>\n</ol>"},{"title":"std::list元素交换","date":"2022-04-14T16:00:00.000Z","top":1,"_content":"std::list元素交换\n<!--more-->\n\n```c++\ntemplate<typename T>\nvoid listSwap(std::list<T> &list,int select,int target) \n{\n    //定义第三方变量\n    std::list<T>::iterator sIt = list.begin();\n    for(int j =0;j<select;j++,sIt++){}\n    std::list<T>::iterator tIt = list.begin();\n    for(int j =0;j<target;j++,tIt++){}\n     //交换值\n    std::iter_swap(sIt,tIt);\n}\n```","source":"_posts/list元素交换.md","raw":"---\ntitle: std::list元素交换\ndate: 2022-4-15\ntop: 1\ntags:\n\tc/c++\n---\nstd::list元素交换\n<!--more-->\n\n```c++\ntemplate<typename T>\nvoid listSwap(std::list<T> &list,int select,int target) \n{\n    //定义第三方变量\n    std::list<T>::iterator sIt = list.begin();\n    for(int j =0;j<select;j++,sIt++){}\n    std::list<T>::iterator tIt = list.begin();\n    for(int j =0;j<target;j++,tIt++){}\n     //交换值\n    std::iter_swap(sIt,tIt);\n}\n```","slug":"list元素交换","published":1,"updated":"2022-04-15T08:37:55.785Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl206jlhw0009pkvn3ohub09f","content":"<p>std::list元素交换</p>\n<span id=\"more\"></span>\n\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">template</span>&lt;<span class=\"keyword\">typename</span> T&gt;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">listSwap</span><span class=\"params\">(std::list&lt;T&gt; &amp;list,<span class=\"keyword\">int</span> select,<span class=\"keyword\">int</span> target)</span> </span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//定义第三方变量</span></span><br><span class=\"line\">    std::list&lt;T&gt;::iterator sIt = list.<span class=\"built_in\">begin</span>();</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j =<span class=\"number\">0</span>;j&lt;select;j++,sIt++)&#123;&#125;</span><br><span class=\"line\">    std::list&lt;T&gt;::iterator tIt = list.<span class=\"built_in\">begin</span>();</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j =<span class=\"number\">0</span>;j&lt;target;j++,tIt++)&#123;&#125;</span><br><span class=\"line\">     <span class=\"comment\">//交换值</span></span><br><span class=\"line\">    std::<span class=\"built_in\">iter_swap</span>(sIt,tIt);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>std::list元素交换</p>","more":"<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">template</span>&lt;<span class=\"keyword\">typename</span> T&gt;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">listSwap</span><span class=\"params\">(std::list&lt;T&gt; &amp;list,<span class=\"keyword\">int</span> select,<span class=\"keyword\">int</span> target)</span> </span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//定义第三方变量</span></span><br><span class=\"line\">    std::list&lt;T&gt;::iterator sIt = list.<span class=\"built_in\">begin</span>();</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j =<span class=\"number\">0</span>;j&lt;select;j++,sIt++)&#123;&#125;</span><br><span class=\"line\">    std::list&lt;T&gt;::iterator tIt = list.<span class=\"built_in\">begin</span>();</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j =<span class=\"number\">0</span>;j&lt;target;j++,tIt++)&#123;&#125;</span><br><span class=\"line\">     <span class=\"comment\">//交换值</span></span><br><span class=\"line\">    std::<span class=\"built_in\">iter_swap</span>(sIt,tIt);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"makefile","date":"2021-09-03T16:00:00.000Z","_content":"makefile\n<!--more-->\n\n# 1. 什么是makefile？\nMakefile 可以简单的认为是一个工程文件的编译规则，描述了整个工程的编译和链接等规则。\n文件命名为\"GNUmakefile\" 、\"makefile\" 、\"Makefile\" 均可以。\n规则主要是两个部分组成，分别是依赖的关系和执行的命令：\n```jsx\ntargets:prerequisites\n\tcommand\nor\ntargets : prerequisites; command\n\tcommand\n```\ntargets：规则的目标，可以是 Object File（一般称它为中间文件），也可以是可执行文件，还可以是一个标签；\nprerequisites：是我们的依赖文件，要生成 targets 需要的文件或者是目标。可以是多个，也可以是没有；\ncommand：make 需要执行的命令（任意的 shell 命令）。可以有多条命令，每一条命令占一行。\n注:我们的目标和依赖文件之间要使用冒号分隔开，命令的开始一定要使用Tab键。\n```jsx\neg:\ntest:test.c\n\tgcc -o test test.c\n```\n\n# 2. makefile的组成\n简单的概括一下Makefile 中的内容，它主要包含有五个部分，分别是：\n1) 显式规则\n显式规则说明了，如何生成一个或多的的目标文件。这是由 Makefile 的书写者明显指出，要生成的文件，文件的依赖文件，生成的命令。\n2) 隐晦规则\n由于我们的 make 命名有自动推导的功能，所以隐晦的规则可以让我们比较粗糙地简略地书写Makefile，这是由 make 命令所支持的。\n3) 变量的定义\n在 Makefile 中我们要定义一系列的变量，变量一般都是字符串，这个有点像C语言中的宏，当 Makefile 被执行时，其中的变量都会被扩展到相应的引用位置上。\n4) 文件指示\n其包括了三个部分，一个是在一个 Makefile 中引用另一个 Makefile，就像C语言中的 include 一样；\n另一个是指根据某些情况指定 Makefile 中的有效部分，就像C语言中的预编译 #if 一样；还有就是定义一个多行的命令。\n5) 注释\nMakefile 中只有行注释，和 UNIX 的 Shell 脚本一样，其注释是用“#”字符，这个就像 C/C++ 的“//”一样。如果你要在你的 Makefile 中使用“#”字符，可以用反斜框进行转义，如：“\\#”。\n\n# 3.通配符\n- *\n匹配0个或者是任意个字符\n```jsx\neg:\n\t.PHONY:clean\n\tclean:\n\t\trm -rf *.o test*\n```\n- ？\n*匹配任意一个字符*\n- []\n*我们可以指定匹配的字符放在 \"[]\" 中*\n- %\n*和**类似\n```jsx\neg:\n\ttest:test.o test1.o\n\t\tgcc -o $@ $^\n\t%.o:%.c\n\t\tgcc -o $@ $^\n```\n::\"%.o\" 把我们需要的所有的 \".o\" 文件组合成为一个列表，从列表中挨个取出的每一个文件。\n\n# 4. 变量\n- 定义\n变量的名称=值列表：VALUE_LIST = one two three\n- 使用\n\"$(VALUE_LIST)\" or \"${VALUE_LIST}\"\n```jsx\neg:\n\tOBJ=main.o test.o test1.o test2.o\n\ttest:$(OBJ)\n\t\tgcc -o test $(OBJ)\n```\n- 四种基本赋值方式\n简单赋值 ( := ) 编程语言中常规理解的赋值方式，只对当前语句的变量有效。\n```jsx\neg:\n\tx:=foo\n\ty:=$(x)b\n\tx:=new\n\ttest：\n\t\t@echo \"y=>$(y)\"\n\t\t@echo \"x=>$(x)\"\n在 shell 命令行执行make test:\n\ty=>foob\n\tx=>new\t\n```\n递归赋值 (  = ) 赋值语句可能影响多个变量，所有目标变量相关的其他变量都受影响。\n```jsx\neg:\n\tx=foo\n\ty=$(x)b\n\tx=new\n\ttest：\n\t\t@echo \"y=>$(y)\"\n\t\t@echo \"x=>$(x)\"\n在 shell 命令行执行make test:\t\n\ty=>newb\n\tx=>new\n```\n条件赋值 ( ?= ) 如果变量未定义，则使用符号中的值定义变量。如果该变量已经赋值，则该赋值语句无效。\n```jsx\neg:\n\tx:=foo\n\ty:=$(x)b\n\tx?=new\n\ttest：\n\t\t@echo \"y=>$(y)\"\n\t\t@echo \"x=>$(x)\"\n\t在 shell 命令行执行make test:\n\t\ty=>foob\n\t\tx=>foo\n```\n追加赋值 ( += ) 原变量用空格隔开的方式追加一个新值。\n```jsx\neg:\n\tx:=foo\n\ty:=$(x)b\n\tx+=$(y)\n\ttest：\n\t\t@echo \"y=>$(y)\"\n\t\t@echo \"x=>$(x)\"\n\t在 shell 命令行执行make test:\n\t\ty=>foob\n\t\tx=>foo foob\n```\n\n# 5. VPATH和vpath\n- VPATH\nVPATH 是变量，更具体的说是环境变量，Makefile 中的一种特殊变量，使用时需要指定文件的路径。\n```jsx\neg:\n\tVPATH := src\n\t当存在多个路径：\n\tVPATH := src car or VPATH := src:car\n```\n- vpath\nvpath 是关键字，按照模式搜索，也可以说成是选择搜索。搜索的时候不仅需要加上文件的路径，还需要加上相应限制的条件。\n1) vpath PATTERN DIRECTORIES\n```jsx\neg:\n\tvpath test.c src\t#在 src 路径下搜索文件 test.c\n\t当存在多个路径：\n\tvpath test.c src car or vpath test.c src : car\n\t#PATTERN：可以理解为要寻找的条件，DIRECTORIES：寻找的路径\n```\n2) vpath PATTERN\n```jsx\neg:\n\tvpath test.c\t#清除符合文件 test.c 的搜索目录\n```\n3) vpath\n```jsx\neg:\n\tvpath\n\t#vpath 单独使的意思是清除所有已被设置的文件搜索路径。\n```\n\n# 6. 函数\n\n调用格式：$(<function>,<arguments>) or ${<function>,<arguments>}\nfunction 是函数名，arguments 是函数的参数，参数之间要用逗号分隔开。而参数和函数名之间使用空格分开。","source":"_posts/makefile.md","raw":"---\ntitle: makefile\ndate: 2021-9-4\ntags:\n\tmakefile\n---\nmakefile\n<!--more-->\n\n# 1. 什么是makefile？\nMakefile 可以简单的认为是一个工程文件的编译规则，描述了整个工程的编译和链接等规则。\n文件命名为\"GNUmakefile\" 、\"makefile\" 、\"Makefile\" 均可以。\n规则主要是两个部分组成，分别是依赖的关系和执行的命令：\n```jsx\ntargets:prerequisites\n\tcommand\nor\ntargets : prerequisites; command\n\tcommand\n```\ntargets：规则的目标，可以是 Object File（一般称它为中间文件），也可以是可执行文件，还可以是一个标签；\nprerequisites：是我们的依赖文件，要生成 targets 需要的文件或者是目标。可以是多个，也可以是没有；\ncommand：make 需要执行的命令（任意的 shell 命令）。可以有多条命令，每一条命令占一行。\n注:我们的目标和依赖文件之间要使用冒号分隔开，命令的开始一定要使用Tab键。\n```jsx\neg:\ntest:test.c\n\tgcc -o test test.c\n```\n\n# 2. makefile的组成\n简单的概括一下Makefile 中的内容，它主要包含有五个部分，分别是：\n1) 显式规则\n显式规则说明了，如何生成一个或多的的目标文件。这是由 Makefile 的书写者明显指出，要生成的文件，文件的依赖文件，生成的命令。\n2) 隐晦规则\n由于我们的 make 命名有自动推导的功能，所以隐晦的规则可以让我们比较粗糙地简略地书写Makefile，这是由 make 命令所支持的。\n3) 变量的定义\n在 Makefile 中我们要定义一系列的变量，变量一般都是字符串，这个有点像C语言中的宏，当 Makefile 被执行时，其中的变量都会被扩展到相应的引用位置上。\n4) 文件指示\n其包括了三个部分，一个是在一个 Makefile 中引用另一个 Makefile，就像C语言中的 include 一样；\n另一个是指根据某些情况指定 Makefile 中的有效部分，就像C语言中的预编译 #if 一样；还有就是定义一个多行的命令。\n5) 注释\nMakefile 中只有行注释，和 UNIX 的 Shell 脚本一样，其注释是用“#”字符，这个就像 C/C++ 的“//”一样。如果你要在你的 Makefile 中使用“#”字符，可以用反斜框进行转义，如：“\\#”。\n\n# 3.通配符\n- *\n匹配0个或者是任意个字符\n```jsx\neg:\n\t.PHONY:clean\n\tclean:\n\t\trm -rf *.o test*\n```\n- ？\n*匹配任意一个字符*\n- []\n*我们可以指定匹配的字符放在 \"[]\" 中*\n- %\n*和**类似\n```jsx\neg:\n\ttest:test.o test1.o\n\t\tgcc -o $@ $^\n\t%.o:%.c\n\t\tgcc -o $@ $^\n```\n::\"%.o\" 把我们需要的所有的 \".o\" 文件组合成为一个列表，从列表中挨个取出的每一个文件。\n\n# 4. 变量\n- 定义\n变量的名称=值列表：VALUE_LIST = one two three\n- 使用\n\"$(VALUE_LIST)\" or \"${VALUE_LIST}\"\n```jsx\neg:\n\tOBJ=main.o test.o test1.o test2.o\n\ttest:$(OBJ)\n\t\tgcc -o test $(OBJ)\n```\n- 四种基本赋值方式\n简单赋值 ( := ) 编程语言中常规理解的赋值方式，只对当前语句的变量有效。\n```jsx\neg:\n\tx:=foo\n\ty:=$(x)b\n\tx:=new\n\ttest：\n\t\t@echo \"y=>$(y)\"\n\t\t@echo \"x=>$(x)\"\n在 shell 命令行执行make test:\n\ty=>foob\n\tx=>new\t\n```\n递归赋值 (  = ) 赋值语句可能影响多个变量，所有目标变量相关的其他变量都受影响。\n```jsx\neg:\n\tx=foo\n\ty=$(x)b\n\tx=new\n\ttest：\n\t\t@echo \"y=>$(y)\"\n\t\t@echo \"x=>$(x)\"\n在 shell 命令行执行make test:\t\n\ty=>newb\n\tx=>new\n```\n条件赋值 ( ?= ) 如果变量未定义，则使用符号中的值定义变量。如果该变量已经赋值，则该赋值语句无效。\n```jsx\neg:\n\tx:=foo\n\ty:=$(x)b\n\tx?=new\n\ttest：\n\t\t@echo \"y=>$(y)\"\n\t\t@echo \"x=>$(x)\"\n\t在 shell 命令行执行make test:\n\t\ty=>foob\n\t\tx=>foo\n```\n追加赋值 ( += ) 原变量用空格隔开的方式追加一个新值。\n```jsx\neg:\n\tx:=foo\n\ty:=$(x)b\n\tx+=$(y)\n\ttest：\n\t\t@echo \"y=>$(y)\"\n\t\t@echo \"x=>$(x)\"\n\t在 shell 命令行执行make test:\n\t\ty=>foob\n\t\tx=>foo foob\n```\n\n# 5. VPATH和vpath\n- VPATH\nVPATH 是变量，更具体的说是环境变量，Makefile 中的一种特殊变量，使用时需要指定文件的路径。\n```jsx\neg:\n\tVPATH := src\n\t当存在多个路径：\n\tVPATH := src car or VPATH := src:car\n```\n- vpath\nvpath 是关键字，按照模式搜索，也可以说成是选择搜索。搜索的时候不仅需要加上文件的路径，还需要加上相应限制的条件。\n1) vpath PATTERN DIRECTORIES\n```jsx\neg:\n\tvpath test.c src\t#在 src 路径下搜索文件 test.c\n\t当存在多个路径：\n\tvpath test.c src car or vpath test.c src : car\n\t#PATTERN：可以理解为要寻找的条件，DIRECTORIES：寻找的路径\n```\n2) vpath PATTERN\n```jsx\neg:\n\tvpath test.c\t#清除符合文件 test.c 的搜索目录\n```\n3) vpath\n```jsx\neg:\n\tvpath\n\t#vpath 单独使的意思是清除所有已被设置的文件搜索路径。\n```\n\n# 6. 函数\n\n调用格式：$(<function>,<arguments>) or ${<function>,<arguments>}\nfunction 是函数名，arguments 是函数的参数，参数之间要用逗号分隔开。而参数和函数名之间使用空格分开。","slug":"makefile","published":1,"updated":"2021-09-19T05:33:29.684Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl206jlhx000apkvn60q4cbzl","content":"<p>makefile</p>\n<span id=\"more\"></span>\n\n<h1 id=\"1-什么是makefile？\"><a href=\"#1-什么是makefile？\" class=\"headerlink\" title=\"1. 什么是makefile？\"></a>1. 什么是makefile？</h1><p>Makefile 可以简单的认为是一个工程文件的编译规则，描述了整个工程的编译和链接等规则。<br>文件命名为”GNUmakefile” 、”makefile” 、”Makefile” 均可以。<br>规则主要是两个部分组成，分别是依赖的关系和执行的命令：</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">targets:prerequisites</span><br><span class=\"line\">\tcommand</span><br><span class=\"line\">or</span><br><span class=\"line\"><span class=\"attr\">targets</span> : prerequisites; command</span><br><span class=\"line\">\tcommand</span><br></pre></td></tr></table></figure>\n<p>targets：规则的目标，可以是 Object File（一般称它为中间文件），也可以是可执行文件，还可以是一个标签；<br>prerequisites：是我们的依赖文件，要生成 targets 需要的文件或者是目标。可以是多个，也可以是没有；<br>command：make 需要执行的命令（任意的 shell 命令）。可以有多条命令，每一条命令占一行。<br>注:我们的目标和依赖文件之间要使用冒号分隔开，命令的开始一定要使用Tab键。</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">eg:</span><br><span class=\"line\">test:test.c</span><br><span class=\"line\">\tgcc -o test test.c</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"2-makefile的组成\"><a href=\"#2-makefile的组成\" class=\"headerlink\" title=\"2. makefile的组成\"></a>2. makefile的组成</h1><p>简单的概括一下Makefile 中的内容，它主要包含有五个部分，分别是：</p>\n<ol>\n<li>显式规则<br>显式规则说明了，如何生成一个或多的的目标文件。这是由 Makefile 的书写者明显指出，要生成的文件，文件的依赖文件，生成的命令。</li>\n<li>隐晦规则<br>由于我们的 make 命名有自动推导的功能，所以隐晦的规则可以让我们比较粗糙地简略地书写Makefile，这是由 make 命令所支持的。</li>\n<li>变量的定义<br>在 Makefile 中我们要定义一系列的变量，变量一般都是字符串，这个有点像C语言中的宏，当 Makefile 被执行时，其中的变量都会被扩展到相应的引用位置上。</li>\n<li>文件指示<br>其包括了三个部分，一个是在一个 Makefile 中引用另一个 Makefile，就像C语言中的 include 一样；<br>另一个是指根据某些情况指定 Makefile 中的有效部分，就像C语言中的预编译 #if 一样；还有就是定义一个多行的命令。</li>\n<li>注释<br>Makefile 中只有行注释，和 UNIX 的 Shell 脚本一样，其注释是用“#”字符，这个就像 C/C++ 的“//”一样。如果你要在你的 Makefile 中使用“#”字符，可以用反斜框进行转义，如：“#”。</li>\n</ol>\n<h1 id=\"3-通配符\"><a href=\"#3-通配符\" class=\"headerlink\" title=\"3.通配符\"></a>3.通配符</h1><ul>\n<li>*<br>匹配0个或者是任意个字符<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">eg:</span><br><span class=\"line\">\t.PHONY:clean</span><br><span class=\"line\">\t<span class=\"attr\">clean</span>:</span><br><span class=\"line\">\t\trm -rf *.o test*</span><br></pre></td></tr></table></figure></li>\n<li>？</li>\n</ul>\n<p><em>匹配任意一个字符</em></p>\n<ul>\n<li>[]</li>\n</ul>\n<p><em>我们可以指定匹配的字符放在 “[]” 中</em></p>\n<ul>\n<li>%</li>\n</ul>\n<p>*和**类似</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">eg:</span><br><span class=\"line\">\ttest:test.o test1.o</span><br><span class=\"line\">\t\tgcc -o $@ $^</span><br><span class=\"line\">\t%.o:%.c</span><br><span class=\"line\">\t\tgcc -o $@ $^</span><br></pre></td></tr></table></figure>\n<p>::”%.o” 把我们需要的所有的 “.o” 文件组合成为一个列表，从列表中挨个取出的每一个文件。</p>\n<h1 id=\"4-变量\"><a href=\"#4-变量\" class=\"headerlink\" title=\"4. 变量\"></a>4. 变量</h1><ul>\n<li>定义<br>变量的名称=值列表：VALUE_LIST = one two three</li>\n<li>使用<br>“$(VALUE_LIST)” or “${VALUE_LIST}”<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">eg:</span><br><span class=\"line\">\tOBJ=main.o test.o test1.o test2.o</span><br><span class=\"line\">\t<span class=\"attr\">test</span>:$(OBJ)</span><br><span class=\"line\">\t\tgcc -o test $(OBJ)</span><br></pre></td></tr></table></figure></li>\n<li>四种基本赋值方式<br>简单赋值 ( := ) 编程语言中常规理解的赋值方式，只对当前语句的变量有效。<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">eg:</span><br><span class=\"line\">\tx:=foo</span><br><span class=\"line\">\t<span class=\"attr\">y</span>:=$(x)b</span><br><span class=\"line\">\t<span class=\"attr\">x</span>:=<span class=\"keyword\">new</span></span><br><span class=\"line\">\ttest：</span><br><span class=\"line\">\t\t@echo <span class=\"string\">&quot;y=&gt;$(y)&quot;</span></span><br><span class=\"line\">\t\t@echo <span class=\"string\">&quot;x=&gt;$(x)&quot;</span></span><br><span class=\"line\">在 shell 命令行执行make test:</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"params\">y</span>=&gt;</span>foob</span><br><span class=\"line\">\tx=&gt;<span class=\"keyword\">new</span>\t</span><br></pre></td></tr></table></figure>\n递归赋值 (  = ) 赋值语句可能影响多个变量，所有目标变量相关的其他变量都受影响。<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">eg:</span><br><span class=\"line\">\tx=foo</span><br><span class=\"line\">\ty=$(x)b</span><br><span class=\"line\">\tx=<span class=\"keyword\">new</span></span><br><span class=\"line\">\ttest：</span><br><span class=\"line\">\t\t@echo <span class=\"string\">&quot;y=&gt;$(y)&quot;</span></span><br><span class=\"line\">\t\t@echo <span class=\"string\">&quot;x=&gt;$(x)&quot;</span></span><br><span class=\"line\">在 shell 命令行执行make test:\t</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"params\">y</span>=&gt;</span>newb</span><br><span class=\"line\">\tx=&gt;<span class=\"keyword\">new</span></span><br></pre></td></tr></table></figure>\n条件赋值 ( ?= ) 如果变量未定义，则使用符号中的值定义变量。如果该变量已经赋值，则该赋值语句无效。<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">eg:</span><br><span class=\"line\">\tx:=foo</span><br><span class=\"line\">\t<span class=\"attr\">y</span>:=$(x)b</span><br><span class=\"line\">\tx?=<span class=\"keyword\">new</span></span><br><span class=\"line\">\ttest：</span><br><span class=\"line\">\t\t@echo <span class=\"string\">&quot;y=&gt;$(y)&quot;</span></span><br><span class=\"line\">\t\t@echo <span class=\"string\">&quot;x=&gt;$(x)&quot;</span></span><br><span class=\"line\">\t在 shell 命令行执行make test:</span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"params\">y</span>=&gt;</span>foob</span><br><span class=\"line\">\t\tx=&gt;foo</span><br></pre></td></tr></table></figure>\n追加赋值 ( += ) 原变量用空格隔开的方式追加一个新值。<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">eg:</span><br><span class=\"line\">\tx:=foo</span><br><span class=\"line\">\t<span class=\"attr\">y</span>:=$(x)b</span><br><span class=\"line\">\tx+=$(y)</span><br><span class=\"line\">\ttest：</span><br><span class=\"line\">\t\t@echo <span class=\"string\">&quot;y=&gt;$(y)&quot;</span></span><br><span class=\"line\">\t\t@echo <span class=\"string\">&quot;x=&gt;$(x)&quot;</span></span><br><span class=\"line\">\t在 shell 命令行执行make test:</span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"params\">y</span>=&gt;</span>foob</span><br><span class=\"line\">\t\tx=&gt;foo foob</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h1 id=\"5-VPATH和vpath\"><a href=\"#5-VPATH和vpath\" class=\"headerlink\" title=\"5. VPATH和vpath\"></a>5. VPATH和vpath</h1><ul>\n<li>VPATH<br>VPATH 是变量，更具体的说是环境变量，Makefile 中的一种特殊变量，使用时需要指定文件的路径。<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">eg:</span><br><span class=\"line\">\tVPATH := src</span><br><span class=\"line\">\t当存在多个路径：</span><br><span class=\"line\">\t<span class=\"attr\">VPATH</span> := src car or VPATH := src:car</span><br></pre></td></tr></table></figure></li>\n<li>vpath<br>vpath 是关键字，按照模式搜索，也可以说成是选择搜索。搜索的时候不仅需要加上文件的路径，还需要加上相应限制的条件。</li>\n</ul>\n<ol>\n<li>vpath PATTERN DIRECTORIES<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">eg:</span><br><span class=\"line\">\tvpath test.c src\t#在 src 路径下搜索文件 test.c</span><br><span class=\"line\">\t当存在多个路径：</span><br><span class=\"line\">\tvpath test.c src car or vpath test.c src : car</span><br><span class=\"line\">\t#PATTERN：可以理解为要寻找的条件，DIRECTORIES：寻找的路径</span><br></pre></td></tr></table></figure></li>\n<li>vpath PATTERN<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">eg:</span><br><span class=\"line\">\tvpath test.c\t#清除符合文件 test.c 的搜索目录</span><br></pre></td></tr></table></figure></li>\n<li>vpath<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">eg:</span><br><span class=\"line\">\tvpath</span><br><span class=\"line\">\t#vpath 单独使的意思是清除所有已被设置的文件搜索路径。</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h1 id=\"6-函数\"><a href=\"#6-函数\" class=\"headerlink\" title=\"6. 函数\"></a>6. 函数</h1><p>调用格式：$(<function>,<arguments>) or ${<function>,<arguments>}<br>function 是函数名，arguments 是函数的参数，参数之间要用逗号分隔开。而参数和函数名之间使用空格分开。</arguments></function></arguments></function></p>\n","site":{"data":{}},"excerpt":"<p>makefile</p>","more":"<h1 id=\"1-什么是makefile？\"><a href=\"#1-什么是makefile？\" class=\"headerlink\" title=\"1. 什么是makefile？\"></a>1. 什么是makefile？</h1><p>Makefile 可以简单的认为是一个工程文件的编译规则，描述了整个工程的编译和链接等规则。<br>文件命名为”GNUmakefile” 、”makefile” 、”Makefile” 均可以。<br>规则主要是两个部分组成，分别是依赖的关系和执行的命令：</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">targets:prerequisites</span><br><span class=\"line\">\tcommand</span><br><span class=\"line\">or</span><br><span class=\"line\"><span class=\"attr\">targets</span> : prerequisites; command</span><br><span class=\"line\">\tcommand</span><br></pre></td></tr></table></figure>\n<p>targets：规则的目标，可以是 Object File（一般称它为中间文件），也可以是可执行文件，还可以是一个标签；<br>prerequisites：是我们的依赖文件，要生成 targets 需要的文件或者是目标。可以是多个，也可以是没有；<br>command：make 需要执行的命令（任意的 shell 命令）。可以有多条命令，每一条命令占一行。<br>注:我们的目标和依赖文件之间要使用冒号分隔开，命令的开始一定要使用Tab键。</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">eg:</span><br><span class=\"line\">test:test.c</span><br><span class=\"line\">\tgcc -o test test.c</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"2-makefile的组成\"><a href=\"#2-makefile的组成\" class=\"headerlink\" title=\"2. makefile的组成\"></a>2. makefile的组成</h1><p>简单的概括一下Makefile 中的内容，它主要包含有五个部分，分别是：</p>\n<ol>\n<li>显式规则<br>显式规则说明了，如何生成一个或多的的目标文件。这是由 Makefile 的书写者明显指出，要生成的文件，文件的依赖文件，生成的命令。</li>\n<li>隐晦规则<br>由于我们的 make 命名有自动推导的功能，所以隐晦的规则可以让我们比较粗糙地简略地书写Makefile，这是由 make 命令所支持的。</li>\n<li>变量的定义<br>在 Makefile 中我们要定义一系列的变量，变量一般都是字符串，这个有点像C语言中的宏，当 Makefile 被执行时，其中的变量都会被扩展到相应的引用位置上。</li>\n<li>文件指示<br>其包括了三个部分，一个是在一个 Makefile 中引用另一个 Makefile，就像C语言中的 include 一样；<br>另一个是指根据某些情况指定 Makefile 中的有效部分，就像C语言中的预编译 #if 一样；还有就是定义一个多行的命令。</li>\n<li>注释<br>Makefile 中只有行注释，和 UNIX 的 Shell 脚本一样，其注释是用“#”字符，这个就像 C/C++ 的“//”一样。如果你要在你的 Makefile 中使用“#”字符，可以用反斜框进行转义，如：“#”。</li>\n</ol>\n<h1 id=\"3-通配符\"><a href=\"#3-通配符\" class=\"headerlink\" title=\"3.通配符\"></a>3.通配符</h1><ul>\n<li>*<br>匹配0个或者是任意个字符<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">eg:</span><br><span class=\"line\">\t.PHONY:clean</span><br><span class=\"line\">\t<span class=\"attr\">clean</span>:</span><br><span class=\"line\">\t\trm -rf *.o test*</span><br></pre></td></tr></table></figure></li>\n<li>？</li>\n</ul>\n<p><em>匹配任意一个字符</em></p>\n<ul>\n<li>[]</li>\n</ul>\n<p><em>我们可以指定匹配的字符放在 “[]” 中</em></p>\n<ul>\n<li>%</li>\n</ul>\n<p>*和**类似</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">eg:</span><br><span class=\"line\">\ttest:test.o test1.o</span><br><span class=\"line\">\t\tgcc -o $@ $^</span><br><span class=\"line\">\t%.o:%.c</span><br><span class=\"line\">\t\tgcc -o $@ $^</span><br></pre></td></tr></table></figure>\n<p>::”%.o” 把我们需要的所有的 “.o” 文件组合成为一个列表，从列表中挨个取出的每一个文件。</p>\n<h1 id=\"4-变量\"><a href=\"#4-变量\" class=\"headerlink\" title=\"4. 变量\"></a>4. 变量</h1><ul>\n<li>定义<br>变量的名称=值列表：VALUE_LIST = one two three</li>\n<li>使用<br>“$(VALUE_LIST)” or “${VALUE_LIST}”<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">eg:</span><br><span class=\"line\">\tOBJ=main.o test.o test1.o test2.o</span><br><span class=\"line\">\t<span class=\"attr\">test</span>:$(OBJ)</span><br><span class=\"line\">\t\tgcc -o test $(OBJ)</span><br></pre></td></tr></table></figure></li>\n<li>四种基本赋值方式<br>简单赋值 ( := ) 编程语言中常规理解的赋值方式，只对当前语句的变量有效。<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">eg:</span><br><span class=\"line\">\tx:=foo</span><br><span class=\"line\">\t<span class=\"attr\">y</span>:=$(x)b</span><br><span class=\"line\">\t<span class=\"attr\">x</span>:=<span class=\"keyword\">new</span></span><br><span class=\"line\">\ttest：</span><br><span class=\"line\">\t\t@echo <span class=\"string\">&quot;y=&gt;$(y)&quot;</span></span><br><span class=\"line\">\t\t@echo <span class=\"string\">&quot;x=&gt;$(x)&quot;</span></span><br><span class=\"line\">在 shell 命令行执行make test:</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"params\">y</span>=&gt;</span>foob</span><br><span class=\"line\">\tx=&gt;<span class=\"keyword\">new</span>\t</span><br></pre></td></tr></table></figure>\n递归赋值 (  = ) 赋值语句可能影响多个变量，所有目标变量相关的其他变量都受影响。<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">eg:</span><br><span class=\"line\">\tx=foo</span><br><span class=\"line\">\ty=$(x)b</span><br><span class=\"line\">\tx=<span class=\"keyword\">new</span></span><br><span class=\"line\">\ttest：</span><br><span class=\"line\">\t\t@echo <span class=\"string\">&quot;y=&gt;$(y)&quot;</span></span><br><span class=\"line\">\t\t@echo <span class=\"string\">&quot;x=&gt;$(x)&quot;</span></span><br><span class=\"line\">在 shell 命令行执行make test:\t</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"params\">y</span>=&gt;</span>newb</span><br><span class=\"line\">\tx=&gt;<span class=\"keyword\">new</span></span><br></pre></td></tr></table></figure>\n条件赋值 ( ?= ) 如果变量未定义，则使用符号中的值定义变量。如果该变量已经赋值，则该赋值语句无效。<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">eg:</span><br><span class=\"line\">\tx:=foo</span><br><span class=\"line\">\t<span class=\"attr\">y</span>:=$(x)b</span><br><span class=\"line\">\tx?=<span class=\"keyword\">new</span></span><br><span class=\"line\">\ttest：</span><br><span class=\"line\">\t\t@echo <span class=\"string\">&quot;y=&gt;$(y)&quot;</span></span><br><span class=\"line\">\t\t@echo <span class=\"string\">&quot;x=&gt;$(x)&quot;</span></span><br><span class=\"line\">\t在 shell 命令行执行make test:</span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"params\">y</span>=&gt;</span>foob</span><br><span class=\"line\">\t\tx=&gt;foo</span><br></pre></td></tr></table></figure>\n追加赋值 ( += ) 原变量用空格隔开的方式追加一个新值。<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">eg:</span><br><span class=\"line\">\tx:=foo</span><br><span class=\"line\">\t<span class=\"attr\">y</span>:=$(x)b</span><br><span class=\"line\">\tx+=$(y)</span><br><span class=\"line\">\ttest：</span><br><span class=\"line\">\t\t@echo <span class=\"string\">&quot;y=&gt;$(y)&quot;</span></span><br><span class=\"line\">\t\t@echo <span class=\"string\">&quot;x=&gt;$(x)&quot;</span></span><br><span class=\"line\">\t在 shell 命令行执行make test:</span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"params\">y</span>=&gt;</span>foob</span><br><span class=\"line\">\t\tx=&gt;foo foob</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h1 id=\"5-VPATH和vpath\"><a href=\"#5-VPATH和vpath\" class=\"headerlink\" title=\"5. VPATH和vpath\"></a>5. VPATH和vpath</h1><ul>\n<li>VPATH<br>VPATH 是变量，更具体的说是环境变量，Makefile 中的一种特殊变量，使用时需要指定文件的路径。<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">eg:</span><br><span class=\"line\">\tVPATH := src</span><br><span class=\"line\">\t当存在多个路径：</span><br><span class=\"line\">\t<span class=\"attr\">VPATH</span> := src car or VPATH := src:car</span><br></pre></td></tr></table></figure></li>\n<li>vpath<br>vpath 是关键字，按照模式搜索，也可以说成是选择搜索。搜索的时候不仅需要加上文件的路径，还需要加上相应限制的条件。</li>\n</ul>\n<ol>\n<li>vpath PATTERN DIRECTORIES<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">eg:</span><br><span class=\"line\">\tvpath test.c src\t#在 src 路径下搜索文件 test.c</span><br><span class=\"line\">\t当存在多个路径：</span><br><span class=\"line\">\tvpath test.c src car or vpath test.c src : car</span><br><span class=\"line\">\t#PATTERN：可以理解为要寻找的条件，DIRECTORIES：寻找的路径</span><br></pre></td></tr></table></figure></li>\n<li>vpath PATTERN<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">eg:</span><br><span class=\"line\">\tvpath test.c\t#清除符合文件 test.c 的搜索目录</span><br></pre></td></tr></table></figure></li>\n<li>vpath<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">eg:</span><br><span class=\"line\">\tvpath</span><br><span class=\"line\">\t#vpath 单独使的意思是清除所有已被设置的文件搜索路径。</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h1 id=\"6-函数\"><a href=\"#6-函数\" class=\"headerlink\" title=\"6. 函数\"></a>6. 函数</h1><p>调用格式：$(<function>,<arguments>) or ${<function>,<arguments>}<br>function 是函数名，arguments 是函数的参数，参数之间要用逗号分隔开。而参数和函数名之间使用空格分开。</arguments></function></arguments></function></p>"},{"title":"qt窗口屏蔽","date":"2022-04-14T16:00:00.000Z","top":1,"_content":"qt窗口屏蔽\n<!--more-->\n\n```c++\n//置顶：\nQt::WindowFlags flag = this->windowFlags();\nthis->setWindowFlags(flag | Qt::CustomizeWindowHint | Qt::WindowStaysOnTopHint);\n//禁止其他窗口响应事件\nthis->setWindowModality(Qt::ApplicationModal);\n```","source":"_posts/qt.md","raw":"---\ntitle: qt窗口屏蔽\ndate: 2022-4-15\ntop: 1\ntags:\n\tqt/c++\n---\nqt窗口屏蔽\n<!--more-->\n\n```c++\n//置顶：\nQt::WindowFlags flag = this->windowFlags();\nthis->setWindowFlags(flag | Qt::CustomizeWindowHint | Qt::WindowStaysOnTopHint);\n//禁止其他窗口响应事件\nthis->setWindowModality(Qt::ApplicationModal);\n```","slug":"qt","published":1,"updated":"2022-04-15T08:32:22.632Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl206jlhy000dpkvndd60epdp","content":"<p>qt窗口屏蔽</p>\n<span id=\"more\"></span>\n\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//置顶：</span></span><br><span class=\"line\">Qt::WindowFlags flag = <span class=\"keyword\">this</span>-&gt;<span class=\"built_in\">windowFlags</span>();</span><br><span class=\"line\"><span class=\"keyword\">this</span>-&gt;<span class=\"built_in\">setWindowFlags</span>(flag | Qt::CustomizeWindowHint | Qt::WindowStaysOnTopHint);</span><br><span class=\"line\"><span class=\"comment\">//禁止其他窗口响应事件</span></span><br><span class=\"line\"><span class=\"keyword\">this</span>-&gt;<span class=\"built_in\">setWindowModality</span>(Qt::ApplicationModal);</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>qt窗口屏蔽</p>","more":"<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//置顶：</span></span><br><span class=\"line\">Qt::WindowFlags flag = <span class=\"keyword\">this</span>-&gt;<span class=\"built_in\">windowFlags</span>();</span><br><span class=\"line\"><span class=\"keyword\">this</span>-&gt;<span class=\"built_in\">setWindowFlags</span>(flag | Qt::CustomizeWindowHint | Qt::WindowStaysOnTopHint);</span><br><span class=\"line\"><span class=\"comment\">//禁止其他窗口响应事件</span></span><br><span class=\"line\"><span class=\"keyword\">this</span>-&gt;<span class=\"built_in\">setWindowModality</span>(Qt::ApplicationModal);</span><br></pre></td></tr></table></figure>"},{"title":"网络通信","date":"2021-09-02T16:00:00.000Z","_content":"网络通信\n<!--more-->\n\n# 1. 概述\n电路交换\n报文交换\n分组交换\n网络：使用某种媒介将不同地点的计算机连接起来，\n      以达到信息交换、资源共享的目的\n互联网：internet 网络互联  网网相联\n因特网：Internet\n协议：\n要想让两台计算机进行通信，必须使它们采用相同的信息交换规则\n计算机网络中用于规定信息的格式以及如何发送和接收信息的一套规则称为网络协议（network protocol）或通信协议（communication protocol），简称协议（Protocol）\n其实就是用来说明网络中传输的二进制数据具体含义和作用的上下文\nPDU：Protocol Data Unit 协议数据单元\n\t即协议对应的具体二进制数据\n两种协议数据组织形式：\n1. 文本\n2. 二进制\t\n局域网：\n以太网\n因特网：TCP/IP协议族：TCP、IP、UDP、FTP、HTTP、RARP、SCTP\n\tTCP/IP栈        \nOSI\nTCP/IP五层模型：\n应用层：直接为用户的应用进程提供服务\n传输层：负责两个主机中进程之间的通信\n网络层：负责不同主机之间的通信\n数据链路层：负责相邻设备间的通信\n物理层：负责传输比特流\nMAC地址：网卡的每个网口有一个身份标识\n\t物理地址       \nIP地址：Internet网上每台主机的身份标识\n三种表示形式：\n1. 4字节无符号整型\n2. 点分十进制字符串:用.间隔四个0~255间的整型数所对应的字符串\n   \"192.168.1.66\"\n3. 域名\n   www.sina.com\n   www.baidu.com\n域名---->4字节无符号整型\nstruct hostent *gethostbyname(const char *name)\n功能：将域名发送给域名服务器，域名服务器发回IP地址等信息\n      因此该函数要求电脑联网\n返回值：返回的是调用进程数据区一块空间的首地址\n\t（因此无需释放）\n\t（后一次调用会覆盖前一次调用产生的结果）\n```jsx\nstruct hostent\n{\n\tchar *h_name;\n\tchar **h_aliases;//二次指向空间存放着域名别名\n\tint  h_addrtype;//始终为AF_INET宏常量\n\tint  h_length;  //始终为4\n\tchar **h_addr_list;//二次指向空间存放着4字节整型IP地址\n};\nh_addr_list在程序中先强制转换成struct in_addr **二级指针来使用\nstruct in_addr\n{\n\tin_addr_t s_addr;//in_addr_t是unsigned int类型的别名\n};\nchar *inet_ntoa(struct in_addr in);\n功能：将4字节整型IP地址转换成点分十进制字符串式IP地址\n返回值：返回保存字符串的空间首地址\n        返回的是调用进程数据区一块空间的首地址\n       （因此无需释放）\n       （后一次调用会覆盖前一次调用产生的结果）\n       \nint  inet_aton(const char *cp,struct in_addr *inp);\n功能：将点分十进制字符串式IP地址转换成4字节整型IP地址\n参数：\n\tcp：点分十进制字符串式IP地址\n\tinp：其指向空间用于存放转换结果\n返回值：成功为非0，失败为0\n```\n网络号+主机号\n主机号全0,该IP地址为对应网络的IP地址\n主机号全1,为对应网络的广播地址\n5类IP地址\n127.0.0.1 本地环回\n端口号：表示不同操作系统上不同进程身份的数字\n16位整数\n熟知端口，也称知名端口。范围从0到1023，如21ftp，80http\n动态端口，范围从1024到65535，这些端口号一般不固定分配给某个服务，\n\t也就是说许多服务都可以使用这些端口\n\t\t  \n# 2. UDP与TCP\nTCP:面向连接的可靠的流式传输\n\t面向连接：收发数据前通讯双方需要建立好连接\n\t可靠：确保发送的成功或失败\n\t流式：确保数据次序\n\t服务器：提供服务的进程\n\t客户端：使用服务的进程\t\nUDP：非面向连接的不可靠的数据报式传输\nTCP:\nsocket：套接字\n        英文原意：插头、插排、插孔的统称       \n        五属性：\n        1. 协议族  AF_INET （Internet的TCP/IP协议族）\n        2. 本地的IP地址\n        3. 本地的端口号\n        4. 对端的IP地址（插排没有）\n        5. 对端的端口号（插排没有）       \n        IP地址+端口号 ---->socket地址               \nint socket(int domain,int type,int protocol)\ndomain:指定协议族，因特网的TCP/IP协议族用AF_INET\ntype：传输方式,SOCK_STREAM:流式传输\n\t           SOCK_DGRAM:数据报传输\nprotocol：指定传输层协议，填0时,socket函数会根据type参数来指定默认协议\n          type是SOCK_STREAM时默认协议为TCP\n          type是SOCK_DGRAM时默认协议为UDP            \n字节序：整型数在其内存空间中的存放次序\n1. 数的低位放在低地址：小(低)端字节序 little-endian\n2. 数的高位放在低地址：大(高)端字节序 big-endian\n网络字节序：大端字节序\nstruct sockaddr_in：因特网专用socket地址结构\nstruct sockaddr :通用socke地址结构\nTCP客户端通过三路握手与服务器建立好连接\n一个可以收发数据的socket必须五属性具备才能收发数据：\n客户端socket什么时候指定五属性：\n1. socket函数指定协议族\n2. connect函数先指定对端（服务器）的IP地址、端口号\n3. connect函数再指定本地（客户端）的IP地址、端口号\n服务器端使用accept函数返回socket(插孔)与客户端进行数据交互：\n1. 协议族由accept函数指定为与第一个参数（建立连接用的socket）的协议族相同的协议族\n2. accept函数先指定对端（客户端）的IP地址、端口号\n   该客户端就是已经与服务器建立好连接的客户端\n3. accept函数再指定本地（服务器）的IP地址、端口号\n   实际就是第一个参数（建立连接用的socket）的IP地址、端口号\n   \n# 3. 模板\n```jsx\nTCP客户端代码模板：\nint sockfd = -1;\nstruct sockaddr_in servaddr;\nint ret = 0;\nsockfd = socket(AF_INET,SOCK_STREAM,0);//创建套接字\n/*填写服务器IP地址端口号*/\nbzero(&servaddr, sizeof(servaddr));\nservaddr.sin_family = AF_INET; //指定协议族\nservaddr.sin_port = htons(xxx); //指定服务器端口号\ninet_aton(“a.b.c.d”, &servaddr.sin_addr);//指定服务器IP地址\n//通过三路握手连接服务器\nret = connect(sockfd,  (struct sockaddr *)&servaddr,  sizeof(struct sockaddr_in));\nif(ret < 0)\n{\n\tprintf(\"connect failed\\n\");\n\t//出错处理\n}\t\n//……数据传输\nclose(sockfd);//关闭套接字\nint connect(int sockfd, const struct sockaddr *servaddr, socklen_t addrlen);\n功能：通过三路握手建立与TCP服务器的连接\n返回值：成功为0，失败 < 0\n参数说明：\nsockfd：socket函数返回的socket描述符\nservaddr：指向与协议族相符的地址结构指针\naddrlen：实际地址结构的大小\n备注：对于AF_INET协议族，其地址组成为IP地址+端口号，\n      结构为struct  sockaddr_in\nTCP服务器代码模板：\nint servfd = -1;int datafd = -1;\nstruct sockaddr_in  servaddr;\nint ret = 0;\nservfd = socket(AF_INET, SOCK_STREAM, 0);//创建主动套接字（插头）\n/*填写服务端自身IP地址和端口号*/\nbzero(&servaddr, sizeof(servaddr));//\nservaddr.sin_family = AF_INET;//指定协议族\ninet_aton(“a.b.c.d”, &servaddr.sin_addr)//指定服务器IP地址\nservaddr.sin_port = htons(xxx);//指定服务器端口号\n/*服务器端IP地址和端口号必须告诉客户端知道，\n  因此不能有系统自动指定，只能通过bind函数自己来指定，\n  必须与客户端connect函数所用的IP地址与端口号一致*/\nret = bind(servfd, (struct sockaddr *) &servaddr, sizeof(servaddr));\n/*\n\tlisten函数功能是将主动套接字（插头）变为被动套接字（插排），\n\t然后通知被动套接字开始监听处理客户端连接请求。\n\t通知完后就返回了，因此该函数并不阻塞\n*/\nret += listen(servfd, 5);\nif(ret < 0)\n{\n\tprintf(\"bind or listen failed\\n\");\n\t//出错处理\t\t\n}\nwhile(1) \n{\t\n   /*accept函数只有当有客户端与服务器连接建立成功后才返回。\n     如果没有客户端发起连接请求或者连接请求还没有处理完毕\n     该函数将一直阻塞到有连接建立成功。\n     返回的是可以与已经建立好连接的客户端交互数据用的套接字（插孔）*/\n   datafd = accept(servfd,NULL,NULL);   \n   //……数据传输   \n   close(datafd);\n}\nclose(servfd);\nint bind(int sockfd,  const struct sockaddr  *  myaddr, socklen_t addrlen);\n功能：将本地协议地址赋予指定的socket描述符\n返回值：成功为0，失败 < 0\n参数：\nsockfd： socket函数返回的socket描述符\nmyaddr：指向与协议族相符的地址结构指针\naddrlen：实际地址结构的大小\n备注：对于AF_INET协议族，其地址组成为IP地址+端口号，\n      结构为struct  sockaddr_in\nint  listen(int  sockfd,  int  backlog);\n功能：将主动套接字改为被动套接字（用来接受指向该套接字的连接请求），\n      并设定套接字排队的最大连接个数。\n      该函数不会阻塞。只是通知被动套接字可以开始处理连接请求\n返回值：成功0，失败 < 0\n参数：\nsockfd：用来专门处理客户端连接请求的套接字描述符（即服务器端自己调用socket函数产生的描述符）\nbacklog：指定管理连接请求的队列长度\n系统针对每个被动套接字采用两个队列管理连接请求：\n未完成连接队列\n已完成连接队列\nbacklog实际上是一个基数，两个队列的长度由这个基数采用一定算法计算而得。\n一般情况下backlog经验值为5-20。\n对于大型服务器（如新浪主机）一般指定为系统能支持的最大数。\nint accept(int sockfd,  struct sockaddr * cliaddr, socklen_t * addrlen);\n功能：从已完成连接队列的对头返回一个已完成连接，队列空则阻塞等已完成的连接\n返回值：成功返回已完成连接对应的socket描述符，服务器通过这个描述符与请求连接的客户端进行数据传输。\n        失败 < 0\n参数：\nsockfd：监听套接字（即服务器用来处理连接请求专用的被动套接字）。\ncliaddr：返回已连接的对端进程（客户端）的协议地址。\naddrlen：值-结果参数，调用前指定cliaddr的地址结构长度，返回后保存\n                     对应地址结构的确切字节数。\n如果不关心客户端地址cliaddr和addrlen可以置为NULL。\n本函数会阻塞。\n通用读写函数\nssize_t read(int fd, void *buf, size_t count);\nssize_t write (int fd,const void * buf,size_t count);\n网络编程专用读写函数\nssize_t recv(int sockfd, void *buff,size_t nbytes,int flags);\nssize_t send(int sockfd, const void *buff,size_t nbytes,int flags);\n当fd为TCP socket描述符时，read和recv函数如果返回为0表示对端已经关闭连接\nflags为0时，接收发送阻塞，为MSG_DONTWAIT时接收发送非阻塞\n\nUDP编程：\nssize_t sendto(int sockfd,\n               const void * buff,\n               size_t nbytes,\n               int flags, \n               const struct sockaddr * to,  \n               socklen_t   addrlen);\n功能：向指定地址发送期望字节数量的数据\n返回值：成功返回实际发送的字节数。失败 < 0\n参数：\nsockfd、buff、nbytes、flags：含义同send函数\nto：指向接收者的协议地址结构指针。\naddrlen：to所用的地址结构的字节长度。\nssize_t recvfrom(int sockfd,\n                 void * buff,\n                 size_t nbytes,\n                 int flags, \n                 struct sockaddr * from,\n                 socklen_t  * addrlen);\n功能：从指定的UDP-Socket里接收数据，同时填充发送方的协议地址结构\n返回值：成功返回实际接收到的字节数。失败 < 0\n参数：\nsockfd、buff、nbytes、flags：含义同recv函数\nfrom：指向发送方的协议地址结构指针，类似于accept对应参数的含义，用于保存发送方地址，以便于通过sendto回应对方相应数据。\naddrlen：from所用的地址结构的字节长度，类似于accept对应参数的含义，指出实际使用的地址结构长度。\n返回0是可接受的正确的结果，并非表示socket关闭，意味着可以发送空的UDP数据报（只有UDP首部而没有数据部分）给远端进程。\nfrom和addrlen可以同时为NULL，表示不关心发送方地址信息\n\nClient----->Server\n1. login request\n2. private_chat request\n3. group_chat request\n4. get userlist request\nServer----->Client\n1. login response\n2. private_chat response\n3. get userlist response\n```","source":"_posts/socket.md","raw":"---\ntitle: 网络通信\ndate: 2021-9-3\ntags:\n\tsocket\n---\n网络通信\n<!--more-->\n\n# 1. 概述\n电路交换\n报文交换\n分组交换\n网络：使用某种媒介将不同地点的计算机连接起来，\n      以达到信息交换、资源共享的目的\n互联网：internet 网络互联  网网相联\n因特网：Internet\n协议：\n要想让两台计算机进行通信，必须使它们采用相同的信息交换规则\n计算机网络中用于规定信息的格式以及如何发送和接收信息的一套规则称为网络协议（network protocol）或通信协议（communication protocol），简称协议（Protocol）\n其实就是用来说明网络中传输的二进制数据具体含义和作用的上下文\nPDU：Protocol Data Unit 协议数据单元\n\t即协议对应的具体二进制数据\n两种协议数据组织形式：\n1. 文本\n2. 二进制\t\n局域网：\n以太网\n因特网：TCP/IP协议族：TCP、IP、UDP、FTP、HTTP、RARP、SCTP\n\tTCP/IP栈        \nOSI\nTCP/IP五层模型：\n应用层：直接为用户的应用进程提供服务\n传输层：负责两个主机中进程之间的通信\n网络层：负责不同主机之间的通信\n数据链路层：负责相邻设备间的通信\n物理层：负责传输比特流\nMAC地址：网卡的每个网口有一个身份标识\n\t物理地址       \nIP地址：Internet网上每台主机的身份标识\n三种表示形式：\n1. 4字节无符号整型\n2. 点分十进制字符串:用.间隔四个0~255间的整型数所对应的字符串\n   \"192.168.1.66\"\n3. 域名\n   www.sina.com\n   www.baidu.com\n域名---->4字节无符号整型\nstruct hostent *gethostbyname(const char *name)\n功能：将域名发送给域名服务器，域名服务器发回IP地址等信息\n      因此该函数要求电脑联网\n返回值：返回的是调用进程数据区一块空间的首地址\n\t（因此无需释放）\n\t（后一次调用会覆盖前一次调用产生的结果）\n```jsx\nstruct hostent\n{\n\tchar *h_name;\n\tchar **h_aliases;//二次指向空间存放着域名别名\n\tint  h_addrtype;//始终为AF_INET宏常量\n\tint  h_length;  //始终为4\n\tchar **h_addr_list;//二次指向空间存放着4字节整型IP地址\n};\nh_addr_list在程序中先强制转换成struct in_addr **二级指针来使用\nstruct in_addr\n{\n\tin_addr_t s_addr;//in_addr_t是unsigned int类型的别名\n};\nchar *inet_ntoa(struct in_addr in);\n功能：将4字节整型IP地址转换成点分十进制字符串式IP地址\n返回值：返回保存字符串的空间首地址\n        返回的是调用进程数据区一块空间的首地址\n       （因此无需释放）\n       （后一次调用会覆盖前一次调用产生的结果）\n       \nint  inet_aton(const char *cp,struct in_addr *inp);\n功能：将点分十进制字符串式IP地址转换成4字节整型IP地址\n参数：\n\tcp：点分十进制字符串式IP地址\n\tinp：其指向空间用于存放转换结果\n返回值：成功为非0，失败为0\n```\n网络号+主机号\n主机号全0,该IP地址为对应网络的IP地址\n主机号全1,为对应网络的广播地址\n5类IP地址\n127.0.0.1 本地环回\n端口号：表示不同操作系统上不同进程身份的数字\n16位整数\n熟知端口，也称知名端口。范围从0到1023，如21ftp，80http\n动态端口，范围从1024到65535，这些端口号一般不固定分配给某个服务，\n\t也就是说许多服务都可以使用这些端口\n\t\t  \n# 2. UDP与TCP\nTCP:面向连接的可靠的流式传输\n\t面向连接：收发数据前通讯双方需要建立好连接\n\t可靠：确保发送的成功或失败\n\t流式：确保数据次序\n\t服务器：提供服务的进程\n\t客户端：使用服务的进程\t\nUDP：非面向连接的不可靠的数据报式传输\nTCP:\nsocket：套接字\n        英文原意：插头、插排、插孔的统称       \n        五属性：\n        1. 协议族  AF_INET （Internet的TCP/IP协议族）\n        2. 本地的IP地址\n        3. 本地的端口号\n        4. 对端的IP地址（插排没有）\n        5. 对端的端口号（插排没有）       \n        IP地址+端口号 ---->socket地址               \nint socket(int domain,int type,int protocol)\ndomain:指定协议族，因特网的TCP/IP协议族用AF_INET\ntype：传输方式,SOCK_STREAM:流式传输\n\t           SOCK_DGRAM:数据报传输\nprotocol：指定传输层协议，填0时,socket函数会根据type参数来指定默认协议\n          type是SOCK_STREAM时默认协议为TCP\n          type是SOCK_DGRAM时默认协议为UDP            \n字节序：整型数在其内存空间中的存放次序\n1. 数的低位放在低地址：小(低)端字节序 little-endian\n2. 数的高位放在低地址：大(高)端字节序 big-endian\n网络字节序：大端字节序\nstruct sockaddr_in：因特网专用socket地址结构\nstruct sockaddr :通用socke地址结构\nTCP客户端通过三路握手与服务器建立好连接\n一个可以收发数据的socket必须五属性具备才能收发数据：\n客户端socket什么时候指定五属性：\n1. socket函数指定协议族\n2. connect函数先指定对端（服务器）的IP地址、端口号\n3. connect函数再指定本地（客户端）的IP地址、端口号\n服务器端使用accept函数返回socket(插孔)与客户端进行数据交互：\n1. 协议族由accept函数指定为与第一个参数（建立连接用的socket）的协议族相同的协议族\n2. accept函数先指定对端（客户端）的IP地址、端口号\n   该客户端就是已经与服务器建立好连接的客户端\n3. accept函数再指定本地（服务器）的IP地址、端口号\n   实际就是第一个参数（建立连接用的socket）的IP地址、端口号\n   \n# 3. 模板\n```jsx\nTCP客户端代码模板：\nint sockfd = -1;\nstruct sockaddr_in servaddr;\nint ret = 0;\nsockfd = socket(AF_INET,SOCK_STREAM,0);//创建套接字\n/*填写服务器IP地址端口号*/\nbzero(&servaddr, sizeof(servaddr));\nservaddr.sin_family = AF_INET; //指定协议族\nservaddr.sin_port = htons(xxx); //指定服务器端口号\ninet_aton(“a.b.c.d”, &servaddr.sin_addr);//指定服务器IP地址\n//通过三路握手连接服务器\nret = connect(sockfd,  (struct sockaddr *)&servaddr,  sizeof(struct sockaddr_in));\nif(ret < 0)\n{\n\tprintf(\"connect failed\\n\");\n\t//出错处理\n}\t\n//……数据传输\nclose(sockfd);//关闭套接字\nint connect(int sockfd, const struct sockaddr *servaddr, socklen_t addrlen);\n功能：通过三路握手建立与TCP服务器的连接\n返回值：成功为0，失败 < 0\n参数说明：\nsockfd：socket函数返回的socket描述符\nservaddr：指向与协议族相符的地址结构指针\naddrlen：实际地址结构的大小\n备注：对于AF_INET协议族，其地址组成为IP地址+端口号，\n      结构为struct  sockaddr_in\nTCP服务器代码模板：\nint servfd = -1;int datafd = -1;\nstruct sockaddr_in  servaddr;\nint ret = 0;\nservfd = socket(AF_INET, SOCK_STREAM, 0);//创建主动套接字（插头）\n/*填写服务端自身IP地址和端口号*/\nbzero(&servaddr, sizeof(servaddr));//\nservaddr.sin_family = AF_INET;//指定协议族\ninet_aton(“a.b.c.d”, &servaddr.sin_addr)//指定服务器IP地址\nservaddr.sin_port = htons(xxx);//指定服务器端口号\n/*服务器端IP地址和端口号必须告诉客户端知道，\n  因此不能有系统自动指定，只能通过bind函数自己来指定，\n  必须与客户端connect函数所用的IP地址与端口号一致*/\nret = bind(servfd, (struct sockaddr *) &servaddr, sizeof(servaddr));\n/*\n\tlisten函数功能是将主动套接字（插头）变为被动套接字（插排），\n\t然后通知被动套接字开始监听处理客户端连接请求。\n\t通知完后就返回了，因此该函数并不阻塞\n*/\nret += listen(servfd, 5);\nif(ret < 0)\n{\n\tprintf(\"bind or listen failed\\n\");\n\t//出错处理\t\t\n}\nwhile(1) \n{\t\n   /*accept函数只有当有客户端与服务器连接建立成功后才返回。\n     如果没有客户端发起连接请求或者连接请求还没有处理完毕\n     该函数将一直阻塞到有连接建立成功。\n     返回的是可以与已经建立好连接的客户端交互数据用的套接字（插孔）*/\n   datafd = accept(servfd,NULL,NULL);   \n   //……数据传输   \n   close(datafd);\n}\nclose(servfd);\nint bind(int sockfd,  const struct sockaddr  *  myaddr, socklen_t addrlen);\n功能：将本地协议地址赋予指定的socket描述符\n返回值：成功为0，失败 < 0\n参数：\nsockfd： socket函数返回的socket描述符\nmyaddr：指向与协议族相符的地址结构指针\naddrlen：实际地址结构的大小\n备注：对于AF_INET协议族，其地址组成为IP地址+端口号，\n      结构为struct  sockaddr_in\nint  listen(int  sockfd,  int  backlog);\n功能：将主动套接字改为被动套接字（用来接受指向该套接字的连接请求），\n      并设定套接字排队的最大连接个数。\n      该函数不会阻塞。只是通知被动套接字可以开始处理连接请求\n返回值：成功0，失败 < 0\n参数：\nsockfd：用来专门处理客户端连接请求的套接字描述符（即服务器端自己调用socket函数产生的描述符）\nbacklog：指定管理连接请求的队列长度\n系统针对每个被动套接字采用两个队列管理连接请求：\n未完成连接队列\n已完成连接队列\nbacklog实际上是一个基数，两个队列的长度由这个基数采用一定算法计算而得。\n一般情况下backlog经验值为5-20。\n对于大型服务器（如新浪主机）一般指定为系统能支持的最大数。\nint accept(int sockfd,  struct sockaddr * cliaddr, socklen_t * addrlen);\n功能：从已完成连接队列的对头返回一个已完成连接，队列空则阻塞等已完成的连接\n返回值：成功返回已完成连接对应的socket描述符，服务器通过这个描述符与请求连接的客户端进行数据传输。\n        失败 < 0\n参数：\nsockfd：监听套接字（即服务器用来处理连接请求专用的被动套接字）。\ncliaddr：返回已连接的对端进程（客户端）的协议地址。\naddrlen：值-结果参数，调用前指定cliaddr的地址结构长度，返回后保存\n                     对应地址结构的确切字节数。\n如果不关心客户端地址cliaddr和addrlen可以置为NULL。\n本函数会阻塞。\n通用读写函数\nssize_t read(int fd, void *buf, size_t count);\nssize_t write (int fd,const void * buf,size_t count);\n网络编程专用读写函数\nssize_t recv(int sockfd, void *buff,size_t nbytes,int flags);\nssize_t send(int sockfd, const void *buff,size_t nbytes,int flags);\n当fd为TCP socket描述符时，read和recv函数如果返回为0表示对端已经关闭连接\nflags为0时，接收发送阻塞，为MSG_DONTWAIT时接收发送非阻塞\n\nUDP编程：\nssize_t sendto(int sockfd,\n               const void * buff,\n               size_t nbytes,\n               int flags, \n               const struct sockaddr * to,  \n               socklen_t   addrlen);\n功能：向指定地址发送期望字节数量的数据\n返回值：成功返回实际发送的字节数。失败 < 0\n参数：\nsockfd、buff、nbytes、flags：含义同send函数\nto：指向接收者的协议地址结构指针。\naddrlen：to所用的地址结构的字节长度。\nssize_t recvfrom(int sockfd,\n                 void * buff,\n                 size_t nbytes,\n                 int flags, \n                 struct sockaddr * from,\n                 socklen_t  * addrlen);\n功能：从指定的UDP-Socket里接收数据，同时填充发送方的协议地址结构\n返回值：成功返回实际接收到的字节数。失败 < 0\n参数：\nsockfd、buff、nbytes、flags：含义同recv函数\nfrom：指向发送方的协议地址结构指针，类似于accept对应参数的含义，用于保存发送方地址，以便于通过sendto回应对方相应数据。\naddrlen：from所用的地址结构的字节长度，类似于accept对应参数的含义，指出实际使用的地址结构长度。\n返回0是可接受的正确的结果，并非表示socket关闭，意味着可以发送空的UDP数据报（只有UDP首部而没有数据部分）给远端进程。\nfrom和addrlen可以同时为NULL，表示不关心发送方地址信息\n\nClient----->Server\n1. login request\n2. private_chat request\n3. group_chat request\n4. get userlist request\nServer----->Client\n1. login response\n2. private_chat response\n3. get userlist response\n```","slug":"socket","published":1,"updated":"2021-09-19T05:33:30.439Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl206jlhz000epkvn4o5928nf","content":"<p>网络通信</p>\n<span id=\"more\"></span>\n\n<h1 id=\"1-概述\"><a href=\"#1-概述\" class=\"headerlink\" title=\"1. 概述\"></a>1. 概述</h1><p>电路交换<br>报文交换<br>分组交换<br>网络：使用某种媒介将不同地点的计算机连接起来，<br>      以达到信息交换、资源共享的目的<br>互联网：internet 网络互联  网网相联<br>因特网：Internet<br>协议：<br>要想让两台计算机进行通信，必须使它们采用相同的信息交换规则<br>计算机网络中用于规定信息的格式以及如何发送和接收信息的一套规则称为网络协议（network protocol）或通信协议（communication protocol），简称协议（Protocol）<br>其实就是用来说明网络中传输的二进制数据具体含义和作用的上下文<br>PDU：Protocol Data Unit 协议数据单元<br>    即协议对应的具体二进制数据<br>两种协议数据组织形式：</p>\n<ol>\n<li>文本</li>\n<li>二进制<br>局域网：<br>以太网<br>因特网：TCP/IP协议族：TCP、IP、UDP、FTP、HTTP、RARP、SCTP<br> TCP/IP栈<br>OSI<br>TCP/IP五层模型：<br>应用层：直接为用户的应用进程提供服务<br>传输层：负责两个主机中进程之间的通信<br>网络层：负责不同主机之间的通信<br>数据链路层：负责相邻设备间的通信<br>物理层：负责传输比特流<br>MAC地址：网卡的每个网口有一个身份标识<br> 物理地址<br>IP地址：Internet网上每台主机的身份标识<br>三种表示形式：</li>\n<li>4字节无符号整型</li>\n<li>点分十进制字符串:用.间隔四个0~255间的整型数所对应的字符串<br>“192.168.1.66”</li>\n<li>域名<br><a href=\"http://www.sina.com/\">www.sina.com</a><br><a href=\"http://www.baidu.com/\">www.baidu.com</a><br>域名—-&gt;4字节无符号整型<br>struct hostent *gethostbyname(const char *name)<br>功能：将域名发送给域名服务器，域名服务器发回IP地址等信息<br>   因此该函数要求电脑联网<br>返回值：返回的是调用进程数据区一块空间的首地址<br> （因此无需释放）<br> （后一次调用会覆盖前一次调用产生的结果）<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">struct hostent</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tchar *h_name;</span><br><span class=\"line\">\tchar **h_aliases;<span class=\"comment\">//二次指向空间存放着域名别名</span></span><br><span class=\"line\">\tint  h_addrtype;<span class=\"comment\">//始终为AF_INET宏常量</span></span><br><span class=\"line\">\tint  h_length;  <span class=\"comment\">//始终为4</span></span><br><span class=\"line\">\tchar **h_addr_list;<span class=\"comment\">//二次指向空间存放着4字节整型IP地址</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">h_addr_list在程序中先强制转换成struct in_addr **二级指针来使用</span><br><span class=\"line\">struct in_addr</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tin_addr_t s_addr;<span class=\"comment\">//in_addr_t是unsigned int类型的别名</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">char *inet_ntoa(struct in_addr <span class=\"keyword\">in</span>);</span><br><span class=\"line\">功能：将<span class=\"number\">4</span>字节整型IP地址转换成点分十进制字符串式IP地址</span><br><span class=\"line\">返回值：返回保存字符串的空间首地址</span><br><span class=\"line\">        返回的是调用进程数据区一块空间的首地址</span><br><span class=\"line\">       （因此无需释放）</span><br><span class=\"line\">       （后一次调用会覆盖前一次调用产生的结果）</span><br><span class=\"line\">       </span><br><span class=\"line\">int  inet_aton(<span class=\"keyword\">const</span> char *cp,struct in_addr *inp);</span><br><span class=\"line\">功能：将点分十进制字符串式IP地址转换成<span class=\"number\">4</span>字节整型IP地址</span><br><span class=\"line\">参数：</span><br><span class=\"line\">\tcp：点分十进制字符串式IP地址</span><br><span class=\"line\">\tinp：其指向空间用于存放转换结果</span><br><span class=\"line\">返回值：成功为非<span class=\"number\">0</span>，失败为<span class=\"number\">0</span></span><br></pre></td></tr></table></figure>\n网络号+主机号<br>主机号全0,该IP地址为对应网络的IP地址<br>主机号全1,为对应网络的广播地址<br>5类IP地址</li>\n<li>0.0.1 本地环回<br>端口号：表示不同操作系统上不同进程身份的数字<br>16位整数<br>熟知端口，也称知名端口。范围从0到1023，如21ftp，80http<br>动态端口，范围从1024到65535，这些端口号一般不固定分配给某个服务，<br>也就是说许多服务都可以使用这些端口</li>\n</ol>\n<h1 id=\"2-UDP与TCP\"><a href=\"#2-UDP与TCP\" class=\"headerlink\" title=\"2. UDP与TCP\"></a>2. UDP与TCP</h1><p>TCP:面向连接的可靠的流式传输<br>    面向连接：收发数据前通讯双方需要建立好连接<br>    可靠：确保发送的成功或失败<br>    流式：确保数据次序<br>    服务器：提供服务的进程<br>    客户端：使用服务的进程<br>UDP：非面向连接的不可靠的数据报式传输<br>TCP:<br>socket：套接字<br>        英文原意：插头、插排、插孔的统称<br>        五属性：<br>        1. 协议族  AF_INET （Internet的TCP/IP协议族）<br>        2. 本地的IP地址<br>        3. 本地的端口号<br>        4. 对端的IP地址（插排没有）<br>        5. 对端的端口号（插排没有）<br>        IP地址+端口号 —-&gt;socket地址<br>int socket(int domain,int type,int protocol)<br>domain:指定协议族，因特网的TCP/IP协议族用AF_INET<br>type：传输方式,SOCK_STREAM:流式传输<br>               SOCK_DGRAM:数据报传输<br>protocol：指定传输层协议，填0时,socket函数会根据type参数来指定默认协议<br>          type是SOCK_STREAM时默认协议为TCP<br>          type是SOCK_DGRAM时默认协议为UDP<br>字节序：整型数在其内存空间中的存放次序</p>\n<ol>\n<li>数的低位放在低地址：小(低)端字节序 little-endian</li>\n<li>数的高位放在低地址：大(高)端字节序 big-endian<br>网络字节序：大端字节序<br>struct sockaddr_in：因特网专用socket地址结构<br>struct sockaddr :通用socke地址结构<br>TCP客户端通过三路握手与服务器建立好连接<br>一个可以收发数据的socket必须五属性具备才能收发数据：<br>客户端socket什么时候指定五属性：</li>\n<li>socket函数指定协议族</li>\n<li>connect函数先指定对端（服务器）的IP地址、端口号</li>\n<li>connect函数再指定本地（客户端）的IP地址、端口号<br>服务器端使用accept函数返回socket(插孔)与客户端进行数据交互：</li>\n<li>协议族由accept函数指定为与第一个参数（建立连接用的socket）的协议族相同的协议族</li>\n<li>accept函数先指定对端（客户端）的IP地址、端口号<br>该客户端就是已经与服务器建立好连接的客户端</li>\n<li>accept函数再指定本地（服务器）的IP地址、端口号<br>实际就是第一个参数（建立连接用的socket）的IP地址、端口号</li>\n</ol>\n<h1 id=\"3-模板\"><a href=\"#3-模板\" class=\"headerlink\" title=\"3. 模板\"></a>3. 模板</h1><figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">TCP客户端代码模板：</span><br><span class=\"line\">int sockfd = -<span class=\"number\">1</span>;</span><br><span class=\"line\">struct sockaddr_in servaddr;</span><br><span class=\"line\">int ret = <span class=\"number\">0</span>;</span><br><span class=\"line\">sockfd = socket(AF_INET,SOCK_STREAM,<span class=\"number\">0</span>);<span class=\"comment\">//创建套接字</span></span><br><span class=\"line\"><span class=\"comment\">/*填写服务器IP地址端口号*/</span></span><br><span class=\"line\">bzero(&amp;servaddr, sizeof(servaddr));</span><br><span class=\"line\">servaddr.sin_family = AF_INET; <span class=\"comment\">//指定协议族</span></span><br><span class=\"line\">servaddr.sin_port = htons(xxx); <span class=\"comment\">//指定服务器端口号</span></span><br><span class=\"line\">inet_aton(“a.b.c.d”, &amp;servaddr.sin_addr);<span class=\"comment\">//指定服务器IP地址</span></span><br><span class=\"line\"><span class=\"comment\">//通过三路握手连接服务器</span></span><br><span class=\"line\">ret = connect(sockfd,  (struct sockaddr *)&amp;servaddr,  sizeof(struct sockaddr_in));</span><br><span class=\"line\"><span class=\"keyword\">if</span>(ret &lt; <span class=\"number\">0</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tprintf(<span class=\"string\">&quot;connect failed\\n&quot;</span>);</span><br><span class=\"line\">\t<span class=\"comment\">//出错处理</span></span><br><span class=\"line\">&#125;\t</span><br><span class=\"line\"><span class=\"comment\">//……数据传输</span></span><br><span class=\"line\">close(sockfd);<span class=\"comment\">//关闭套接字</span></span><br><span class=\"line\">int connect(int sockfd, <span class=\"keyword\">const</span> struct sockaddr *servaddr, socklen_t addrlen);</span><br><span class=\"line\">功能：通过三路握手建立与TCP服务器的连接</span><br><span class=\"line\">返回值：成功为<span class=\"number\">0</span>，失败 &lt; <span class=\"number\">0</span></span><br><span class=\"line\">参数说明：</span><br><span class=\"line\">sockfd：socket函数返回的socket描述符</span><br><span class=\"line\">servaddr：指向与协议族相符的地址结构指针</span><br><span class=\"line\">addrlen：实际地址结构的大小</span><br><span class=\"line\">备注：对于AF_INET协议族，其地址组成为IP地址+端口号，</span><br><span class=\"line\">      结构为struct  sockaddr_in</span><br><span class=\"line\">TCP服务器代码模板：</span><br><span class=\"line\">int servfd = -<span class=\"number\">1</span>;int datafd = -<span class=\"number\">1</span>;</span><br><span class=\"line\">struct sockaddr_in  servaddr;</span><br><span class=\"line\">int ret = <span class=\"number\">0</span>;</span><br><span class=\"line\">servfd = socket(AF_INET, SOCK_STREAM, <span class=\"number\">0</span>);<span class=\"comment\">//创建主动套接字（插头）</span></span><br><span class=\"line\"><span class=\"comment\">/*填写服务端自身IP地址和端口号*/</span></span><br><span class=\"line\">bzero(&amp;servaddr, sizeof(servaddr));<span class=\"comment\">//</span></span><br><span class=\"line\">servaddr.sin_family = AF_INET;<span class=\"comment\">//指定协议族</span></span><br><span class=\"line\">inet_aton(“a.b.c.d”, &amp;servaddr.sin_addr)<span class=\"comment\">//指定服务器IP地址</span></span><br><span class=\"line\">servaddr.sin_port = htons(xxx);<span class=\"comment\">//指定服务器端口号</span></span><br><span class=\"line\"><span class=\"comment\">/*服务器端IP地址和端口号必须告诉客户端知道，</span></span><br><span class=\"line\"><span class=\"comment\">  因此不能有系统自动指定，只能通过bind函数自己来指定，</span></span><br><span class=\"line\"><span class=\"comment\">  必须与客户端connect函数所用的IP地址与端口号一致*/</span></span><br><span class=\"line\">ret = bind(servfd, (struct sockaddr *) &amp;servaddr, sizeof(servaddr));</span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">\tlisten函数功能是将主动套接字（插头）变为被动套接字（插排），</span></span><br><span class=\"line\"><span class=\"comment\">\t然后通知被动套接字开始监听处理客户端连接请求。</span></span><br><span class=\"line\"><span class=\"comment\">\t通知完后就返回了，因此该函数并不阻塞</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\">ret += listen(servfd, <span class=\"number\">5</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span>(ret &lt; <span class=\"number\">0</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tprintf(<span class=\"string\">&quot;bind or listen failed\\n&quot;</span>);</span><br><span class=\"line\">\t<span class=\"comment\">//出错处理\t\t</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">while</span>(<span class=\"number\">1</span>) </span><br><span class=\"line\">&#123;\t</span><br><span class=\"line\">   <span class=\"comment\">/*accept函数只有当有客户端与服务器连接建立成功后才返回。</span></span><br><span class=\"line\"><span class=\"comment\">     如果没有客户端发起连接请求或者连接请求还没有处理完毕</span></span><br><span class=\"line\"><span class=\"comment\">     该函数将一直阻塞到有连接建立成功。</span></span><br><span class=\"line\"><span class=\"comment\">     返回的是可以与已经建立好连接的客户端交互数据用的套接字（插孔）*/</span></span><br><span class=\"line\">   datafd = accept(servfd,NULL,NULL);   </span><br><span class=\"line\">   <span class=\"comment\">//……数据传输   </span></span><br><span class=\"line\">   close(datafd);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">close(servfd);</span><br><span class=\"line\">int bind(int sockfd,  <span class=\"keyword\">const</span> struct sockaddr  *  myaddr, socklen_t addrlen);</span><br><span class=\"line\">功能：将本地协议地址赋予指定的socket描述符</span><br><span class=\"line\">返回值：成功为<span class=\"number\">0</span>，失败 &lt; <span class=\"number\">0</span></span><br><span class=\"line\">参数：</span><br><span class=\"line\">sockfd： socket函数返回的socket描述符</span><br><span class=\"line\">myaddr：指向与协议族相符的地址结构指针</span><br><span class=\"line\">addrlen：实际地址结构的大小</span><br><span class=\"line\">备注：对于AF_INET协议族，其地址组成为IP地址+端口号，</span><br><span class=\"line\">      结构为struct  sockaddr_in</span><br><span class=\"line\">int  listen(int  sockfd,  int  backlog);</span><br><span class=\"line\">功能：将主动套接字改为被动套接字（用来接受指向该套接字的连接请求），</span><br><span class=\"line\">      并设定套接字排队的最大连接个数。</span><br><span class=\"line\">      该函数不会阻塞。只是通知被动套接字可以开始处理连接请求</span><br><span class=\"line\">返回值：成功<span class=\"number\">0</span>，失败 &lt; <span class=\"number\">0</span></span><br><span class=\"line\">参数：</span><br><span class=\"line\">sockfd：用来专门处理客户端连接请求的套接字描述符（即服务器端自己调用socket函数产生的描述符）</span><br><span class=\"line\">backlog：指定管理连接请求的队列长度</span><br><span class=\"line\">系统针对每个被动套接字采用两个队列管理连接请求：</span><br><span class=\"line\">未完成连接队列</span><br><span class=\"line\">已完成连接队列</span><br><span class=\"line\">backlog实际上是一个基数，两个队列的长度由这个基数采用一定算法计算而得。</span><br><span class=\"line\">一般情况下backlog经验值为<span class=\"number\">5</span>-<span class=\"number\">20</span>。</span><br><span class=\"line\">对于大型服务器（如新浪主机）一般指定为系统能支持的最大数。</span><br><span class=\"line\">int accept(int sockfd,  struct sockaddr * cliaddr, socklen_t * addrlen);</span><br><span class=\"line\">功能：从已完成连接队列的对头返回一个已完成连接，队列空则阻塞等已完成的连接</span><br><span class=\"line\">返回值：成功返回已完成连接对应的socket描述符，服务器通过这个描述符与请求连接的客户端进行数据传输。</span><br><span class=\"line\">        失败 &lt; <span class=\"number\">0</span></span><br><span class=\"line\">参数：</span><br><span class=\"line\">sockfd：监听套接字（即服务器用来处理连接请求专用的被动套接字）。</span><br><span class=\"line\">cliaddr：返回已连接的对端进程（客户端）的协议地址。</span><br><span class=\"line\">addrlen：值-结果参数，调用前指定cliaddr的地址结构长度，返回后保存</span><br><span class=\"line\">                     对应地址结构的确切字节数。</span><br><span class=\"line\">如果不关心客户端地址cliaddr和addrlen可以置为NULL。</span><br><span class=\"line\">本函数会阻塞。</span><br><span class=\"line\">通用读写函数</span><br><span class=\"line\">ssize_t read(int fd, <span class=\"keyword\">void</span> *buf, size_t count);</span><br><span class=\"line\">ssize_t write (int fd,<span class=\"keyword\">const</span> <span class=\"keyword\">void</span> * buf,size_t count);</span><br><span class=\"line\">网络编程专用读写函数</span><br><span class=\"line\">ssize_t recv(int sockfd, <span class=\"keyword\">void</span> *buff,size_t nbytes,int flags);</span><br><span class=\"line\">ssize_t send(int sockfd, <span class=\"keyword\">const</span> <span class=\"keyword\">void</span> *buff,size_t nbytes,int flags);</span><br><span class=\"line\">当fd为TCP socket描述符时，read和recv函数如果返回为<span class=\"number\">0</span>表示对端已经关闭连接</span><br><span class=\"line\">flags为<span class=\"number\">0</span>时，接收发送阻塞，为MSG_DONTWAIT时接收发送非阻塞</span><br><span class=\"line\"></span><br><span class=\"line\">UDP编程：</span><br><span class=\"line\">ssize_t sendto(int sockfd,</span><br><span class=\"line\">               <span class=\"keyword\">const</span> <span class=\"keyword\">void</span> * buff,</span><br><span class=\"line\">               size_t nbytes,</span><br><span class=\"line\">               int flags, </span><br><span class=\"line\">               <span class=\"keyword\">const</span> struct sockaddr * to,  </span><br><span class=\"line\">               socklen_t   addrlen);</span><br><span class=\"line\">功能：向指定地址发送期望字节数量的数据</span><br><span class=\"line\">返回值：成功返回实际发送的字节数。失败 &lt; <span class=\"number\">0</span></span><br><span class=\"line\">参数：</span><br><span class=\"line\">sockfd、buff、nbytes、flags：含义同send函数</span><br><span class=\"line\">to：指向接收者的协议地址结构指针。</span><br><span class=\"line\">addrlen：to所用的地址结构的字节长度。</span><br><span class=\"line\">ssize_t recvfrom(int sockfd,</span><br><span class=\"line\">                 <span class=\"keyword\">void</span> * buff,</span><br><span class=\"line\">                 size_t nbytes,</span><br><span class=\"line\">                 int flags, </span><br><span class=\"line\">                 struct sockaddr * <span class=\"keyword\">from</span>,</span><br><span class=\"line\">                 socklen_t  * addrlen);</span><br><span class=\"line\">功能：从指定的UDP-Socket里接收数据，同时填充发送方的协议地址结构</span><br><span class=\"line\">返回值：成功返回实际接收到的字节数。失败 &lt; <span class=\"number\">0</span></span><br><span class=\"line\">参数：</span><br><span class=\"line\">sockfd、buff、nbytes、flags：含义同recv函数</span><br><span class=\"line\"><span class=\"keyword\">from</span>：指向发送方的协议地址结构指针，类似于accept对应参数的含义，用于保存发送方地址，以便于通过sendto回应对方相应数据。</span><br><span class=\"line\">addrlen：<span class=\"keyword\">from</span>所用的地址结构的字节长度，类似于accept对应参数的含义，指出实际使用的地址结构长度。</span><br><span class=\"line\">返回<span class=\"number\">0</span>是可接受的正确的结果，并非表示socket关闭，意味着可以发送空的UDP数据报（只有UDP首部而没有数据部分）给远端进程。</span><br><span class=\"line\"><span class=\"keyword\">from</span>和addrlen可以同时为NULL，表示不关心发送方地址信息</span><br><span class=\"line\"></span><br><span class=\"line\">Client-----&gt;Server</span><br><span class=\"line\"><span class=\"number\">1.</span> login request</span><br><span class=\"line\"><span class=\"number\">2.</span> private_chat request</span><br><span class=\"line\"><span class=\"number\">3.</span> group_chat request</span><br><span class=\"line\"><span class=\"number\">4.</span> get userlist request</span><br><span class=\"line\">Server-----&gt;Client</span><br><span class=\"line\"><span class=\"number\">1.</span> login response</span><br><span class=\"line\"><span class=\"number\">2.</span> private_chat response</span><br><span class=\"line\"><span class=\"number\">3.</span> get userlist response</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>网络通信</p>","more":"<h1 id=\"1-概述\"><a href=\"#1-概述\" class=\"headerlink\" title=\"1. 概述\"></a>1. 概述</h1><p>电路交换<br>报文交换<br>分组交换<br>网络：使用某种媒介将不同地点的计算机连接起来，<br>      以达到信息交换、资源共享的目的<br>互联网：internet 网络互联  网网相联<br>因特网：Internet<br>协议：<br>要想让两台计算机进行通信，必须使它们采用相同的信息交换规则<br>计算机网络中用于规定信息的格式以及如何发送和接收信息的一套规则称为网络协议（network protocol）或通信协议（communication protocol），简称协议（Protocol）<br>其实就是用来说明网络中传输的二进制数据具体含义和作用的上下文<br>PDU：Protocol Data Unit 协议数据单元<br>    即协议对应的具体二进制数据<br>两种协议数据组织形式：</p>\n<ol>\n<li>文本</li>\n<li>二进制<br>局域网：<br>以太网<br>因特网：TCP/IP协议族：TCP、IP、UDP、FTP、HTTP、RARP、SCTP<br> TCP/IP栈<br>OSI<br>TCP/IP五层模型：<br>应用层：直接为用户的应用进程提供服务<br>传输层：负责两个主机中进程之间的通信<br>网络层：负责不同主机之间的通信<br>数据链路层：负责相邻设备间的通信<br>物理层：负责传输比特流<br>MAC地址：网卡的每个网口有一个身份标识<br> 物理地址<br>IP地址：Internet网上每台主机的身份标识<br>三种表示形式：</li>\n<li>4字节无符号整型</li>\n<li>点分十进制字符串:用.间隔四个0~255间的整型数所对应的字符串<br>“192.168.1.66”</li>\n<li>域名<br><a href=\"http://www.sina.com/\">www.sina.com</a><br><a href=\"http://www.baidu.com/\">www.baidu.com</a><br>域名—-&gt;4字节无符号整型<br>struct hostent *gethostbyname(const char *name)<br>功能：将域名发送给域名服务器，域名服务器发回IP地址等信息<br>   因此该函数要求电脑联网<br>返回值：返回的是调用进程数据区一块空间的首地址<br> （因此无需释放）<br> （后一次调用会覆盖前一次调用产生的结果）<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">struct hostent</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tchar *h_name;</span><br><span class=\"line\">\tchar **h_aliases;<span class=\"comment\">//二次指向空间存放着域名别名</span></span><br><span class=\"line\">\tint  h_addrtype;<span class=\"comment\">//始终为AF_INET宏常量</span></span><br><span class=\"line\">\tint  h_length;  <span class=\"comment\">//始终为4</span></span><br><span class=\"line\">\tchar **h_addr_list;<span class=\"comment\">//二次指向空间存放着4字节整型IP地址</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">h_addr_list在程序中先强制转换成struct in_addr **二级指针来使用</span><br><span class=\"line\">struct in_addr</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tin_addr_t s_addr;<span class=\"comment\">//in_addr_t是unsigned int类型的别名</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">char *inet_ntoa(struct in_addr <span class=\"keyword\">in</span>);</span><br><span class=\"line\">功能：将<span class=\"number\">4</span>字节整型IP地址转换成点分十进制字符串式IP地址</span><br><span class=\"line\">返回值：返回保存字符串的空间首地址</span><br><span class=\"line\">        返回的是调用进程数据区一块空间的首地址</span><br><span class=\"line\">       （因此无需释放）</span><br><span class=\"line\">       （后一次调用会覆盖前一次调用产生的结果）</span><br><span class=\"line\">       </span><br><span class=\"line\">int  inet_aton(<span class=\"keyword\">const</span> char *cp,struct in_addr *inp);</span><br><span class=\"line\">功能：将点分十进制字符串式IP地址转换成<span class=\"number\">4</span>字节整型IP地址</span><br><span class=\"line\">参数：</span><br><span class=\"line\">\tcp：点分十进制字符串式IP地址</span><br><span class=\"line\">\tinp：其指向空间用于存放转换结果</span><br><span class=\"line\">返回值：成功为非<span class=\"number\">0</span>，失败为<span class=\"number\">0</span></span><br></pre></td></tr></table></figure>\n网络号+主机号<br>主机号全0,该IP地址为对应网络的IP地址<br>主机号全1,为对应网络的广播地址<br>5类IP地址</li>\n<li>0.0.1 本地环回<br>端口号：表示不同操作系统上不同进程身份的数字<br>16位整数<br>熟知端口，也称知名端口。范围从0到1023，如21ftp，80http<br>动态端口，范围从1024到65535，这些端口号一般不固定分配给某个服务，<br>也就是说许多服务都可以使用这些端口</li>\n</ol>\n<h1 id=\"2-UDP与TCP\"><a href=\"#2-UDP与TCP\" class=\"headerlink\" title=\"2. UDP与TCP\"></a>2. UDP与TCP</h1><p>TCP:面向连接的可靠的流式传输<br>    面向连接：收发数据前通讯双方需要建立好连接<br>    可靠：确保发送的成功或失败<br>    流式：确保数据次序<br>    服务器：提供服务的进程<br>    客户端：使用服务的进程<br>UDP：非面向连接的不可靠的数据报式传输<br>TCP:<br>socket：套接字<br>        英文原意：插头、插排、插孔的统称<br>        五属性：<br>        1. 协议族  AF_INET （Internet的TCP/IP协议族）<br>        2. 本地的IP地址<br>        3. 本地的端口号<br>        4. 对端的IP地址（插排没有）<br>        5. 对端的端口号（插排没有）<br>        IP地址+端口号 —-&gt;socket地址<br>int socket(int domain,int type,int protocol)<br>domain:指定协议族，因特网的TCP/IP协议族用AF_INET<br>type：传输方式,SOCK_STREAM:流式传输<br>               SOCK_DGRAM:数据报传输<br>protocol：指定传输层协议，填0时,socket函数会根据type参数来指定默认协议<br>          type是SOCK_STREAM时默认协议为TCP<br>          type是SOCK_DGRAM时默认协议为UDP<br>字节序：整型数在其内存空间中的存放次序</p>\n<ol>\n<li>数的低位放在低地址：小(低)端字节序 little-endian</li>\n<li>数的高位放在低地址：大(高)端字节序 big-endian<br>网络字节序：大端字节序<br>struct sockaddr_in：因特网专用socket地址结构<br>struct sockaddr :通用socke地址结构<br>TCP客户端通过三路握手与服务器建立好连接<br>一个可以收发数据的socket必须五属性具备才能收发数据：<br>客户端socket什么时候指定五属性：</li>\n<li>socket函数指定协议族</li>\n<li>connect函数先指定对端（服务器）的IP地址、端口号</li>\n<li>connect函数再指定本地（客户端）的IP地址、端口号<br>服务器端使用accept函数返回socket(插孔)与客户端进行数据交互：</li>\n<li>协议族由accept函数指定为与第一个参数（建立连接用的socket）的协议族相同的协议族</li>\n<li>accept函数先指定对端（客户端）的IP地址、端口号<br>该客户端就是已经与服务器建立好连接的客户端</li>\n<li>accept函数再指定本地（服务器）的IP地址、端口号<br>实际就是第一个参数（建立连接用的socket）的IP地址、端口号</li>\n</ol>\n<h1 id=\"3-模板\"><a href=\"#3-模板\" class=\"headerlink\" title=\"3. 模板\"></a>3. 模板</h1><figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">TCP客户端代码模板：</span><br><span class=\"line\">int sockfd = -<span class=\"number\">1</span>;</span><br><span class=\"line\">struct sockaddr_in servaddr;</span><br><span class=\"line\">int ret = <span class=\"number\">0</span>;</span><br><span class=\"line\">sockfd = socket(AF_INET,SOCK_STREAM,<span class=\"number\">0</span>);<span class=\"comment\">//创建套接字</span></span><br><span class=\"line\"><span class=\"comment\">/*填写服务器IP地址端口号*/</span></span><br><span class=\"line\">bzero(&amp;servaddr, sizeof(servaddr));</span><br><span class=\"line\">servaddr.sin_family = AF_INET; <span class=\"comment\">//指定协议族</span></span><br><span class=\"line\">servaddr.sin_port = htons(xxx); <span class=\"comment\">//指定服务器端口号</span></span><br><span class=\"line\">inet_aton(“a.b.c.d”, &amp;servaddr.sin_addr);<span class=\"comment\">//指定服务器IP地址</span></span><br><span class=\"line\"><span class=\"comment\">//通过三路握手连接服务器</span></span><br><span class=\"line\">ret = connect(sockfd,  (struct sockaddr *)&amp;servaddr,  sizeof(struct sockaddr_in));</span><br><span class=\"line\"><span class=\"keyword\">if</span>(ret &lt; <span class=\"number\">0</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tprintf(<span class=\"string\">&quot;connect failed\\n&quot;</span>);</span><br><span class=\"line\">\t<span class=\"comment\">//出错处理</span></span><br><span class=\"line\">&#125;\t</span><br><span class=\"line\"><span class=\"comment\">//……数据传输</span></span><br><span class=\"line\">close(sockfd);<span class=\"comment\">//关闭套接字</span></span><br><span class=\"line\">int connect(int sockfd, <span class=\"keyword\">const</span> struct sockaddr *servaddr, socklen_t addrlen);</span><br><span class=\"line\">功能：通过三路握手建立与TCP服务器的连接</span><br><span class=\"line\">返回值：成功为<span class=\"number\">0</span>，失败 &lt; <span class=\"number\">0</span></span><br><span class=\"line\">参数说明：</span><br><span class=\"line\">sockfd：socket函数返回的socket描述符</span><br><span class=\"line\">servaddr：指向与协议族相符的地址结构指针</span><br><span class=\"line\">addrlen：实际地址结构的大小</span><br><span class=\"line\">备注：对于AF_INET协议族，其地址组成为IP地址+端口号，</span><br><span class=\"line\">      结构为struct  sockaddr_in</span><br><span class=\"line\">TCP服务器代码模板：</span><br><span class=\"line\">int servfd = -<span class=\"number\">1</span>;int datafd = -<span class=\"number\">1</span>;</span><br><span class=\"line\">struct sockaddr_in  servaddr;</span><br><span class=\"line\">int ret = <span class=\"number\">0</span>;</span><br><span class=\"line\">servfd = socket(AF_INET, SOCK_STREAM, <span class=\"number\">0</span>);<span class=\"comment\">//创建主动套接字（插头）</span></span><br><span class=\"line\"><span class=\"comment\">/*填写服务端自身IP地址和端口号*/</span></span><br><span class=\"line\">bzero(&amp;servaddr, sizeof(servaddr));<span class=\"comment\">//</span></span><br><span class=\"line\">servaddr.sin_family = AF_INET;<span class=\"comment\">//指定协议族</span></span><br><span class=\"line\">inet_aton(“a.b.c.d”, &amp;servaddr.sin_addr)<span class=\"comment\">//指定服务器IP地址</span></span><br><span class=\"line\">servaddr.sin_port = htons(xxx);<span class=\"comment\">//指定服务器端口号</span></span><br><span class=\"line\"><span class=\"comment\">/*服务器端IP地址和端口号必须告诉客户端知道，</span></span><br><span class=\"line\"><span class=\"comment\">  因此不能有系统自动指定，只能通过bind函数自己来指定，</span></span><br><span class=\"line\"><span class=\"comment\">  必须与客户端connect函数所用的IP地址与端口号一致*/</span></span><br><span class=\"line\">ret = bind(servfd, (struct sockaddr *) &amp;servaddr, sizeof(servaddr));</span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">\tlisten函数功能是将主动套接字（插头）变为被动套接字（插排），</span></span><br><span class=\"line\"><span class=\"comment\">\t然后通知被动套接字开始监听处理客户端连接请求。</span></span><br><span class=\"line\"><span class=\"comment\">\t通知完后就返回了，因此该函数并不阻塞</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\">ret += listen(servfd, <span class=\"number\">5</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span>(ret &lt; <span class=\"number\">0</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tprintf(<span class=\"string\">&quot;bind or listen failed\\n&quot;</span>);</span><br><span class=\"line\">\t<span class=\"comment\">//出错处理\t\t</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">while</span>(<span class=\"number\">1</span>) </span><br><span class=\"line\">&#123;\t</span><br><span class=\"line\">   <span class=\"comment\">/*accept函数只有当有客户端与服务器连接建立成功后才返回。</span></span><br><span class=\"line\"><span class=\"comment\">     如果没有客户端发起连接请求或者连接请求还没有处理完毕</span></span><br><span class=\"line\"><span class=\"comment\">     该函数将一直阻塞到有连接建立成功。</span></span><br><span class=\"line\"><span class=\"comment\">     返回的是可以与已经建立好连接的客户端交互数据用的套接字（插孔）*/</span></span><br><span class=\"line\">   datafd = accept(servfd,NULL,NULL);   </span><br><span class=\"line\">   <span class=\"comment\">//……数据传输   </span></span><br><span class=\"line\">   close(datafd);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">close(servfd);</span><br><span class=\"line\">int bind(int sockfd,  <span class=\"keyword\">const</span> struct sockaddr  *  myaddr, socklen_t addrlen);</span><br><span class=\"line\">功能：将本地协议地址赋予指定的socket描述符</span><br><span class=\"line\">返回值：成功为<span class=\"number\">0</span>，失败 &lt; <span class=\"number\">0</span></span><br><span class=\"line\">参数：</span><br><span class=\"line\">sockfd： socket函数返回的socket描述符</span><br><span class=\"line\">myaddr：指向与协议族相符的地址结构指针</span><br><span class=\"line\">addrlen：实际地址结构的大小</span><br><span class=\"line\">备注：对于AF_INET协议族，其地址组成为IP地址+端口号，</span><br><span class=\"line\">      结构为struct  sockaddr_in</span><br><span class=\"line\">int  listen(int  sockfd,  int  backlog);</span><br><span class=\"line\">功能：将主动套接字改为被动套接字（用来接受指向该套接字的连接请求），</span><br><span class=\"line\">      并设定套接字排队的最大连接个数。</span><br><span class=\"line\">      该函数不会阻塞。只是通知被动套接字可以开始处理连接请求</span><br><span class=\"line\">返回值：成功<span class=\"number\">0</span>，失败 &lt; <span class=\"number\">0</span></span><br><span class=\"line\">参数：</span><br><span class=\"line\">sockfd：用来专门处理客户端连接请求的套接字描述符（即服务器端自己调用socket函数产生的描述符）</span><br><span class=\"line\">backlog：指定管理连接请求的队列长度</span><br><span class=\"line\">系统针对每个被动套接字采用两个队列管理连接请求：</span><br><span class=\"line\">未完成连接队列</span><br><span class=\"line\">已完成连接队列</span><br><span class=\"line\">backlog实际上是一个基数，两个队列的长度由这个基数采用一定算法计算而得。</span><br><span class=\"line\">一般情况下backlog经验值为<span class=\"number\">5</span>-<span class=\"number\">20</span>。</span><br><span class=\"line\">对于大型服务器（如新浪主机）一般指定为系统能支持的最大数。</span><br><span class=\"line\">int accept(int sockfd,  struct sockaddr * cliaddr, socklen_t * addrlen);</span><br><span class=\"line\">功能：从已完成连接队列的对头返回一个已完成连接，队列空则阻塞等已完成的连接</span><br><span class=\"line\">返回值：成功返回已完成连接对应的socket描述符，服务器通过这个描述符与请求连接的客户端进行数据传输。</span><br><span class=\"line\">        失败 &lt; <span class=\"number\">0</span></span><br><span class=\"line\">参数：</span><br><span class=\"line\">sockfd：监听套接字（即服务器用来处理连接请求专用的被动套接字）。</span><br><span class=\"line\">cliaddr：返回已连接的对端进程（客户端）的协议地址。</span><br><span class=\"line\">addrlen：值-结果参数，调用前指定cliaddr的地址结构长度，返回后保存</span><br><span class=\"line\">                     对应地址结构的确切字节数。</span><br><span class=\"line\">如果不关心客户端地址cliaddr和addrlen可以置为NULL。</span><br><span class=\"line\">本函数会阻塞。</span><br><span class=\"line\">通用读写函数</span><br><span class=\"line\">ssize_t read(int fd, <span class=\"keyword\">void</span> *buf, size_t count);</span><br><span class=\"line\">ssize_t write (int fd,<span class=\"keyword\">const</span> <span class=\"keyword\">void</span> * buf,size_t count);</span><br><span class=\"line\">网络编程专用读写函数</span><br><span class=\"line\">ssize_t recv(int sockfd, <span class=\"keyword\">void</span> *buff,size_t nbytes,int flags);</span><br><span class=\"line\">ssize_t send(int sockfd, <span class=\"keyword\">const</span> <span class=\"keyword\">void</span> *buff,size_t nbytes,int flags);</span><br><span class=\"line\">当fd为TCP socket描述符时，read和recv函数如果返回为<span class=\"number\">0</span>表示对端已经关闭连接</span><br><span class=\"line\">flags为<span class=\"number\">0</span>时，接收发送阻塞，为MSG_DONTWAIT时接收发送非阻塞</span><br><span class=\"line\"></span><br><span class=\"line\">UDP编程：</span><br><span class=\"line\">ssize_t sendto(int sockfd,</span><br><span class=\"line\">               <span class=\"keyword\">const</span> <span class=\"keyword\">void</span> * buff,</span><br><span class=\"line\">               size_t nbytes,</span><br><span class=\"line\">               int flags, </span><br><span class=\"line\">               <span class=\"keyword\">const</span> struct sockaddr * to,  </span><br><span class=\"line\">               socklen_t   addrlen);</span><br><span class=\"line\">功能：向指定地址发送期望字节数量的数据</span><br><span class=\"line\">返回值：成功返回实际发送的字节数。失败 &lt; <span class=\"number\">0</span></span><br><span class=\"line\">参数：</span><br><span class=\"line\">sockfd、buff、nbytes、flags：含义同send函数</span><br><span class=\"line\">to：指向接收者的协议地址结构指针。</span><br><span class=\"line\">addrlen：to所用的地址结构的字节长度。</span><br><span class=\"line\">ssize_t recvfrom(int sockfd,</span><br><span class=\"line\">                 <span class=\"keyword\">void</span> * buff,</span><br><span class=\"line\">                 size_t nbytes,</span><br><span class=\"line\">                 int flags, </span><br><span class=\"line\">                 struct sockaddr * <span class=\"keyword\">from</span>,</span><br><span class=\"line\">                 socklen_t  * addrlen);</span><br><span class=\"line\">功能：从指定的UDP-Socket里接收数据，同时填充发送方的协议地址结构</span><br><span class=\"line\">返回值：成功返回实际接收到的字节数。失败 &lt; <span class=\"number\">0</span></span><br><span class=\"line\">参数：</span><br><span class=\"line\">sockfd、buff、nbytes、flags：含义同recv函数</span><br><span class=\"line\"><span class=\"keyword\">from</span>：指向发送方的协议地址结构指针，类似于accept对应参数的含义，用于保存发送方地址，以便于通过sendto回应对方相应数据。</span><br><span class=\"line\">addrlen：<span class=\"keyword\">from</span>所用的地址结构的字节长度，类似于accept对应参数的含义，指出实际使用的地址结构长度。</span><br><span class=\"line\">返回<span class=\"number\">0</span>是可接受的正确的结果，并非表示socket关闭，意味着可以发送空的UDP数据报（只有UDP首部而没有数据部分）给远端进程。</span><br><span class=\"line\"><span class=\"keyword\">from</span>和addrlen可以同时为NULL，表示不关心发送方地址信息</span><br><span class=\"line\"></span><br><span class=\"line\">Client-----&gt;Server</span><br><span class=\"line\"><span class=\"number\">1.</span> login request</span><br><span class=\"line\"><span class=\"number\">2.</span> private_chat request</span><br><span class=\"line\"><span class=\"number\">3.</span> group_chat request</span><br><span class=\"line\"><span class=\"number\">4.</span> get userlist request</span><br><span class=\"line\">Server-----&gt;Client</span><br><span class=\"line\"><span class=\"number\">1.</span> login response</span><br><span class=\"line\"><span class=\"number\">2.</span> private_chat response</span><br><span class=\"line\"><span class=\"number\">3.</span> get userlist response</span><br></pre></td></tr></table></figure>"},{"title":"QDir使用笔记","date":"2022-04-20T16:00:00.000Z","top":1,"_content":"QDir使用笔记\n<!--more-->\n\n```c++\nQStringList GraphicsFileMap\n\nstartsWith()  //检测字符串是否以某个特定的串开始\nendsWith()    //检测字符串是否以某个特定的串结尾\n\n//遍历图片目录\nvoid ATS_UI_Process::findPictList(const QString picPath)\n{\n    QDir dir(picPath);  //图片文件路径\n    if (!dir.exists()) {\n        return;\n    }\n    //取到所有的文件和文件名，但是去掉.和..的文件夹（这是QT默认有的）\n    dir.setFilter(QDir::Dirs | QDir::Files | QDir::NoDotAndDotDot);\n    //排序,文件夹优先\n    dir.setSorting(QDir::DirsFirst);\n    //遍历路径下目录\n    QFileInfoList list = dir.entryInfoList();\n    //遍历文件\n    QStringList infolist = dir.entryList(QDir::Files | QDir::NoDotAndDotDot);\n    int i = 0;\n    int listSize = list.size();\n    //递归\n    do {\n        QFileInfo fileInfo = list.at(i);\n        //如果是文件夹，递归\n        if (fileInfo.isDir()) {\n            findPictList(fileInfo.filePath());\n        }\n        else {\n            /* 检索 */\n            int size = infolist.size();\n            for (int cnt = 0; cnt < size; ++cnt) {\n                QString it = infolist[cnt];\n                if (it.endsWith(\".BMP\") || it.endsWith(\".JPG\") || it.endsWith(\".GIF\") || it.endsWith(\".bmp\") || it.endsWith(\".jpg\") || it.endsWith(\".gif\")) {\n                    infolist[cnt] = picPath + \"//\" + it;  //添加图片路径\n                }\n                else {\n                    infolist.removeAt(cnt);\n                }\n            }\n            /* 去重 */\n            for (auto sIt : GraphicsFileMap) {\n                QFileInfo sInfo(sIt);\n                for (auto tIt : infolist) {\n                    QFileInfo tInfo(tIt);\n                    if (sInfo.baseName() == tInfo.baseName()) {\n                        infolist.removeOne(tIt);\n                    }\n                }\n            }\n            /* 追加图片列表 */\n            GraphicsFileMap += infolist;\n            break;  //遍历完当前路径文件后结束\n        }\n        i++;\n    } while (i < listSize);\n}\n```","source":"_posts/QDir.md","raw":"---\ntitle: QDir使用笔记\ndate: 2022-4-21\ntop: 1\ntags:\n\tqt/c++\n---\nQDir使用笔记\n<!--more-->\n\n```c++\nQStringList GraphicsFileMap\n\nstartsWith()  //检测字符串是否以某个特定的串开始\nendsWith()    //检测字符串是否以某个特定的串结尾\n\n//遍历图片目录\nvoid ATS_UI_Process::findPictList(const QString picPath)\n{\n    QDir dir(picPath);  //图片文件路径\n    if (!dir.exists()) {\n        return;\n    }\n    //取到所有的文件和文件名，但是去掉.和..的文件夹（这是QT默认有的）\n    dir.setFilter(QDir::Dirs | QDir::Files | QDir::NoDotAndDotDot);\n    //排序,文件夹优先\n    dir.setSorting(QDir::DirsFirst);\n    //遍历路径下目录\n    QFileInfoList list = dir.entryInfoList();\n    //遍历文件\n    QStringList infolist = dir.entryList(QDir::Files | QDir::NoDotAndDotDot);\n    int i = 0;\n    int listSize = list.size();\n    //递归\n    do {\n        QFileInfo fileInfo = list.at(i);\n        //如果是文件夹，递归\n        if (fileInfo.isDir()) {\n            findPictList(fileInfo.filePath());\n        }\n        else {\n            /* 检索 */\n            int size = infolist.size();\n            for (int cnt = 0; cnt < size; ++cnt) {\n                QString it = infolist[cnt];\n                if (it.endsWith(\".BMP\") || it.endsWith(\".JPG\") || it.endsWith(\".GIF\") || it.endsWith(\".bmp\") || it.endsWith(\".jpg\") || it.endsWith(\".gif\")) {\n                    infolist[cnt] = picPath + \"//\" + it;  //添加图片路径\n                }\n                else {\n                    infolist.removeAt(cnt);\n                }\n            }\n            /* 去重 */\n            for (auto sIt : GraphicsFileMap) {\n                QFileInfo sInfo(sIt);\n                for (auto tIt : infolist) {\n                    QFileInfo tInfo(tIt);\n                    if (sInfo.baseName() == tInfo.baseName()) {\n                        infolist.removeOne(tIt);\n                    }\n                }\n            }\n            /* 追加图片列表 */\n            GraphicsFileMap += infolist;\n            break;  //遍历完当前路径文件后结束\n        }\n        i++;\n    } while (i < listSize);\n}\n```","slug":"QDir","published":1,"updated":"2022-04-21T07:15:22.870Z","_id":"cl28nu9uh000084vn226gcux6","comments":1,"layout":"post","photos":[],"link":"","content":"<p>QDir使用笔记</p>\n<span id=\"more\"></span>\n\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">QStringList GraphicsFileMap</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">startsWith</span><span class=\"params\">()</span>  <span class=\"comment\">//检测字符串是否以某个特定的串开始</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">endsWith</span><span class=\"params\">()</span>    <span class=\"comment\">//检测字符串是否以某个特定的串结尾</span></span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"comment\">//遍历图片目录</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">ATS_UI_Process::findPictList</span><span class=\"params\">(<span class=\"keyword\">const</span> QString picPath)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"function\">QDir <span class=\"title\">dir</span><span class=\"params\">(picPath)</span></span>;  <span class=\"comment\">//图片文件路径</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!dir.<span class=\"built_in\">exists</span>()) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//取到所有的文件和文件名，但是去掉.和..的文件夹（这是QT默认有的）</span></span><br><span class=\"line\">    dir.<span class=\"built_in\">setFilter</span>(QDir::Dirs | QDir::Files | QDir::NoDotAndDotDot);</span><br><span class=\"line\">    <span class=\"comment\">//排序,文件夹优先</span></span><br><span class=\"line\">    dir.<span class=\"built_in\">setSorting</span>(QDir::DirsFirst);</span><br><span class=\"line\">    <span class=\"comment\">//遍历路径下目录</span></span><br><span class=\"line\">    QFileInfoList list = dir.<span class=\"built_in\">entryInfoList</span>();</span><br><span class=\"line\">    <span class=\"comment\">//遍历文件</span></span><br><span class=\"line\">    QStringList infolist = dir.<span class=\"built_in\">entryList</span>(QDir::Files | QDir::NoDotAndDotDot);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> listSize = list.<span class=\"built_in\">size</span>();</span><br><span class=\"line\">    <span class=\"comment\">//递归</span></span><br><span class=\"line\">    <span class=\"keyword\">do</span> &#123;</span><br><span class=\"line\">        QFileInfo fileInfo = list.<span class=\"built_in\">at</span>(i);</span><br><span class=\"line\">        <span class=\"comment\">//如果是文件夹，递归</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (fileInfo.<span class=\"built_in\">isDir</span>()) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">findPictList</span>(fileInfo.<span class=\"built_in\">filePath</span>());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">/* 检索 */</span></span><br><span class=\"line\">            <span class=\"keyword\">int</span> size = infolist.<span class=\"built_in\">size</span>();</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> cnt = <span class=\"number\">0</span>; cnt &lt; size; ++cnt) &#123;</span><br><span class=\"line\">                QString it = infolist[cnt];</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (it.<span class=\"built_in\">endsWith</span>(<span class=\"string\">&quot;.BMP&quot;</span>) || it.<span class=\"built_in\">endsWith</span>(<span class=\"string\">&quot;.JPG&quot;</span>) || it.<span class=\"built_in\">endsWith</span>(<span class=\"string\">&quot;.GIF&quot;</span>) || it.<span class=\"built_in\">endsWith</span>(<span class=\"string\">&quot;.bmp&quot;</span>) || it.<span class=\"built_in\">endsWith</span>(<span class=\"string\">&quot;.jpg&quot;</span>) || it.<span class=\"built_in\">endsWith</span>(<span class=\"string\">&quot;.gif&quot;</span>)) &#123;</span><br><span class=\"line\">                    infolist[cnt] = picPath + <span class=\"string\">&quot;//&quot;</span> + it;  <span class=\"comment\">//添加图片路径</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    infolist.<span class=\"built_in\">removeAt</span>(cnt);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">/* 去重 */</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> sIt : GraphicsFileMap) &#123;</span><br><span class=\"line\">                <span class=\"function\">QFileInfo <span class=\"title\">sInfo</span><span class=\"params\">(sIt)</span></span>;</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> tIt : infolist) &#123;</span><br><span class=\"line\">                    <span class=\"function\">QFileInfo <span class=\"title\">tInfo</span><span class=\"params\">(tIt)</span></span>;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (sInfo.<span class=\"built_in\">baseName</span>() == tInfo.<span class=\"built_in\">baseName</span>()) &#123;</span><br><span class=\"line\">                        infolist.<span class=\"built_in\">removeOne</span>(tIt);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">/* 追加图片列表 */</span></span><br><span class=\"line\">            GraphicsFileMap += infolist;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;  <span class=\"comment\">//遍历完当前路径文件后结束</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        i++;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">while</span> (i &lt; listSize);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>QDir使用笔记</p>","more":"<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">QStringList GraphicsFileMap</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">startsWith</span><span class=\"params\">()</span>  <span class=\"comment\">//检测字符串是否以某个特定的串开始</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">endsWith</span><span class=\"params\">()</span>    <span class=\"comment\">//检测字符串是否以某个特定的串结尾</span></span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"comment\">//遍历图片目录</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">ATS_UI_Process::findPictList</span><span class=\"params\">(<span class=\"keyword\">const</span> QString picPath)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"function\">QDir <span class=\"title\">dir</span><span class=\"params\">(picPath)</span></span>;  <span class=\"comment\">//图片文件路径</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!dir.<span class=\"built_in\">exists</span>()) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//取到所有的文件和文件名，但是去掉.和..的文件夹（这是QT默认有的）</span></span><br><span class=\"line\">    dir.<span class=\"built_in\">setFilter</span>(QDir::Dirs | QDir::Files | QDir::NoDotAndDotDot);</span><br><span class=\"line\">    <span class=\"comment\">//排序,文件夹优先</span></span><br><span class=\"line\">    dir.<span class=\"built_in\">setSorting</span>(QDir::DirsFirst);</span><br><span class=\"line\">    <span class=\"comment\">//遍历路径下目录</span></span><br><span class=\"line\">    QFileInfoList list = dir.<span class=\"built_in\">entryInfoList</span>();</span><br><span class=\"line\">    <span class=\"comment\">//遍历文件</span></span><br><span class=\"line\">    QStringList infolist = dir.<span class=\"built_in\">entryList</span>(QDir::Files | QDir::NoDotAndDotDot);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> listSize = list.<span class=\"built_in\">size</span>();</span><br><span class=\"line\">    <span class=\"comment\">//递归</span></span><br><span class=\"line\">    <span class=\"keyword\">do</span> &#123;</span><br><span class=\"line\">        QFileInfo fileInfo = list.<span class=\"built_in\">at</span>(i);</span><br><span class=\"line\">        <span class=\"comment\">//如果是文件夹，递归</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (fileInfo.<span class=\"built_in\">isDir</span>()) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">findPictList</span>(fileInfo.<span class=\"built_in\">filePath</span>());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">/* 检索 */</span></span><br><span class=\"line\">            <span class=\"keyword\">int</span> size = infolist.<span class=\"built_in\">size</span>();</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> cnt = <span class=\"number\">0</span>; cnt &lt; size; ++cnt) &#123;</span><br><span class=\"line\">                QString it = infolist[cnt];</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (it.<span class=\"built_in\">endsWith</span>(<span class=\"string\">&quot;.BMP&quot;</span>) || it.<span class=\"built_in\">endsWith</span>(<span class=\"string\">&quot;.JPG&quot;</span>) || it.<span class=\"built_in\">endsWith</span>(<span class=\"string\">&quot;.GIF&quot;</span>) || it.<span class=\"built_in\">endsWith</span>(<span class=\"string\">&quot;.bmp&quot;</span>) || it.<span class=\"built_in\">endsWith</span>(<span class=\"string\">&quot;.jpg&quot;</span>) || it.<span class=\"built_in\">endsWith</span>(<span class=\"string\">&quot;.gif&quot;</span>)) &#123;</span><br><span class=\"line\">                    infolist[cnt] = picPath + <span class=\"string\">&quot;//&quot;</span> + it;  <span class=\"comment\">//添加图片路径</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    infolist.<span class=\"built_in\">removeAt</span>(cnt);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">/* 去重 */</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> sIt : GraphicsFileMap) &#123;</span><br><span class=\"line\">                <span class=\"function\">QFileInfo <span class=\"title\">sInfo</span><span class=\"params\">(sIt)</span></span>;</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> tIt : infolist) &#123;</span><br><span class=\"line\">                    <span class=\"function\">QFileInfo <span class=\"title\">tInfo</span><span class=\"params\">(tIt)</span></span>;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (sInfo.<span class=\"built_in\">baseName</span>() == tInfo.<span class=\"built_in\">baseName</span>()) &#123;</span><br><span class=\"line\">                        infolist.<span class=\"built_in\">removeOne</span>(tIt);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">/* 追加图片列表 */</span></span><br><span class=\"line\">            GraphicsFileMap += infolist;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;  <span class=\"comment\">//遍历完当前路径文件后结束</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        i++;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">while</span> (i &lt; listSize);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"QButtonGroup简单使用","date":"2022-04-20T16:00:00.000Z","top":1,"_content":"QButtonGroup简单使用\n<!--more-->\n\n```c++\n    QButtonGroup *fileButton = new QButtonGroup(this);\n    QPushButton *NewFileBtn = new QPushButton();\n    QPushButton *UpdateFileBtn = new QPushButton();\n    QPushButton *CopyFileBtn = new QPushButton();\n\n    fileButton->addButton(ui->NewFileBtn,0);\n    fileButton->addButton(ui->UpdateFileBtn,1);\n    fileButton->addButton(ui->CopyFileBtn,2);\n\n    connect(fileButton,SIGNAL(buttonClicked(int)),this,SLOT(btnSetSlot(int)));\n\t\n    void btnSetSlot(int index)\n    {\n        /* --- */\n    }\n```","source":"_posts/QButtonGroup简单使用.md","raw":"---\ntitle: QButtonGroup简单使用\ndate: 2022-4-21\ntop: 1\ntags:\n\tqt/c++\n---\nQButtonGroup简单使用\n<!--more-->\n\n```c++\n    QButtonGroup *fileButton = new QButtonGroup(this);\n    QPushButton *NewFileBtn = new QPushButton();\n    QPushButton *UpdateFileBtn = new QPushButton();\n    QPushButton *CopyFileBtn = new QPushButton();\n\n    fileButton->addButton(ui->NewFileBtn,0);\n    fileButton->addButton(ui->UpdateFileBtn,1);\n    fileButton->addButton(ui->CopyFileBtn,2);\n\n    connect(fileButton,SIGNAL(buttonClicked(int)),this,SLOT(btnSetSlot(int)));\n\t\n    void btnSetSlot(int index)\n    {\n        /* --- */\n    }\n```","slug":"QButtonGroup简单使用","published":1,"updated":"2022-04-21T07:18:47.126Z","_id":"cl28nxzrr000074vn9fea8d23","comments":1,"layout":"post","photos":[],"link":"","content":"<p>QButtonGroup简单使用</p>\n<span id=\"more\"></span>\n\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">QButtonGroup *fileButton = <span class=\"keyword\">new</span> <span class=\"built_in\">QButtonGroup</span>(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">QPushButton *NewFileBtn = <span class=\"keyword\">new</span> <span class=\"built_in\">QPushButton</span>();</span><br><span class=\"line\">QPushButton *UpdateFileBtn = <span class=\"keyword\">new</span> <span class=\"built_in\">QPushButton</span>();</span><br><span class=\"line\">QPushButton *CopyFileBtn = <span class=\"keyword\">new</span> <span class=\"built_in\">QPushButton</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">fileButton-&gt;<span class=\"built_in\">addButton</span>(ui-&gt;NewFileBtn,<span class=\"number\">0</span>);</span><br><span class=\"line\">fileButton-&gt;<span class=\"built_in\">addButton</span>(ui-&gt;UpdateFileBtn,<span class=\"number\">1</span>);</span><br><span class=\"line\">fileButton-&gt;<span class=\"built_in\">addButton</span>(ui-&gt;CopyFileBtn,<span class=\"number\">2</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">connect</span>(fileButton,<span class=\"built_in\">SIGNAL</span>(<span class=\"built_in\">buttonClicked</span>(<span class=\"keyword\">int</span>)),<span class=\"keyword\">this</span>,<span class=\"built_in\">SLOT</span>(<span class=\"built_in\">btnSetSlot</span>(<span class=\"keyword\">int</span>)));</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">btnSetSlot</span><span class=\"params\">(<span class=\"keyword\">int</span> index)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">/* --- */</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>QButtonGroup简单使用</p>","more":"<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">QButtonGroup *fileButton = <span class=\"keyword\">new</span> <span class=\"built_in\">QButtonGroup</span>(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">QPushButton *NewFileBtn = <span class=\"keyword\">new</span> <span class=\"built_in\">QPushButton</span>();</span><br><span class=\"line\">QPushButton *UpdateFileBtn = <span class=\"keyword\">new</span> <span class=\"built_in\">QPushButton</span>();</span><br><span class=\"line\">QPushButton *CopyFileBtn = <span class=\"keyword\">new</span> <span class=\"built_in\">QPushButton</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">fileButton-&gt;<span class=\"built_in\">addButton</span>(ui-&gt;NewFileBtn,<span class=\"number\">0</span>);</span><br><span class=\"line\">fileButton-&gt;<span class=\"built_in\">addButton</span>(ui-&gt;UpdateFileBtn,<span class=\"number\">1</span>);</span><br><span class=\"line\">fileButton-&gt;<span class=\"built_in\">addButton</span>(ui-&gt;CopyFileBtn,<span class=\"number\">2</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">connect</span>(fileButton,<span class=\"built_in\">SIGNAL</span>(<span class=\"built_in\">buttonClicked</span>(<span class=\"keyword\">int</span>)),<span class=\"keyword\">this</span>,<span class=\"built_in\">SLOT</span>(<span class=\"built_in\">btnSetSlot</span>(<span class=\"keyword\">int</span>)));</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">btnSetSlot</span><span class=\"params\">(<span class=\"keyword\">int</span> index)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">/* --- */</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cl206jlhp0001pkvncyt8942l","tag_id":"cl206jlhs0003pkvnbo2w9efq","_id":"cl206jlhw0008pkvn3ylj3msq"},{"post_id":"cl206jlhr0002pkvnbx296hcb","tag_id":"cl206jlhs0003pkvnbo2w9efq","_id":"cl206jlhy000cpkvn958u4e66"},{"post_id":"cl206jlhy000dpkvndd60epdp","tag_id":"cl206jlhs0003pkvnbo2w9efq","_id":"cl206jli0000gpkvn5vc060vt"},{"post_id":"cl206jlht0004pkvncyy9a6hv","tag_id":"cl206jlhs0003pkvnbo2w9efq","_id":"cl206jli0000hpkvnc0ykfrfc"},{"post_id":"cl206jlhv0006pkvn387v5lar","tag_id":"cl206jlhz000fpkvngxetb8fo","_id":"cl206jli0000jpkvn3yoyhpsp"},{"post_id":"cl206jlhw0009pkvn3ohub09f","tag_id":"cl206jli0000ipkvn80v995uy","_id":"cl206jli0000lpkvngsmp3e5h"},{"post_id":"cl206jlhx000apkvn60q4cbzl","tag_id":"cl206jli0000kpkvndo51d7ns","_id":"cl206jli1000npkvn4f63d5m2"},{"post_id":"cl206jlhz000epkvn4o5928nf","tag_id":"cl206jli1000mpkvn5yoraipp","_id":"cl206jli1000opkvn0e9s5arp"},{"post_id":"cl28nu9uh000084vn226gcux6","tag_id":"cl206jlhs0003pkvnbo2w9efq","_id":"cl28nu9uo000184vndzv434qq"},{"post_id":"cl28nxzrr000074vn9fea8d23","tag_id":"cl206jlhs0003pkvnbo2w9efq","_id":"cl28o1uxs000174vnbo082bcg"}],"Tag":[{"name":"qt/c++","_id":"cl206jlhs0003pkvnbo2w9efq"},{"name":"面试 c/c++","_id":"cl206jlhz000fpkvngxetb8fo"},{"name":"c/c++","_id":"cl206jli0000ipkvn80v995uy"},{"name":"makefile","_id":"cl206jli0000kpkvndo51d7ns"},{"name":"socket","_id":"cl206jli1000mpkvn5yoraipp"}]}}